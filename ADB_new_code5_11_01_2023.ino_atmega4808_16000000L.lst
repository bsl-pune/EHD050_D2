
C:\Users\Manish.Acharya\AppData\Local\Temp\arduino-sketch-195B3985AD0AC162D511265B126F71B3/ADB_new_code5_11_01_2023.ino.elf:     file format elf32-avr


Disassembly of section .text:

00000200 <__vectors>:
__vector_default():
../../../../crt1/gcrt1.S:61
     200:	0c 94 a9 0d 	jmp	0x1b52	; 0x1b52 <__dtors_end>
../../../../crt1/gcrt1.S:67
     204:	0c 94 d1 0d 	jmp	0x1ba2	; 0x1ba2 <__bad_interrupt>
../../../../crt1/gcrt1.S:68
     208:	0c 94 d1 0d 	jmp	0x1ba2	; 0x1ba2 <__bad_interrupt>
../../../../crt1/gcrt1.S:69
     20c:	0c 94 d1 0d 	jmp	0x1ba2	; 0x1ba2 <__bad_interrupt>
../../../../crt1/gcrt1.S:70
     210:	0c 94 d1 0d 	jmp	0x1ba2	; 0x1ba2 <__bad_interrupt>
../../../../crt1/gcrt1.S:71
     214:	0c 94 d1 0d 	jmp	0x1ba2	; 0x1ba2 <__bad_interrupt>
../../../../crt1/gcrt1.S:72
     218:	0c 94 0e 27 	jmp	0x4e1c	; 0x4e1c <__vector_6>
../../../../crt1/gcrt1.S:73
     21c:	0c 94 d1 0d 	jmp	0x1ba2	; 0x1ba2 <__bad_interrupt>
../../../../crt1/gcrt1.S:74
     220:	0c 94 d1 0d 	jmp	0x1ba2	; 0x1ba2 <__bad_interrupt>
../../../../crt1/gcrt1.S:75
     224:	0c 94 d1 0d 	jmp	0x1ba2	; 0x1ba2 <__bad_interrupt>
../../../../crt1/gcrt1.S:76
     228:	0c 94 d1 0d 	jmp	0x1ba2	; 0x1ba2 <__bad_interrupt>
../../../../crt1/gcrt1.S:77
     22c:	0c 94 d1 0d 	jmp	0x1ba2	; 0x1ba2 <__bad_interrupt>
../../../../crt1/gcrt1.S:78
     230:	0c 94 d1 0d 	jmp	0x1ba2	; 0x1ba2 <__bad_interrupt>
../../../../crt1/gcrt1.S:79
     234:	0c 94 d1 0d 	jmp	0x1ba2	; 0x1ba2 <__bad_interrupt>
../../../../crt1/gcrt1.S:80
     238:	0c 94 87 27 	jmp	0x4f0e	; 0x4f0e <__vector_14>
../../../../crt1/gcrt1.S:81
     23c:	0c 94 2a 28 	jmp	0x5054	; 0x5054 <__vector_15>
../../../../crt1/gcrt1.S:82
     240:	0c 94 d1 0d 	jmp	0x1ba2	; 0x1ba2 <__bad_interrupt>
../../../../crt1/gcrt1.S:83
     244:	0c 94 59 27 	jmp	0x4eb2	; 0x4eb2 <__vector_17>
../../../../crt1/gcrt1.S:84
     248:	0c 94 33 27 	jmp	0x4e66	; 0x4e66 <__vector_18>
../../../../crt1/gcrt1.S:85
     24c:	0c 94 d1 0d 	jmp	0x1ba2	; 0x1ba2 <__bad_interrupt>
../../../../crt1/gcrt1.S:86
     250:	0c 94 9f 26 	jmp	0x4d3e	; 0x4d3e <__vector_20>
../../../../crt1/gcrt1.S:87
     254:	0c 94 d1 0d 	jmp	0x1ba2	; 0x1ba2 <__bad_interrupt>
../../../../crt1/gcrt1.S:88
     258:	0c 94 d1 0d 	jmp	0x1ba2	; 0x1ba2 <__bad_interrupt>
../../../../crt1/gcrt1.S:89
     25c:	0c 94 d1 0d 	jmp	0x1ba2	; 0x1ba2 <__bad_interrupt>
../../../../crt1/gcrt1.S:90
     260:	0c 94 c4 26 	jmp	0x4d88	; 0x4d88 <__vector_24>
../../../../crt1/gcrt1.S:91
     264:	0c 94 2d 26 	jmp	0x4c5a	; 0x4c5a <__vector_25>
../../../../crt1/gcrt1.S:92
     268:	0c 94 d1 0d 	jmp	0x1ba2	; 0x1ba2 <__bad_interrupt>
../../../../crt1/gcrt1.S:93
     26c:	0c 94 d1 0d 	jmp	0x1ba2	; 0x1ba2 <__bad_interrupt>
../../../../crt1/gcrt1.S:94
     270:	0c 94 d1 0d 	jmp	0x1ba2	; 0x1ba2 <__bad_interrupt>
../../../../crt1/gcrt1.S:95
     274:	0c 94 55 26 	jmp	0x4caa	; 0x4caa <__vector_29>
../../../../crt1/gcrt1.S:96
     278:	0c 94 d1 0d 	jmp	0x1ba2	; 0x1ba2 <__bad_interrupt>
../../../../crt1/gcrt1.S:97
     27c:	0c 94 d1 0d 	jmp	0x1ba2	; 0x1ba2 <__bad_interrupt>
../../../../crt1/gcrt1.S:98
     280:	0c 94 d1 0d 	jmp	0x1ba2	; 0x1ba2 <__bad_interrupt>
../../../../crt1/gcrt1.S:99
     284:	0c 94 d1 0d 	jmp	0x1ba2	; 0x1ba2 <__bad_interrupt>
../../../../crt1/gcrt1.S:100
     288:	0c 94 e9 26 	jmp	0x4dd2	; 0x4dd2 <__vector_34>
../../../../crt1/gcrt1.S:101
     28c:	0c 94 7a 26 	jmp	0x4cf4	; 0x4cf4 <__vector_35>

00000290 <__trampolines_end>:
__trampolines_end():
     290:	12 00       	.word	0x0012	; ????
     292:	04 04       	cpc	r0, r4
     294:	05 05       	cpc	r16, r5
     296:	04 05       	cpc	r16, r4
     298:	06 12       	cpse	r0, r22
     29a:	1c 00       	.word	0x001c	; ????
     29c:	fb 14       	cp	r15, r11
     29e:	f9 15       	cp	r31, r9
     2a0:	fb 00       	.word	0x00fb	; ????
     2a2:	00 00       	nop
     2a4:	00 01       	movw	r0, r0
     2a6:	b7 20       	and	r11, r7
     2a8:	06 00       	.word	0x0006	; ????
     2aa:	60 a4       	ldd	r6, Z+40	; 0x28
     2ac:	01 2a       	or	r0, r17
     2ae:	1c cf       	rjmp	.-456    	; 0xe8 <__SREG__+0xa9>
     2b0:	ed a5       	ldd	r30, Y+45	; 0x2d
     2b2:	6d f0       	brhs	.+26     	; 0x2ce <__trampolines_end+0x3e>
     2b4:	ec c4       	rjmp	.+2520   	; 0xc8e <u8g2_font_helvB08_te+0x82a>
     2b6:	8c 11       	cpse	r24, r12
     2b8:	51 62       	ori	r21, 0x21	; 33
     2ba:	44 89       	ldd	r20, Z+20	; 0x14
     2bc:	46 e9       	ldi	r20, 0x96	; 150
     2be:	0e 9e       	mul	r0, r30
     2c0:	23 41       	sbci	r18, 0x13	; 19
     2c2:	8a 0c       	add	r8, r10
     2c4:	55 64       	ori	r21, 0x45	; 69
     2c6:	c4 09       	sbc	r28, r4
     2c8:	01 2b       	or	r16, r17
     2ca:	10 31       	cpi	r17, 0x10	; 16
     2cc:	66 a4       	ldd	r6, Z+46	; 0x2e
     2ce:	6f f8       	.word	0xf86f	; ????
     2d0:	7c f7       	brge	.-34     	; 0x2b0 <__trampolines_end+0x20>
     2d2:	e0 03       	fmuls	r22, r16
     2d4:	73 c3       	rjmp	.+1766   	; 0x9bc <u8g2_font_helvB08_te+0x558>
     2d6:	e7 3b       	cpi	r30, 0xB7	; 183
     2d8:	00 2c       	mov	r0, r0
     2da:	10 47       	sbci	r17, 0x70	; 112
     2dc:	f5 a2       	std	Z+37, r15	; 0x25
     2de:	87 12       	cpse	r8, r23
     2e0:	32 64       	ori	r19, 0x42	; 66
     2e2:	26 1a       	sub	r2, r22
     2e4:	33 68       	ori	r19, 0x83	; 131
     2e6:	90 28       	or	r9, r0
     2e8:	00 2d       	mov	r16, r0
     2ea:	07 6f       	ori	r16, 0xF7	; 247
     2ec:	28 a6       	std	Y+40, r2	; 0x28
     2ee:	e1 07       	cpc	r30, r17
     2f0:	2e 0a       	sbc	r2, r30
     2f2:	85 3c       	cpi	r24, 0xC5	; 197
     2f4:	a4 63       	ori	r26, 0x34	; 52
     2f6:	84 8a       	std	Z+20, r8	; 0x14
     2f8:	11 00       	.word	0x0011	; ????
     2fa:	2f 24       	eor	r2, r15
     2fc:	6d 2f       	mov	r22, r29
     2fe:	a3 75       	andi	r26, 0x53	; 83
     300:	4a 92       	st	-Y, r4
     302:	43 47       	sbci	r20, 0x73	; 115
     304:	0e 1d       	adc	r16, r14
     306:	49 72       	andi	r20, 0x29	; 41
     308:	e8 c8       	rjmp	.-3632   	; 0xfffff4da <__eeprom_end+0xff7ef4da>
     30a:	a1 23       	and	r26, r17
     30c:	49 8e       	std	Y+25, r4	; 0x19
     30e:	24 39       	cpi	r18, 0x94	; 148
     310:	74 e4       	ldi	r23, 0x44	; 68
     312:	d0 91 24 87 	lds	r29, 0x8724	; 0x808724 <__bss_end+0x56af>
     316:	8e 1c       	adc	r8, r14
     318:	3a 92       	st	-Y, r3
     31a:	e4 d0       	rcall	.+456    	; 0x4e4 <u8g2_font_helvB08_te+0x80>
     31c:	a1 00       	.word	0x00a1	; ????
     31e:	30 19       	sub	r19, r0
     320:	ad 2e       	mov	r10, r29
     322:	a4 a9       	ldd	r26, Z+52	; 0x34
     324:	58 9a       	sbi	0x0b, 0	; 11
     326:	25 a3       	std	Z+37, r18	; 0x25
     328:	46 90       	elpm	r4, Z
     32a:	3a 67       	ori	r19, 0x7A	; 122
     32c:	ff dd       	rcall	.-1026   	; 0xffffff2c <__eeprom_end+0xff7eff2c>
     32e:	29 12       	cpse	r2, r25
     330:	a3 86       	std	Z+11, r10	; 0x0b
     332:	ac 49       	sbci	r26, 0x9C	; 156
     334:	56 08       	sbc	r5, r6
     336:	00 31       	cpi	r16, 0x10	; 16
     338:	12 ad       	ldd	r17, Z+58	; 0x3a
     33a:	32 a4       	ldd	r3, Z+42	; 0x2a
     33c:	4d 24       	eor	r4, r13
     33e:	b1 53       	subi	r27, 0x31	; 49
     340:	98 09       	sbc	r25, r8
     342:	19 3a       	cpi	r17, 0xA9	; 169
     344:	ff 57       	subi	r31, 0x7F	; 127
     346:	0f 1e       	adc	r0, r31
     348:	24 32       	cpi	r18, 0x24	; 36
     34a:	1b ae       	std	Y+59, r1	; 0x3b
     34c:	2a a4       	ldd	r2, Y+42	; 0x2a
     34e:	ab 5c       	subi	r26, 0xCB	; 203
     350:	a2 25       	eor	r26, r2
     352:	a4 48       	sbci	r26, 0x84	; 132
     354:	8c 1b       	sub	r24, r28
     356:	31 6e       	ori	r19, 0xE1	; 225
     358:	c4 b8       	out	0x04, r12	; 4
     35a:	b1 43       	sbci	r27, 0x31	; 49
     35c:	87 92       	lat	Z, r8
     35e:	a4 bf       	out	0x34, r26	; 52
     360:	7c f0       	brlt	.+30     	; 0x380 <__trampolines_end+0xf0>
     362:	80 01       	movw	r16, r0
     364:	33 1f       	adc	r19, r19
     366:	af 2a       	or	r10, r31
     368:	a4 cb       	rjmp	.-2232   	; 0xfffffab2 <__eeprom_end+0xff7efab2>
     36a:	5c 22       	and	r5, r28
     36c:	36 a4       	ldd	r3, Z+46	; 0x2e
     36e:	88 8c       	ldd	r8, Y+24	; 0x18
     370:	1b 3c       	cpi	r17, 0xCB	; 203
     372:	2d 31       	cpi	r18, 0x1D	; 29
     374:	74 07       	cpc	r23, r20
     376:	d1 16       	cp	r13, r17
     378:	1e 3d       	cpi	r17, 0xDE	; 222
     37a:	78 da       	rcall	.-2832   	; 0xfffff86c <__eeprom_end+0xff7ef86c>
     37c:	73 24       	eor	r7, r3
     37e:	5c 34       	cpi	r21, 0x4C	; 76
     380:	4a 04       	cpc	r4, r10
     382:	00 34       	cpi	r16, 0x40	; 64
     384:	23 ae       	std	Z+59, r2	; 0x3b
     386:	2a a4       	ldd	r2, Y+42	; 0x2a
     388:	91 64       	ori	r25, 0x41	; 65
     38a:	85 e6       	ldi	r24, 0x65	; 101
     38c:	ce 8d       	ldd	r28, Y+30	; 0x1e
     38e:	18 46       	sbci	r17, 0x68	; 104
     390:	62 d8       	rcall	.-3900   	; 0xfffff456 <__eeprom_end+0xff7ef456>
     392:	90 51       	subi	r25, 0x10	; 16
     394:	44 46       	sbci	r20, 0x64	; 100
     396:	8d 19       	sub	r24, r13
     398:	34 0d       	add	r19, r4
     39a:	a1 31       	cpi	r26, 0x11	; 17
     39c:	a3 86       	std	Z+11, r10	; 0x0b
     39e:	3c 78       	andi	r19, 0x8C	; 140
     3a0:	c0 72       	andi	r28, 0x20	; 32
     3a2:	ec 40       	sbci	r30, 0x0C	; 12
     3a4:	64 18       	sub	r6, r4
     3a6:	35 1b       	sub	r19, r21
     3a8:	af 2a       	or	r10, r31
     3aa:	a4 85       	ldd	r26, Z+12	; 0x0c
     3ac:	0d 37       	cpi	r16, 0x7D	; 125
     3ae:	83 67       	ori	r24, 0x73	; 115
     3b0:	9c 6c       	ori	r25, 0xCC	; 204
     3b2:	11 9b       	sbis	0x02, 1	; 2
     3b4:	41 85       	ldd	r20, Z+9	; 0x09
     3b6:	09 cf       	rjmp	.-494    	; 0x1ca <__EEPROM_REGION_LENGTH__+0xca>
     3b8:	45 48       	sbci	r20, 0x85	; 133
     3ba:	64 24       	eor	r6, r4
     3bc:	da b0       	in	r13, 0x0a	; 10
     3be:	42 04       	cpc	r4, r2
     3c0:	00 36       	cpi	r16, 0x60	; 96
     3c2:	25 ae       	std	Z+61, r2	; 0x3d
     3c4:	2e a4       	ldd	r2, Y+46	; 0x2e
     3c6:	cf 18       	sub	r12, r15
     3c8:	aa 44       	sbci	r26, 0x4A	; 74
     3ca:	05 49       	sbci	r16, 0x95	; 149
     3cc:	12 1d       	adc	r17, r2
     3ce:	3b 74       	andi	r19, 0x4B	; 75
     3d0:	0c a1       	ldd	r16, Y+36	; 0x24
     3d2:	11 48       	sbci	r17, 0x81	; 129
     3d4:	98 14       	cp	r9, r8
     3d6:	22 41       	sbci	r18, 0x12	; 18
     3d8:	ec a0       	ldd	r14, Y+36	; 0x24
     3da:	c1 73       	andi	r28, 0x31	; 49
     3dc:	23 86       	std	Z+11, r2	; 0x0b
     3de:	91 20       	and	r9, r1
     3e0:	44 84       	ldd	r4, Z+12	; 0x0c
     3e2:	8d 32       	cpi	r24, 0x2D	; 45
     3e4:	43 00       	.word	0x0043	; ????
     3e6:	37 1d       	adc	r19, r7
     3e8:	ae 2a       	or	r10, r30
     3ea:	a4 e1       	ldi	r26, 0x14	; 20
     3ec:	77 e7       	ldi	r23, 0x77	; 119
     3ee:	46 8c       	ldd	r4, Z+30	; 0x1e
     3f0:	1b 3b       	cpi	r17, 0xBB	; 187
     3f2:	94 e8       	ldi	r25, 0x84	; 132
     3f4:	d8 a1       	ldd	r29, Y+32	; 0x20
     3f6:	44 c7       	rjmp	.+3720   	; 0x1280 <u8g2_font_helvB08_te+0xe1c>
     3f8:	0e 25       	eor	r16, r14
     3fa:	3a 76       	andi	r19, 0x6A	; 106
     3fc:	28 d1       	rcall	.+592    	; 0x64e <u8g2_font_helvB08_te+0x1ea>
     3fe:	a1 44       	sbci	r26, 0x41	; 65
     400:	c7 0e       	add	r12, r23
     402:	03 38       	cpi	r16, 0x83	; 131
     404:	24 ae       	std	Z+60, r2	; 0x3c
     406:	2e a4       	ldd	r2, Y+46	; 0x2e
     408:	a9 5c       	subi	r26, 0xC9	; 201
     40a:	a2 35       	cpi	r26, 0x52	; 82
     40c:	a3 86       	std	Z+11, r10	; 0x0b
     40e:	8c 1b       	sub	r24, r28
     410:	31 6e       	ori	r19, 0xE1	; 225
     412:	c4 b8       	out	0x04, r12	; 4
     414:	21 a3       	std	Z+33, r18	; 0x21
     416:	c6 2c       	mov	r12, r6
     418:	4a a5       	ldd	r20, Y+42	; 0x2a
     41a:	a6 48       	sbci	r26, 0x86	; 134
     41c:	09 62       	ori	r16, 0x29	; 41
     41e:	07 6d       	ori	r16, 0xD7	; 215
     420:	88 a8       	ldd	r8, Y+48	; 0x30
     422:	04 1b       	sub	r16, r20
     424:	65 86       	std	Z+13, r6	; 0x0d
     426:	00 39       	cpi	r16, 0x90	; 144
     428:	26 ae       	std	Z+62, r2	; 0x3e
     42a:	2e a4       	ldd	r2, Y+46	; 0x2e
     42c:	a9 5c       	subi	r26, 0xC9	; 201
     42e:	a2 35       	cpi	r26, 0x52	; 82
     430:	94 90       	lpm	r9, Z
     432:	22 31       	cpi	r18, 0x12	; 18
     434:	6e c4       	rjmp	.+2268   	; 0xd12 <u8g2_font_helvB08_te+0x8ae>
     436:	b8 eb       	ldi	r27, 0xB8	; 184
     438:	50 95       	com	r21
     43a:	20 63       	ori	r18, 0x30	; 48
     43c:	04 c5       	rjmp	.+2568   	; 0xe46 <u8g2_font_helvB08_te+0x9e2>
     43e:	90 23       	and	r25, r16
     440:	83 88       	ldd	r8, Z+19	; 0x13
     442:	10 1d       	adc	r17, r0
     444:	4a 74       	andi	r20, 0x4A	; 74
     446:	8c a0       	ldd	r8, Y+36	; 0x24
     448:	22 6b       	ori	r18, 0xB2	; 178
     44a:	92 99       	sbic	0x12, 2	; 18
     44c:	03 3a       	cpi	r16, 0xA3	; 163
     44e:	0f e5       	ldi	r16, 0x5F	; 95
     450:	3d a4       	ldd	r3, Y+45	; 0x2d
     452:	63 84       	ldd	r6, Z+11	; 0x0b
     454:	8a f1       	brmi	.+98     	; 0x4b8 <u8g2_font_helvB08_te+0x54>
     456:	d0 8d       	ldd	r29, Z+24	; 0x18
     458:	50 31       	cpi	r21, 0x10	; 16
     45a:	02 00       	.word	0x0002	; ????
     45c:	00 00       	nop
     45e:	00 04       	cpc	r0, r0
     460:	ff ff       	.word	0xffff	; ????
	...

00000464 <u8g2_font_helvB08_te>:
     464:	bf 00 02 03 04 04 02 04 05 0b 13 ff fb 08 fe 08     ................
     474:	fe 01 52 02 c1 08 71 20 05 00 e6 04 21 08 82 23     ..R...q ....!..#
     484:	e5 90 62 01 22 07 33 77 25 52 05 23 0f 77 a1 35     ..b.".3w%R.#.w.5
     494:	8a a1 b4 19 85 66 14 43 69 00 24 0d a5 9e 35 9e     .....f.Ci.$...5.
     4a4:	52 f4 32 92 52 73 08 25 12 87 22 4e 96 a4 50 8a     R.2.Rs.%.."N..P.
     4b4:	c1 18 8e c1 48 8c a2 59 02 26 0f 87 22 6e 96 44     ....H..Y.&.."n.D
     4c4:	49 9e 25 53 92 c6 49 00 27 06 31 f7 64 00 28 0a     I.%S..I.'.1.d.(.
     4d4:	a3 1a 35 92 22 9d a1 18 29 0c a3 1a 25 14 43 49     ..5."...)...%.CI
     4e4:	2b 92 42 00 2a 07 33 36 25 ca 01 2b 0b 56 a6 55     +.B.*.36%..+.V.U
     4f4:	86 44 53 86 44 00 2c 07 42 da 84 92 00 2d 06 14     .DS.D.,.B....-..
     504:	6e 85 00 2e 06 22 e2 84 00 2f 0b 84 22 3d 19 87     n....".../.."=..
     514:	71 18 c7 00 30 0a 85 a2 6d 92 f8 92 26 00 31 07     q...0...m...&.1.
     524:	83 a3 ad d2 07 32 09 85 a2 6d 52 2b b5 0b 33 0c     .....2...mR+..3.
     534:	85 a2 6d 52 8b 32 24 53 d2 04 34 0f 86 a2 1d 8a     ..mR.2$S..4.....
     544:	21 79 8c a4 50 b2 65 48 02 35 0c 85 a2 e5 96 69     !y..P.eH.5.....i
     554:	68 a4 a4 09 00 36 0c 85 a2 6d 92 68 4a 62 49 13     h....6...m.hJbI.
     564:	00 37 0a 85 a2 a5 56 ca a2 ac 04 38 0c 85 a2 6d     .7....V....8...m
     574:	92 28 69 92 58 d2 04 39 0c 85 a2 6d 92 58 12 4d     .(i.X..9...m.X.M
     584:	49 13 00 3a 07 62 e2 84 86 08 3b 09 82 da 84 86     I..:.b....;.....
     594:	28 09 00 3c 07 54 66 55 52 2b 3d 07 35 aa a5 06     (..<.TfUR+=.5...
     5a4:	0b 3e 08 54 66 45 56 29 01 3f 0b 85 a2 6d 52 8b     .>.TfEV).?...mR.
     5b4:	6a 19 29 02 40 15 9a de be 96 c1 a4 14 89 49 29     j.).@.........I)
     5c4:	0e a5 30 15 4a 72 8c 55 03 41 0f 87 22 76 86 66     ..0.Jr.U.A.."v.f
     5d4:	49 94 44 49 3a 64 5a 00 42 0b 86 e2 a5 12 c9 4b     I.DI:dZ.B......K
     5e4:	64 5e 00 43 10 87 22 96 14 69 68 06 65 50 86 22     d^.C.."..ih.eP."
     5f4:	51 a4 00 44 0b 86 e2 85 94 94 bc 24 12 00 45 09     Q..D.......$..E.
     604:	85 a2 e5 96 6f 75 01 46 0a 85 a2 e5 96 29 59 1b     ....ou.F.....)Y.
     614:	00 47 0f 87 22 96 14 69 68 06 c5 5a 12 c5 29 00     .G.."..ih..Z..).
     624:	48 0a 86 e2 45 64 1e 23 a7 00 49 06 82 e2 e4 21     H...Ed.#..I....!
     634:	4a 09 85 a2 5d 6f 4a 9a 00 4b 0e 87 e2 45 94 94     J...]oJ..K...E..
     644:	f4 0c d1 92 a8 92 05 4c 08 85 a2 45 d6 77 01 4d     .......L...E.w.M
     654:	0f 89 a2 46 06 6b fb b2 52 d4 44 86 64 28 4e 0c     ...F.k..R.D.d(N.
     664:	87 22 46 2e 4b 2a a2 22 b2 2d 4f 0b 87 22 76 96     ."F.K*.".-O.."v.
     674:	d4 dc 92 7a 04 50 0d 86 e2 a5 12 99 97 0c c9 90     ...z.P..........
     684:	0c 01 51 0c 97 1e 76 96 d4 5c 91 36 8d 0a 52 0a     ..Q...v..\.6..R.
     694:	86 e2 a5 12 99 97 c8 14 53 0d 86 e2 8d 12 6b 88     ........S.....k.
     6a4:	86 68 52 a2 00 54 10 86 e2 c5 94 21 19 92 21 19     .hR..T.....!..!.
     6b4:	92 21 19 12 01 55 09 86 e2 45 e4 a7 44 01 56 0f     .!...U...E..D.V.
     6c4:	87 22 46 a6 25 a5 24 4a f2 0c cd 60 0c 57 12 8a     ."F.%.$J...`.W..
     6d4:	e2 46 14 49 91 54 69 4a ca 23 16 65 48 14 01 58     .F.I.TiJ.#.eH..X
     6e4:	0d 87 22 46 a6 25 f5 0c cd 92 9a 16 59 10 88 62     .."F.%......Y..b
     6f4:	46 86 68 48 a9 4d 83 32 2c c3 32 00 5a 0b 86 e2     F.hH.M.2,.2.Z...
     704:	c5 86 64 f5 ac 86 0c 5b 08 a3 1a a5 d2 af 01 5c     ..d....[.......\
     714:	0d 84 22 25 8e a1 38 86 e2 18 8a 03 5d 08 a3 1a     .."%..8.....]...
     724:	65 d2 af 02 5e 08 44 72 4d 2a c5 00 5f 06 16 9a     e...^.DrM*.._...
     734:	c5 00 60 06 22 fe 24 0c 61 0a 66 a2 6d 0c 45 4a     ..`.".$.a.f.m.EJ
     744:	a7 24 62 0a 85 a2 45 96 29 89 cb 02 63 09 64 62     .$b...E.)...c.db
     754:	ad 1a 55 d1 00 64 09 85 a2 5d 65 71 49 04 65 0b     ..U..d...]eqI.e.
     764:	65 a2 6d 92 0e 59 92 26 00 66 0a 85 21 75 12 49     e.m..Y.&.f..!u.I
     774:	59 27 00 67 0b 85 9a 4d 9a b8 24 5a 9a 00 68 0a     Y'.g...M..$Z..h.
     784:	85 a2 45 96 29 89 97 00 69 07 82 e2 44 3c 0a 6a     ..E.)...i...D<.j
     794:	09 a3 d9 4c 86 f4 45 01 6b 0d 86 a2 45 86 64 48     ...L..E.k...E.dH
     7a4:	45 ce a4 a4 14 6c 06 82 e2 e4 21 6d 0d 68 62 26     E....l....!m.hb&
     7b4:	d2 45 49 94 44 49 94 02 6e 08 65 a2 25 52 f1 12     .EI.DI..n.e.%R..
     7c4:	6f 0a 65 a2 6d 92 b8 a4 09 00 70 0a 85 9a 25 52     o.e.m.....p...%R
     7d4:	71 59 b2 0c 71 0a 85 9a 4d 9a b8 24 5a 01 72 09     qY..q...M..$Z.r.
     7e4:	64 22 25 aa 44 4d 00 73 0b 65 a2 6d 52 cd 10 25     d"%.DM.s.e.mR..%
     7f4:	4d 00 74 0a 84 21 4d 94 28 51 5b 00 75 08 65 a2     M.t..!M.(Q[.u.e.
     804:	45 e2 a5 0a 76 0a 65 a2 45 62 49 c9 39 04 77 0e     E...v.e.EbI.9.w.
     814:	67 22 46 8a a8 88 8a 34 25 51 92 00 78 0b 66 e2     g"F....4%Q..x.f.
     824:	45 94 68 99 12 49 01 79 0b 85 9a 45 e2 92 48 59     E.h..I.y...E..HY
     834:	14 01 7a 08 65 a2 a5 16 b5 0b 7b 0a a4 5a 55 12     ..z.e.....{..ZU.
     844:	55 b2 a8 2d 7c 06 a1 db e4 18 7d 0b a4 5a 45 16     U..-|.....}..ZE.
     854:	d5 92 a8 25 02 7e 07 25 ae 4d 0b 00 a0 05 00 e6     ...%.~.%.M......
     864:	04 a1 08 82 1b 45 8e 0e 01 a2 0e 85 9e 3d 9c a4     .....E.......=..
     874:	29 8c 42 49 1a 63 00 a3 0c 85 a2 75 92 22 91 94     ).BI.c.....u."..
     884:	55 93 00 a4 0c 66 a6 25 86 22 32 27 15 43 01 a5     U....f.%."2'.C..
     894:	0f 86 e2 25 86 64 68 94 c2 c8 14 4d 11 00 a6 06     ...%.dh....M....
     8a4:	a1 db 84 24 a7 0e a5 9a 6d 12 e9 29 24 a3 99 94     ...$....m..)$...
     8b4:	26 00 a8 06 13 fe 24 0a a9 12 88 a3 96 8e a1 a4     &.....$.........
     8c4:	2a 8c a4 18 12 a7 34 14 93 00 aa 08 53 6f 65 94     *.....4.....Soe.
     8d4:	e2 01 ab 09 36 e6 4d a2 44 49 00 ac 09 35 eb a5     ....6.M.DI...5..
     8e4:	86 62 28 00 ad 06 14 6e 85 00 ae 13 88 a3 96 8e     .b(....n........
     8f4:	a1 14 25 85 91 34 4a 61 94 86 62 12 00 af 06 13     ..%..4Ja..b.....
     904:	fe 64 00 b0 06 33 36 6d 05 b1 0c 76 a2 55 86 44     .d...36m...v.U.D
     914:	53 86 64 a4 01 b2 07 43 f2 6c 4a 0d b3 08 43 f2     S.d....C.lJ...C.
     924:	64 8a 27 00 b4 06 22 fe 4c 02 b5 0a 85 9a 45 e2     d.'...".L.....E.
     934:	55 cd 32 00 b6 14 a6 9a ed 88 a2 29 9a 42 29 8e     U.2........).B).
     944:	e2 28 8e e2 28 8e 22 00 b7 06 12 ee 44 00 b8 06     .(..(.".....D...
     954:	22 da 6c 00 b9 06 42 f2 6c 4a ba 07 53 6f 85 a2     ".l...B.lJ..So..
     964:	07 bb 09 36 e6 45 12 25 4a 02 bc 13 88 62 2e 0e     ...6.E.%J....b..
     974:	e5 64 0c 85 31 1c c6 a1 1c 51 31 14 01 bd 10 87     .d..1....Q1.....
     984:	62 2e 8e e4 30 1d c6 60 24 46 c9 cc 01 be 13 88     b...0..`$F......
     994:	62 66 8c d3 50 5a 8c e1 30 0e e5 88 8a a1 08 00     bf..PZ..0.......
     9a4:	bf 0c 85 9a 55 46 ca a2 5a 92 26 00 c0 12 b7 22     ....UF..Z.&...."
     9b4:	36 46 c5 d8 33 34 4b a2 24 4a d2 21 d3 02 c1 13     6F..34K.$J.!....
     9c4:	b7 22 1e 8a c1 18 7b 86 66 49 94 44 49 3a 64 5a     ."....{.fI.DI:dZ
     9d4:	00 c2 13 b7 22 3e 06 a3 18 73 86 66 49 94 44 49     ....">...s.fI.DI
     9e4:	3a 64 5a 00 c3 13 b7 22 3e 8a a3 18 73 86 66 49     :dZ....">...s.fI
     9f4:	94 44 49 3a 64 5a 00 c4 11 a7 22 36 8a 31 67 68     .DI:dZ...."6.1gh
     a04:	96 44 49 94 a4 43 a6 05 c5 14 b7 22 3e 06 a3 18     .DI..C.....">...
     a14:	8c c1 19 9a 25 51 12 25 e9 90 69 01 c6 0f 89 a2     ....%Q.%..i.....
     a24:	f6 a4 21 35 24 55 6a 5b 94 c5 02 c7 13 a7 1a 96     ..!5$Uj[........
     a34:	14 69 68 06 65 50 86 22 51 a4 a1 18 94 01 c8 0c     .ih.eP."Q.......
     a44:	b5 a2 2d 06 63 d4 2d df ea 02 c9 0a b5 a2 3d 8d     ..-.c.-.......=.
     a54:	ba e5 5b 5d ca 0c b5 a2 35 8e 62 f8 96 6f 75 01     ..[]....5.b..ou.
     a64:	cb 0a a5 a2 2d 0d df f2 ad 2e cc 09 b2 e2 24 0c     ....-.........$.
     a74:	8f 43 00 cd 08 b2 e2 4c 3e 0e 01 ce 08 b3 e1 2c     .C.....L>......,
     a84:	1b d2 1f cf 09 a4 e1 24 8c 41 fd 05 d0 0e 87 e1     .......$.A......
     a94:	8d 96 44 d1 52 4a a2 a4 24 01 d1 10 b7 22 3e 8a     ..D.RJ..$....">.
     aa4:	a3 18 2d 97 25 15 51 11 d9 16 d2 0f b7 22 3e 46     ..-.%.Q......">F
     ab4:	c5 98 b3 a4 e6 96 d4 23 00 d3 0f b7 22 1e 8a c1     .......#...."...
     ac4:	18 7b 96 d4 dc 92 7a 04 d4 0f b7 22 3e 06 a3 18     .{....z....">...
     ad4:	73 96 d4 dc 92 7a 04 d5 0f b7 22 3e 8a a3 18 73     s....z....">...s
     ae4:	96 d4 dc 92 7a 04 d6 0e a7 22 36 8a 31 67 49 cd     ....z...."6.1gI.
     af4:	2d a9 47 00 d7 0a 56 a6 45 94 68 99 12 05 d8 0f     -.G...V.E.h.....
     b04:	87 22 76 8a 34 ab 88 8a 4a 49 15 8d 00 d9 0c b6     ."v.4...JI......
     b14:	e2 35 86 63 a4 c8 4f 89 02 da 0d b6 e2 1d 8a a1     .5.c..O.........
     b24:	18 29 f2 53 a2 00 db 0c b6 e2 35 86 d2 48 91 9f     .).S......5..H..
     b34:	12 05 dc 0c a6 e2 2d 8c 51 22 3f 25 0a 00 dd 14     ......-.Q"?%....
     b44:	b8 62 1e 8c e1 18 53 86 68 48 a9 4d 83 32 2c c3     .b....S.hH.M.2,.
     b54:	32 00 de 0d 86 e2 45 86 2a 91 79 c9 90 0c 01 df     2.....E.*.y.....
     b64:	0b 85 a2 6d 12 57 91 b8 15 01 e0 0e 96 a2 35 86     ...m.W........5.
     b74:	63 f4 18 8a 94 4e 49 00 e1 0e 96 a2 3d 86 62 ac     c....NI.....=.b.
     b84:	31 14 29 9d 92 00 e2 0e 96 a2 35 86 d2 e8 31 14     1.).......5...1.
     b94:	29 9d 92 00 e3 0e 96 a2 35 0a a3 18 3d 86 22 a5     ).......5...=.".
     ba4:	53 12 e4 0c 86 a2 2d 8d 1e 43 91 d2 29 09 e5 0f     S.....-..C..)...
     bb4:	96 a2 35 86 d2 50 0c 8d a1 48 e9 94 04 e6 0d 68     ..5..P...H.....h
     bc4:	62 ce 0a 25 e9 90 64 49 6b 02 e7 0b 84 5a ad 1a     b..%..dIk....Z..
     bd4:	55 d1 18 4a 00 e8 0e 95 a2 2d 06 63 e4 24 1d b2     U..J.....-.c.$..
     be4:	24 4d 00 e9 0d 95 a2 3d 8d 9c a4 43 96 a4 09 00     $M.....=...C....
     bf4:	ea 0e 95 a2 35 8e 62 d4 24 1d b2 24 4d 00 eb 0d     ....5.b.$..$M...
     c04:	85 a2 2d 8d 9a a4 43 96 a4 09 00 ec 08 92 e2 24     ..-...C........$
     c14:	0c 8f 02 ed 07 92 e2 4c 3e 0a ee 09 93 e2 2c 5b     .......L>.....,[
     c24:	d2 0b 00 ef 09 83 e2 24 8a 25 bd 00 f0 0d 95 a2     .......$.%......
     c34:	2d 29 46 f1 24 71 49 13 00 f1 0a 95 a2 2d 37 2a     -)F.$qI......-7*
     c44:	52 f1 12 f2 0d 95 a2 2d 06 63 e4 24 71 49 13 00     R......-.c.$qI..
     c54:	f3 0b 95 a2 3d 8d 9c 24 2e 69 02 f4 0d 95 a2 35     ....=..$.i.....5
     c64:	8e 62 d4 24 71 49 13 00 f5 0c 95 a2 2d 37 72 92     .b.$qI......-7r.
     c74:	b8 a4 09 00 f6 0b 85 a2 2d 8d 9a 24 2e 69 02 f7     ........-..$.i..
     c84:	0a 56 a6 55 46 da 48 11 00 f8 0d 67 a1 75 8a 94     .V.UF.H....g.u..
     c94:	a5 24 4a 52 34 02 f9 0b 95 a2 2d 06 63 94 c4 4b     .$JR4.....-.c..K
     ca4:	15 fa 0a 95 a2 3d 8d 92 78 a9 02 fb 0b 95 a2 35     .....=..x......5
     cb4:	8e 62 58 e2 a5 0a fc 0a 85 a2 2d 0d 4b bc 54 01     .bX.......-.K.T.
     cc4:	fd 0d b5 9a 3d 8d 92 b8 24 52 16 45 00 fe 0c a5     ....=...$R.E....
     cd4:	9a 45 96 29 89 5c 59 b2 0c ff 0d a5 9a 2d 0d 4b     .E.).\Y......-.K
     ce4:	5c 12 29 8b 22 00 00 00 00 08 01 64 05 b2 ff ff     \.)."......d....
     cf4:	01 00 11 a7 22 76 c6 9c a1 59 12 25 51 92 0e 99     ...."v...Y.%Q...
     d04:	16 01 01 0d 86 a2 6d 46 8f a1 48 e9 94 04 01 02     ......mF..H.....
     d14:	13 b7 22 36 0d c9 98 33 34 4b a2 24 4a d2 21 d3     .."6...34K.$J.!.
     d24:	02 01 03 0f 96 a2 2d 8c 65 f4 18 8a 94 4e 49 00     ......-.e....NI.
     d34:	01 04 13 a7 1a 76 86 66 49 94 44 49 3a 64 5a 8e     .....v.fI.DI:dZ.
     d44:	61 11 00 01 05 0e 86 9a 6d 0c 45 4a a7 24 c6 a0     a.......m.EJ.$..
     d54:	08 01 06 15 b7 22 1e 8a c1 18 9b 14 69 68 06 65     ....."......ih.e
     d64:	50 86 22 51 a4 00 01 07 0b 94 62 35 8d aa 46 55     P."Q......b5..FU
     d74:	34 01 08 15 b7 22 3e 06 a3 18 93 14 69 68 06 65     4....">.....ih.e
     d84:	50 86 22 51 a4 00 01 09 0c 94 62 35 15 83 d5 a8     P."Q......b5....
     d94:	8a 06 01 0a 13 a7 22 3e c6 26 45 1a 9a 41 19 94     ......">.&E..A..
     da4:	a1 48 14 29 00 01 0b 0b 84 62 35 86 ab 51 15 0d     .H.).....b5..Q..
     db4:	01 0c 15 b7 22 36 8a c1 18 9b 14 69 68 06 65 50     ...."6.....ih.eP
     dc4:	86 22 51 a4 00 01 0d 0c 94 62 2d 19 c3 d5 a8 8a     ."Q......b-.....
     dd4:	06 01 0e 0f b6 e2 2d 0d c5 68 52 52 f2 92 48 00     ......-..hRR..H.
     de4:	01 0f 12 88 62 5e 92 25 89 9c a4 48 2d c9 92 0c     ....b^.%...H-...
     df4:	d1 00 01 10 0f 87 e1 8d 96 44 d1 52 4a a2 a4 24     .........D.RJ..$
     e04:	01 01 11 0b 85 a2 5d a2 2c 2e 89 00 01 12 0b a5     ......].,.......
     e14:	a2 6d 86 6f f9 56 17 01 13 0d 85 a2 6d 46 4d d2     .m.o.V......mFM.
     e24:	21 4b d2 04 01 14 0d b5 a2 25 0c 65 d4 2d df ea     !K.......%.e.-..
     e34:	02 01 15 0f 95 a2 2d 0c 65 d4 24 1d b2 24 4d 00     ......-.e.$..$M.
     e44:	01 16 0b a5 a2 35 46 dd f2 ad 2e 01 17 0d 85 a2     .....5F.........
     e54:	35 46 4e d2 21 4b d2 04 01 18 0d a5 9a e5 96 6f     5FN.!K.........o
     e64:	75 15 43 22 00 01 19 0e 85 9a 6d 92 0e 59 92 e6     u.C"......m..Y..
     e74:	18 92 00 01 1a 0c b5 a2 2d 1d a3 6e f9 56 17 01     ........-..n.V..
     e84:	1b 0e 95 a2 2d 1d 23 27 e9 90 25 69 02 01 1c 14     ....-.#'..%i....
     e94:	b7 22 3e 06 a3 18 93 14 69 68 06 c5 5a 12 c5 29     .">.....ih..Z..)
     ea4:	00 01 1d 0f b5 9a 35 8e 62 94 34 71 49 b4 34 01     ......5.b.4qI.4.
     eb4:	01 1e 13 b7 22 36 0d c9 98 a4 48 43 33 28 d6 92     ...."6....HC3(..
     ec4:	28 4e 01 01 1f 0f b5 9a 2d 0c 65 94 34 71 49 b4     (N......-.e.4qI.
     ed4:	34 01 01 20 11 a7 22 3e c6 26 45 1a 9a 41 b1 96     4.. ..">.&E..A..
     ee4:	44 71 0a 01 21 0e a5 9a 35 46 4a 13 97 44 4b 13     Dq..!...5FJ..DK.
     ef4:	00 01 22 17 d7 0e 96 14 69 68 06 c5 5a 12 c5 29     ..".....ih..Z..)
     f04:	c6 92 41 19 8e c1 18 00 01 23 10 d5 9a 3d 0d c9     ..A......#...=..
     f14:	32 4a 9a b8 24 5a 9a 00 01 24 0e b6 e2 3d 86 d2     2J..$Z...$...=..
     f24:	28 91 79 8c 9c 02 01 25 0e b5 a2 2d 8e 62 94 2c     (.y....%...-.b.,
     f34:	53 12 2f 01 01 26 0b 86 e2 45 3c c6 63 e4 14 01     S./..&...E<.c...
     f44:	27 0a 86 a1 4d 66 4a fa 07 01 28 0c b4 e1 2c 92     '...MfJ...(...,.
     f54:	62 58 d4 2f 00 01 29 0c 94 e1 2c 92 62 58 d4 0b     bX./..)...,.bX..
     f64:	00 01 2a 0a a3 e2 64 96 f4 0b 00 01 2b 09 83 e2     ..*...d.....+...
     f74:	64 96 f4 02 01 2c 0c b4 e1 24 8c 64 58 d4 2f 00     d....,...$.dX./.
     f84:	01 2d 0c 94 e1 24 8c 64 58 d4 0b 00 01 2e 08 a2     .-...$.dX.......
     f94:	da e4 31 09 01 2f 09 a2 da 44 3c 2c 01 01 30 09     ..1../...D<,..0.
     fa4:	a2 e2 2c 3c 0e 01 01 31 07 62 e2 e4 28 01 32 13     ..,<...1.b..(.2.
     fb4:	88 62 46 86 68 88 86 68 88 86 68 88 92 c8 09 00     .bF.h..h..h.....
     fc4:	01 33 0d a5 9a 45 92 41 89 2f 59 94 00 01 34 0d     .3...E.A./Y...4.
     fd4:	b5 a2 3d 15 23 65 dd 94 34 01 01 35 0a b3 d9 2c     ..=.#e..4..5...,
     fe4:	1b d2 17 05 01 36 17 d7 ce 45 94 94 f4 0c d1 92     .....6...E......
     ff4:	a8 92 65 b4 0c ca 70 0c c6 10 00 01 37 15 d6 8e     ..e...p.....7...
    1004:	45 86 64 48 45 ce a4 a4 94 91 32 24 83 31 14 03     E.dHE.....2$.1..
    1014:	01 38 0c 66 a2 45 92 c8 99 94 94 02 01 39 0b b5     .8.f.E.......9..
    1024:	a2 35 8e 91 b2 be 0b 01 3a 09 b2 e2 4c 3e 0e 01     .5......:...L>..
    1034:	01 3b 0d d5 8e 45 d6 77 0d ab a1 38 06 01 3c 0a     .;...E.w...8..<.
    1044:	d2 ce e4 21 52 12 00 01 3d 13 88 62 46 86 68 88     ...!R...=..bF.h.
    1054:	06 67 28 92 61 19 96 e1 1a 00 01 3e 0b 85 a2 45     .g(.a......>...E
    1064:	62 4e 91 ac 0d 01 3f 12 88 62 46 86 65 58 86 65     bN....?..bF.eX.e
    1074:	58 86 68 58 86 6b 00 01 40 0a 85 a2 45 d6 45 ab     X.hX.k..@...E.E.
    1084:	01 01 41 10 86 a1 4d 86 64 48 86 c6 19 92 21 19     ..A...M.dH....!.
    1094:	2a 01 42 0a 84 e1 4c 54 9a 5a 00 01 43 11 b7 22     *.B...LT.Z..C.."
    10a4:	1e 8a c1 18 4b 2e 4b 2a a2 22 b2 2d 01 44 0b 95     ....K.K*.".-.D..
    10b4:	a2 3d 8d 8a 54 bc 04 01 45 14 d7 0e 46 2e 4b 2a     .=..T...E...F.K*
    10c4:	a2 22 b2 2d 63 c9 a0 0c c7 60 0c 01 46 0f b5 8e     .".-c....`..F...
    10d4:	25 52 f1 92 51 b2 0c c5 21 00 01 47 11 b7 22 36     %R..Q...!..G.."6
    10e4:	8a c1 18 4b 2e 4b 2a a2 22 b2 2d 01 48 0c 95 a2     ...K.K*.".-.H...
    10f4:	2d 1d a3 22 15 2f 01 01 49 13 88 62 46 86 65 54     -.."./..I..bF.eT
    1104:	4a 0a 25 59 92 25 59 92 25 01 01 4a 11 a7 1a 46     J.%Y.%Y.%..J...F
    1114:	2e 4b 2a a2 22 b2 2d 83 32 24 01 01 4b 0c 85 9a     .K*.".-.2$..K...
    1124:	25 52 f1 92 45 09 00 01 4c 0e a7 22 76 c6 9c 25     %R..E...L.."v..%
    1134:	35 b7 a4 1e 01 01 4d 0c 85 a2 6d 46 4d 12 97 34     5.....M...mFM..4
    1144:	01 01 4e 10 b7 22 36 0d c9 98 b3 a4 e6 96 d4 23     ..N.."6........#
    1154:	00 01 4f 0e 95 a2 2d 0c 65 d4 24 71 49 13 00 01     ..O...-.e.$qI...
    1164:	50 10 b7 22 3e 8a a3 18 73 96 d4 dc 92 7a 04 01     P..">...s....z..
    1174:	51 0d 95 a2 35 ca 46 4d 12 97 34 01 01 52 10 89     Q...5.FM..4..R..
    1184:	a2 f6 52 8b b2 78 ca a2 0c a9 c1 03 01 53 0e 69     ..R..x.......S.i
    1194:	a2 6e 25 4a e4 29 8b 92 b4 02 01 54 0e b6 e2 3d     .n%J.).....T...=
    11a4:	86 62 74 25 32 2f 91 29 01 55 0b 94 22 35 0d 47     .bt%2/.).U.."5.G
    11b4:	95 a8 09 01 56 12 d6 ce a5 12 99 97 c8 94 91 32     ....V..........2
    11c4:	24 83 31 14 03 01 57 0e b4 0e 25 aa 44 6d 58 94     $.1...W...%.DmX.
    11d4:	c3 18 00 01 58 0f b6 e2 2d 0d c5 e8 4a 64 5e 22     ....X...-...Jd^"
    11e4:	53 00 01 59 0d 94 22 25 0a 63 38 aa 44 4d 00 01     S..Y.."%.c8.DM..
    11f4:	5a 11 b6 e2 3d 86 62 2c 4a ac 21 1a a2 49 89 02     Z...=.b,J.!..I..
    1204:	01 5b 0e 95 a2 3d 8d 9c 54 33 44 49 13 00 01 5c     .[...=..T3DI...\
    1214:	11 b6 e2 35 86 d2 68 4a ac 21 1a a2 49 89 02 01     ...5..hJ.!..I...
    1224:	5d 0f 95 a2 35 8e 62 d4 a4 9a 21 4a 9a 00 01 5e     ]...5.b...!J...^
    1234:	11 a6 da 8d 12 6b 88 86 68 52 a2 a1 18 12 01 01     .....k..hR......
    1244:	5f 0d 85 9a 6d 52 cd 10 25 cd b1 08 01 60 12 b6     _...mR..%....`..
    1254:	e2 35 8a a1 18 4d 89 35 44 43 34 29 51 00 01 61     .5...M.5DC4)Q..a
    1264:	0e 95 a2 2d 1d 23 27 d5 0c 51 d2 04 01 62 14 a6     ...-.#'..Q...b..
    1274:	da c5 94 21 19 92 21 19 92 21 19 92 c1 18 12 01     ...!..!..!......
    1284:	01 63 0d a4 19 4d 94 28 51 5b 0c 25 00 01 64 15     .c...M.(Q[.%..d.
    1294:	b6 e2 35 8a a1 18 69 ca 90 0c c9 90 0c c9 90 0c     ..5...i.........
    12a4:	89 00 01 65 11 87 e1 4d 94 44 33 12 43 19 94 41     ...e...M.D3.C..A
    12b4:	19 96 01 01 66 10 86 e2 c5 94 21 99 96 21 19 92     ....f.....!..!..
    12c4:	21 11 00 01 67 0c 84 21 4d 94 28 89 12 65 01 01     !...g..!M.(..e..
    12d4:	68 0e b6 e2 35 0a a3 18 29 f2 53 a2 00 01 69 0c     h...5...).S...i.
    12e4:	95 a2 35 ca 86 25 5e aa 00 01 6a 0c a6 e2 75 46     ..5..%^...j...uF
    12f4:	89 fc 94 28 00 01 6b 0b 85 a2 6d 86 25 5e aa 00     ...(..k...m.%^..
    1304:	01 6c 0d b6 e2 2d 8c 65 a4 c8 4f 89 02 01 6d 0c     .l...-.e..O...m.
    1314:	95 a2 2d 0c 65 58 e2 a5 0a 01 6e 0f c6 e2 3d 86     ..-.eX....n...=.
    1324:	d2 50 8c 14 f9 29 51 00 01 6f 0d a5 a2 35 8e e2     .P...)Q..o...5..
    1334:	18 25 f1 52 05 01 70 0e b6 e2 35 0a a3 18 29 f2     .%.R..p...5...).
    1344:	53 a2 00 01 71 0c 95 a2 35 ca 86 25 5e aa 00 01     S...q...5..%^...
    1354:	72 0c a6 da 45 e4 a7 44 c7 a0 08 01 73 0c 85 9a     r...E..D....s...
    1364:	45 e2 a5 0a 63 48 02 01 74 18 ba e2 1e 8c 91 51     E...cH..t......Q
    1374:	8c 4b 14 49 91 54 69 4a ca 23 16 65 48 14 01 01     .K.I.TiJ.#.eH...
    1384:	75 13 97 22 3e 06 a3 18 2d 45 54 44 45 9a 92 28     u..">...-ETDE..(
    1394:	49 00 01 76 15 b8 62 1e 8a e1 28 c6 92 21 1a 52     I..v..b...(..!.R
    13a4:	6a d3 a0 0c cb b0 0c 01 77 0f b5 9a 35 8e 62 58     j.......w...5.bX
    13b4:	e2 92 48 59 14 01 01 78 13 a8 22 3e 8a b1 64 88     ..HY...x..">..d.
    13c4:	86 94 da 34 28 c3 32 2c 03 01 79 10 b6 e2 1d 8a     ...4(.2,..y.....
    13d4:	a1 18 69 43 b2 7a 56 43 06 01 7a 0b 95 a2 3d 8d     ..iC.zVC..z...=.
    13e4:	aa 45 ed 02 01 7b 0e a6 e2 3d 46 da 90 ac 9e d5     .E...{...=F.....
    13f4:	90 01 01 7c 0b 85 a2 35 46 d5 a2 76 01 01 7d 10     ...|...5F..v..}.
    1404:	b6 e2 35 8a a1 18 69 43 b2 7a 56 43 06 01 7e 0c     ..5...iC.zVC..~.
    1414:	95 62 2d 1d a3 6a 51 bb 00 01 86 10 87 22 8e 54     .b-..jQ......".T
    1424:	c5 90 0c ca e0 0c 91 22 09 01 89 0f 87 e1 8d 96     ......."........
    1434:	44 d1 52 4a a2 a4 24 01 01 8e 0a 85 a2 a5 56 df     D.RJ..$.......V.
    1444:	f2 01 01 92 0b 95 9a 75 12 2b 59 a7 0c 01 97 0b     .......u.+Y.....
    1454:	84 e1 4c 54 51 a2 16 00 01 9a 0b 84 e1 4c 54 51     ..LTQ........LTQ
    1464:	a2 16 00 01 9d 15 a8 19 4e 96 46 69 94 a4 48 15     ........N.Fi..H.
    1474:	29 27 71 92 25 19 94 11 01 9f 0e 87 22 76 96 d4     )'q.%......."v..
    1484:	07 4d 4b ea 11 00 01 a0 12 89 22 76 94 54 b4 34     .MK......."v.T.4
    1494:	4f b2 28 ab 64 70 86 00 01 a1 0c 67 a2 6d a2 2c     O.(.dp.....g.m.,
    14a4:	69 a5 9e 01 01 a7 0e 86 e2 8d 12 e5 89 9a e5 51     i..............Q
    14b4:	a2 00 01 a8 0c 65 a2 6d 52 4d b2 24 4d 00 01 ae     .....e.mRM.$M...
    14c4:	14 a6 da c5 94 21 19 92 21 19 92 21 19 92 21 19     .....!..!..!..!.
    14d4:	94 00 01 af 0d 88 e2 45 74 4a e3 24 ea 4d 03 01     .......EtJ.$.M..
    14e4:	b0 0c 67 a2 45 72 49 2b b5 14 02 01 b5 0d 86 e2     ..g.ErI+........
    14f4:	c5 86 64 91 9c d5 90 01 01 b6 0a 65 a2 a5 96 28     ..d........e...(
    1504:	51 2e 01 bb 0a 85 a2 6d 52 9f da 05 01 bc 0d 85     Q......mR.......
    1514:	a2 e5 96 69 68 a4 a4 09 00 01 c0 07 a1 db e4 18     ...ih...........
    1524:	01 c2 12 a5 9e 35 86 62 28 86 c2 32 2c 63 28 86     .....5.b(..2,c(.
    1534:	42 00 01 c3 09 82 23 e5 90 62 01 01 cd 14 b7 22     B.....#..b....."
    1544:	36 8a c1 18 7b 86 66 49 94 44 49 3a 64 5a 00 01     6...{.fI.DI:dZ..
    1554:	ce 0f 96 a2 2d 0d c5 58 63 28 52 3a 25 01 01 cf     ....-..Xc(R:%...
    1564:	0b b3 e2 24 4a 43 fa 0b 00 01 d0 0a 93 e2 24 4a     ...$JC........$J
    1574:	43 fa 02 01 d1 10 b7 22 36 8a c1 18 7b 96 d4 dc     C......"6...{...
    1584:	92 7a 04 01 d2 0d 95 a2 2d 1d 23 27 89 4b 9a 00     .z......-.#'.K..
    1594:	01 d3 0e b6 e2 35 8a a1 18 29 f2 53 a2 00 01 d4     .....5...).S....
    15a4:	0c 95 a2 2d 1d a3 24 5e aa 00 01 d5 0e c6 e2 75     ...-..$^.......u
    15b4:	46 a6 51 22 3f 25 0a 00 01 d6 0d a5 a2 6d 46 a5     F.Q"?%.......mF.
    15c4:	61 89 97 2a 00 01 d7 10 d6 e2 3d 86 62 ac 30 46     a..*......=.b.0F
    15d4:	89 fc 94 28 00 01 d8 0d b5 a2 3d 8d 8c 62 58 e2     ...(......=..bX.
    15e4:	a5 0a 01 d9 10 d6 e2 35 8a a1 18 1d c6 28 91 9f     .......5.....(..
    15f4:	12 05 01 da 0e b5 a2 2d 1d 23 a3 18 96 78 a9 02     .......-.#...x..
    1604:	01 db 10 d6 e2 35 86 63 74 18 a3 44 7e 4a 14 00     .....5.ct..D~J..
    1614:	01 dc 0f b5 a2 2d 06 63 64 14 c3 12 2f 55 00 01     .....-.cd.../U..
    1624:	dd 0b 65 a2 6d 52 1f 92 34 01 01 de 14 c7 22 76     ..e.mR..4....."v
    1634:	c6 8c 62 cc 19 9a 25 51 12 25 e9 90 69 01 01 df     ..b...%Q.%..i...
    1644:	0f a6 a2 6d 46 47 31 7a 0c 45 4a a7 24 01 e0 13     ...mFG1z.EJ.$...
    1654:	c7 22 76 c6 8e b1 67 68 96 44 49 94 a4 43 a6 05     ."v...gh.DI..C..
    1664:	01 e1 0f a6 a2 6d c6 8a b1 c6 50 a4 74 4a 02 01     .....m....P.tJ..
    1674:	e2 12 a9 a2 7e c6 79 d2 90 1a 92 2a b5 2d ca 62     ....~.y....*.-.b
    1684:	01 01 e3 10 88 62 7e c6 b4 42 49 3a 24 59 d2 9a     .....b~..BI:$Y..
    1694:	00 01 e4 10 87 22 96 14 69 68 06 c5 8a 12 c5 29     ....."..ih.....)
    16a4:	00 01 e5 0b 85 9a 4d 9a b8 6e 69 02 01 e6 14 b7     ......M..ni.....
    16b4:	22 36 8a c1 18 9b 14 69 68 06 c5 5a 12 c5 29 00     "6.....ih..Z..).
    16c4:	01 e7 0f b5 9a 2d 1d 23 a5 89 4b a2 a5 09 00 01     .....-.#..K.....
    16d4:	e8 12 b7 e2 2d 0d c6 98 2a 25 3d 43 b4 24 aa 64     ....-...*%=C.$.d
    16e4:	01 01 e9 12 b6 a2 2d 0d c5 68 19 92 21 15 39 93     ......-..h..!.9.
    16f4:	92 52 00 01 ea 0f a7 1a 76 96 d4 dc 92 7a 06 63     .R......v....z.c
    1704:	58 04 01 eb 0d 85 9a 6d 92 b8 a4 39 86 24 00 01     X......m...9.$..
    1714:	ec 11 c7 1a 76 c6 9c 25 35 b7 a4 9e c1 18 16 01     ....v..%5.......
    1724:	01 ed 0e a5 9a 6d 46 4d 12 97 34 c7 90 04 01 f0     .....mFM..4.....
    1734:	0c b3 d9 24 4a 83 92 5e 14 00 01 f4 14 b7 22 1e     ...$J..^......".
    1744:	8a c1 18 9b 14 69 68 06 c5 5a 12 c5 29 00 01 f5     .....ih..Z..)...
    1754:	0e b5 9a 3d 8d 94 26 2e 89 96 26 00 01 f8 11 b7     ...=..&...&.....
    1764:	22 36 46 c5 58 72 59 52 11 15 91 6d 01 01 f9 0c     "6F.XrYR...m....
    1774:	95 a2 2d 06 63 54 a4 e2 25 01 fa 19 e7 22 1e 8a     ..-.cT..%...."..
    1784:	c1 18 57 0c 46 31 18 83 33 34 4b a2 24 4a d2 21     ..W.F1..34K.$J.!
    1794:	d3 02 01 fb 13 c6 a2 3d 86 62 cc 18 4a 43 31 34     .......=.b..JC14
    17a4:	86 22 a5 53 12 01 fc 14 b9 a2 1e 8c 51 31 ee 93     .".S........Q1..
    17b4:	86 d4 90 54 a9 6d 51 16 0b 01 fd 12 98 62 1e 8a     ...T.mQ......b..
    17c4:	e1 18 97 15 4a d2 21 c9 92 d6 04 01 fe 14 b7 22     ....J.!........"
    17d4:	1e 8a c1 18 7b 8a 34 ab 88 8a 4a 49 15 8d 00 01     ....{.4...JI....
    17e4:	ff 12 97 a1 1d 8a c1 18 7b 8a 94 a5 24 4a 52 34     ........{...$JR4
    17f4:	02 02 00 14 b7 22 2e 0d 46 31 e6 0c cd 92 28 89     ....."..F1....(.
    1804:	92 74 c8 b4 00 02 01 0f 96 a2 25 8a a1 34 7a 0c     .t........%..4z.
    1814:	45 4a a7 24 02 02 14 b7 22 5e 86 c2 18 6b 86 66     EJ.$...."^...k.f
    1824:	49 94 44 49 3a 64 5a 00 02 03 0f 96 a2 55 0e 63     I.DI:dZ......U.c
    1834:	e4 18 8a 94 4e 49 00 02 04 0d b5 a2 25 8a a3 18     ....NI......%...
    1844:	be e5 5b 5d 02 05 10 95 a2 25 8a a3 18 35 49 87     ..[].....%...5I.
    1854:	2c 49 13 00 02 06 0c b5 a2 4d 4c c3 b7 7c ab 0b     ,I.......ML..|..
    1864:	02 07 0e 95 a2 55 4c c3 93 74 c8 92 34 01 02 08     .....UL..t..4...
    1874:	0c b4 e1 24 0a a3 18 d4 5f 00 02 09 0c 94 e1 24     ...$...._......$
    1884:	0a a3 18 d4 17 00 02 0a 0b b4 e1 4c 0a 63 50 7f     ...........L.cP.
    1894:	01 02 0b 0b 94 e1 4c 0a 63 50 5f 00 02 0c 10 b7     ......L.cP_.....
    18a4:	22 2e 0d 46 31 e6 2c a9 b9 25 f5 08 02 0d 0e 95     "..F1.,..%......
    18b4:	a2 25 8a a3 18 35 49 5c d2 04 02 0e 10 b7 22 5e     .%...5I\......"^
    18c4:	86 c2 18 6b 96 d4 dc 92 7a 04 02 0f 0d 95 a2 55     ...k....z......U
    18d4:	4c c3 93 c4 25 4d 00 02 10 0f b6 e2 2d 0d a5 51     L...%M......-..Q
    18e4:	95 c8 bc 44 a6 00 02 11 0e 94 22 25 0a a3 18 8a     ...D......"%....
    18f4:	2a 51 13 00 02 12 0e b6 e2 55 0e 63 54 25 32 2f     *Q.......U.cT%2/
    1904:	91 29 02 13 0d 94 22 4d 0a 63 28 aa 44 4d 00 02     .)...."M.c(.DM..
    1914:	14 0e b6 e2 2d 0d a5 51 22 3f 25 0a 00 02 15 0d     ....-..Q"?%.....
    1924:	95 a2 25 8a a3 18 96 78 a9 02 02 16 0d b6 e2 55     ..%....x.......U
    1934:	0e 63 94 c8 4f 89 02 02 17 0c 95 a2 55 4c 83 12     .c..O.......UL..
    1944:	2f 55 00 02 18 14 d6 ce 8d 12 6b 88 86 68 52 a2     /U........k..hR.
    1954:	d1 32 24 83 31 14 03 02 19 11 b5 8e 6d 52 cd 10     .2$.1.......mR..
    1964:	25 cd 48 59 86 e2 10 00 02 1a 17 d6 ce c5 94 21     %.HY...........!
    1974:	19 92 21 19 92 21 19 92 b1 64 48 06 63 28 06 02     ..!..!...dH.c(..
    1984:	1b 0e d4 0d 4d 94 28 51 5b 06 d5 61 08 02 1e 0f     ....M.(Q[..a....
    1994:	b6 e2 35 8a a1 18 29 32 8f 91 53 00 02 1f 0e b5     ..5...)2..S.....
    19a4:	a2 25 8a 63 a4 2c 53 12 2f 01 02 26 11 a7 22 3e     .%.c.,S./..&..">
    19b4:	c6 9e a1 59 12 25 51 92 0e 99 16 02 27 0d 86 a2     ...Y.%Q.....'...
    19c4:	35 c6 1a 43 91 d2 29 09 02 28 0c a5 9a e5 96 6f     5..C..)..(.....o
    19d4:	75 19 8b 00 02 29 0d 85 9a 6d 92 0e 59 92 e6 58     u....)...m..Y..X
    19e4:	04 02 2a 11 c7 22 76 c6 8c 62 cc 59 52 73 4b ea     ..*.."v..b.YRsK.
    19f4:	11 00 02 2b 0e a5 a2 6d 46 a5 51 93 c4 25 4d 00     ...+...mF.Q..%M.
    1a04:	02 2c 12 d7 22 76 c6 8e e2 28 c6 9c 25 35 b7 a4     .,.."v...(..%5..
    1a14:	1e 01 02 2d 0e b5 a2 6d 46 e5 46 4e 12 97 34 01     ...-...mF.FN..4.
    1a24:	02 2e 0e a7 22 3e c6 9e 25 35 b7 a4 1e 01 02 2f     ....">..%5...../
    1a34:	0c 85 a2 35 46 4e 12 97 34 01 02 30 10 c7 22 76     ...5FN..4..0.."v
    1a44:	c6 8e b1 67 49 cd 2d a9 47 00 02 31 0e a5 a2 6d     ...gI.-.G..1...m
    1a54:	46 c6 c8 49 e2 92 26 00 02 32 12 a8 62 7e c6 92     F..I..&..2..b~..
    1a64:	21 1a 52 6a d3 a0 0c cb b0 0c 02 33 0e a5 9a 6d     !.Rj.......3...m
    1a74:	86 25 2e 89 94 45 11 00 02 50 0d 66 a2 45 12 25     .%...E...P.f.E.%
    1a84:	2d 52 0c 27 00 02 54 0b 64 62 65 8a 44 71 aa 00     -R.'..T.dbe.Dq..
    1a94:	02 58 0b 65 a2 6d 92 6e 4a 9a 00 02 59 0b 65 a2     .X.e.m.nJ...Y.e.
    1aa4:	6d 52 1f 92 34 01 02 5f 0b 85 19 55 d6 49 4a 23     mR..4.._...U.IJ#
    1ab4:	00 02 65 0a 85 9a 45 e2 25 d1 0a 02 75 0c 65 a2     ..e...E.%...u.e.
    1ac4:	6d 92 0e 89 92 26 00 02 79 08 64 22 55 57 15 02     m....&..y.d"UW..
    1ad4:	87 0b 84 21 45 16 b5 28 51 02 02 88 0b a4 19 4d     ...!E..(Q......M
    1ae4:	94 28 51 6f 01 02 89 0b 65 a2 45 a2 0e 89 52 05     .(Qo....e.E...R.
    1af4:	02 8c 0b 65 a2 35 1e a3 48 62 09 02 8d 0e 67 22     ...e.5..Hb....g"
    1b04:	4e 29 89 92 2a a2 22 2a 12 02 8e 0b 85 a2 55 2d     N)..*."*......U-
    1b14:	52 12 97 00 02 9e 0e 86 9a 45 94 94 f4 48 a9 21     R........E...H.!
    1b24:	19 12 02 bb 07 42 f2 4c 22 02 bc 08 42 f2 84 92     .....B.L"...B...
    1b34:	00 02 bd 07 42 f2 a4 0c 20 ac 10 88 21 9e 16 cf     ....B... ...!...
    1b44:	48 06 6b 48 86 42 35 05 00 00                       H.kH.B5...

00001b4e <__ctors_start>:
__ctors_start():
    1b4e:	e2 28       	or	r14, r2

00001b50 <__ctors_end>:
__ctors_end():
    1b50:	7e 35       	cpi	r23, 0x5E	; 94

00001b52 <__dtors_end>:
__init():
../../../../crt1/gcrt1.S:230
    1b52:	11 24       	eor	r1, r1
../../../../crt1/gcrt1.S:231
    1b54:	1f be       	out	0x3f, r1	; 63
../../../../crt1/gcrt1.S:232
    1b56:	cf ef       	ldi	r28, 0xFF	; 255
../../../../crt1/gcrt1.S:234
    1b58:	cd bf       	out	0x3d, r28	; 61
../../../../crt1/gcrt1.S:236
    1b5a:	df e3       	ldi	r29, 0x3F	; 63
../../../../crt1/gcrt1.S:237
    1b5c:	de bf       	out	0x3e, r29	; 62

00001b5e <__do_clear_bss>:
__do_clear_bss():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2441
    1b5e:	20 e3       	ldi	r18, 0x30	; 48
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2442
    1b60:	ac e0       	ldi	r26, 0x0C	; 12
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2443
    1b62:	b8 e2       	ldi	r27, 0x28	; 40
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2444
    1b64:	01 c0       	rjmp	.+2      	; 0x1b68 <.do_clear_bss_start>

00001b66 <.do_clear_bss_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2446
    1b66:	1d 92       	st	X+, r1

00001b68 <.do_clear_bss_start>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2448
    1b68:	a5 37       	cpi	r26, 0x75	; 117
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2449
    1b6a:	b2 07       	cpc	r27, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2450
    1b6c:	e1 f7       	brne	.-8      	; 0x1b66 <.do_clear_bss_loop>

00001b6e <__do_copy_data>:
__do_copy_data():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2409
    1b6e:	18 e2       	ldi	r17, 0x28	; 40
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2410
    1b70:	a0 e0       	ldi	r26, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2411
    1b72:	b8 e2       	ldi	r27, 0x28	; 40
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2412
    1b74:	e6 e6       	ldi	r30, 0x66	; 102
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2413
    1b76:	fb e7       	ldi	r31, 0x7B	; 123
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2414
    1b78:	02 c0       	rjmp	.+4      	; 0x1b7e <__do_copy_data+0x10>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2417
    1b7a:	05 90       	lpm	r0, Z+
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2422
    1b7c:	0d 92       	st	X+, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2424
    1b7e:	ac 30       	cpi	r26, 0x0C	; 12
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2425
    1b80:	b1 07       	cpc	r27, r17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2426
    1b82:	d9 f7       	brne	.-10     	; 0x1b7a <__do_copy_data+0xc>

00001b84 <__do_global_ctors>:
__do_global_ctors():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2466
    1b84:	1d e0       	ldi	r17, 0x0D	; 13
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2467
    1b86:	c8 ea       	ldi	r28, 0xA8	; 168
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2468
    1b88:	dd e0       	ldi	r29, 0x0D	; 13
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2472
    1b8a:	04 c0       	rjmp	.+8      	; 0x1b94 <__do_global_ctors+0x10>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2474
    1b8c:	21 97       	sbiw	r28, 0x01	; 1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2480
    1b8e:	fe 01       	movw	r30, r28
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2481
    1b90:	0e 94 b7 39 	call	0x736e	; 0x736e <__tablejump2__>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2483
    1b94:	c7 3a       	cpi	r28, 0xA7	; 167
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2484
    1b96:	d1 07       	cpc	r29, r17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2489
    1b98:	c9 f7       	brne	.-14     	; 0x1b8c <__do_global_ctors+0x8>
../../../../crt1/gcrt1.S:314
    1b9a:	0e 94 14 2c 	call	0x5828	; 0x5828 <main>
../../../../crt1/gcrt1.S:315
    1b9e:	0c 94 dd 3b 	jmp	0x77ba	; 0x77ba <__do_global_dtors>

00001ba2 <__bad_interrupt>:
__vector_30():
../../../../crt1/gcrt1.S:209
    1ba2:	0c 94 00 01 	jmp	0x200	; 0x200 <__vectors>

00001ba6 <u8x8_ascii_next>:
u8x8_ascii_next():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_8x8.c:292
  u8x8->utf8_state = 0;	/* also reset during u8x8_SetupDefaults() */
}

uint16_t u8x8_ascii_next(U8X8_UNUSED u8x8_t *u8x8, uint8_t b)
{
  if ( b == 0 || b == '\n' ) /* '\n' terminates the string to support the string list procedures */
    1ba6:	66 23       	and	r22, r22
    1ba8:	29 f0       	breq	.+10     	; 0x1bb4 <u8x8_ascii_next+0xe>
    1baa:	6a 30       	cpi	r22, 0x0A	; 10
    1bac:	19 f0       	breq	.+6      	; 0x1bb4 <u8x8_ascii_next+0xe>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_8x8.c:294
    return 0x0ffff;	/* end of string detected*/
  return b;
    1bae:	86 2f       	mov	r24, r22
    1bb0:	90 e0       	ldi	r25, 0x00	; 0
    1bb2:	08 95       	ret
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_8x8.c:293
}

uint16_t u8x8_ascii_next(U8X8_UNUSED u8x8_t *u8x8, uint8_t b)
{
  if ( b == 0 || b == '\n' ) /* '\n' terminates the string to support the string list procedures */
    return 0x0ffff;	/* end of string detected*/
    1bb4:	8f ef       	ldi	r24, 0xFF	; 255
    1bb6:	9f ef       	ldi	r25, 0xFF	; 255
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_8x8.c:295
  return b;
}
    1bb8:	08 95       	ret

00001bba <u8g2_ll_hvline_vertical_top_lsb>:
u8g2_ll_hvline_vertical_top_lsb():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_ll_hvline.c:73
		1: vertical line (top to bottom)
  asumption: 
    all clipping done
*/
void u8g2_ll_hvline_vertical_top_lsb(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len, uint8_t dir)
{
    1bba:	cf 92       	push	r12
    1bbc:	df 92       	push	r13
    1bbe:	ef 92       	push	r14
    1bc0:	ff 92       	push	r15
    1bc2:	0f 93       	push	r16
    1bc4:	1f 93       	push	r17
    1bc6:	cf 93       	push	r28
    1bc8:	df 93       	push	r29
    1bca:	ec 01       	movw	r28, r24
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_ll_hvline.c:89
  //assert(y >= u8g2->buf_y0);
  //assert(y < u8g2_GetU8x8(u8g2)->display_info->tile_height*8);
  
  /* bytes are vertical, lsb on top (y=0), msb at bottom (y=7) */
  bit_pos = y;		/* overflow truncate is ok here... */
  bit_pos &= 7; 	/* ... because only the lowest 3 bits are needed */
    1bcc:	84 2f       	mov	r24, r20
    1bce:	87 70       	andi	r24, 0x07	; 7
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_ll_hvline.c:91
  mask = 1;
  mask <<= bit_pos;
    1bd0:	e1 e0       	ldi	r30, 0x01	; 1
    1bd2:	f0 e0       	ldi	r31, 0x00	; 0
    1bd4:	08 2e       	mov	r0, r24
    1bd6:	01 c0       	rjmp	.+2      	; 0x1bda <u8g2_ll_hvline_vertical_top_lsb+0x20>
    1bd8:	ee 0f       	add	r30, r30
    1bda:	0a 94       	dec	r0
    1bdc:	ea f7       	brpl	.-6      	; 0x1bd8 <u8g2_ll_hvline_vertical_top_lsb+0x1e>
    1bde:	3e 2f       	mov	r19, r30
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_ll_hvline.c:95

  or_mask = 0;
  xor_mask = 0;
  if ( u8g2->draw_color <= 1 )
    1be0:	7e 01       	movw	r14, r28
    1be2:	99 e7       	ldi	r25, 0x79	; 121
    1be4:	e9 0e       	add	r14, r25
    1be6:	f1 1c       	adc	r15, r1
    1be8:	d7 01       	movw	r26, r14
    1bea:	9c 91       	ld	r25, X
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_ll_hvline.c:93
  bit_pos = y;		/* overflow truncate is ok here... */
  bit_pos &= 7; 	/* ... because only the lowest 3 bits are needed */
  mask = 1;
  mask <<= bit_pos;

  or_mask = 0;
    1bec:	10 e0       	ldi	r17, 0x00	; 0
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_ll_hvline.c:95
  xor_mask = 0;
  if ( u8g2->draw_color <= 1 )
    1bee:	92 30       	cpi	r25, 0x02	; 2
    1bf0:	18 f4       	brcc	.+6      	; 0x1bf8 <u8g2_ll_hvline_vertical_top_lsb+0x3e>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_ll_hvline.c:96
    or_mask  = mask;
    1bf2:	1e 2f       	mov	r17, r30
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_ll_hvline.c:97
  if ( u8g2->draw_color != 1 )
    1bf4:	91 30       	cpi	r25, 0x01	; 1
    1bf6:	29 f1       	breq	.+74     	; 0x1c42 <u8g2_ll_hvline_vertical_top_lsb+0x88>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_ll_hvline.c:101
    xor_mask = mask;


  offset = y;		/* y might be 8 or 16 bit, but we need 16 bit, so use a 16 bit variable */
    1bf8:	50 e0       	ldi	r21, 0x00	; 0
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_ll_hvline.c:102
  offset &= ~7;
    1bfa:	48 7f       	andi	r20, 0xF8	; 248
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_ll_hvline.c:104
  offset *= u8g2_GetU8x8(u8g2)->display_info->tile_width;
  ptr = u8g2->tile_buf_ptr;
    1bfc:	e8 ad       	ldd	r30, Y+56	; 0x38
    1bfe:	f9 ad       	ldd	r31, Y+57	; 0x39
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_ll_hvline.c:103
    xor_mask = mask;


  offset = y;		/* y might be 8 or 16 bit, but we need 16 bit, so use a 16 bit variable */
  offset &= ~7;
  offset *= u8g2_GetU8x8(u8g2)->display_info->tile_width;
    1c00:	c8 80       	ld	r12, Y
    1c02:	d9 80       	ldd	r13, Y+1	; 0x01
    1c04:	d6 01       	movw	r26, r12
    1c06:	50 96       	adiw	r26, 0x10	; 16
    1c08:	9c 91       	ld	r25, X
    1c0a:	94 9f       	mul	r25, r20
    1c0c:	60 01       	movw	r12, r0
    1c0e:	95 9f       	mul	r25, r21
    1c10:	d0 0c       	add	r13, r0
    1c12:	11 24       	eor	r1, r1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_ll_hvline.c:106
  ptr = u8g2->tile_buf_ptr;
  ptr += offset;
  ptr += x;
    1c14:	6c 0d       	add	r22, r12
    1c16:	7d 2d       	mov	r23, r13
    1c18:	71 1d       	adc	r23, r1
    1c1a:	df 01       	movw	r26, r30
    1c1c:	a6 0f       	add	r26, r22
    1c1e:	b7 1f       	adc	r27, r23
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_ll_hvline.c:108
  
  if ( dir == 0 )
    1c20:	01 11       	cpse	r16, r1
    1c22:	15 c0       	rjmp	.+42     	; 0x1c4e <u8g2_ll_hvline_vertical_top_lsb+0x94>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_ll_hvline.c:115
      do
      {
#ifdef __unix
	assert(ptr < max_ptr);
#endif
	*ptr |= or_mask;
    1c24:	8c 91       	ld	r24, X
    1c26:	81 2b       	or	r24, r17
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_ll_hvline.c:116
	*ptr ^= xor_mask;
    1c28:	83 27       	eor	r24, r19
    1c2a:	8d 93       	st	X+, r24
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_ll_hvline.c:118
	ptr++;
	len--;
    1c2c:	21 50       	subi	r18, 0x01	; 1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_ll_hvline.c:119
      } while( len != 0 );
    1c2e:	d1 f7       	brne	.-12     	; 0x1c24 <u8g2_ll_hvline_vertical_top_lsb+0x6a>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_ll_hvline.c:152
	or_mask <<= 1;
	xor_mask <<= 1;
      }
    } while( len != 0 );
  }
}
    1c30:	df 91       	pop	r29
    1c32:	cf 91       	pop	r28
    1c34:	1f 91       	pop	r17
    1c36:	0f 91       	pop	r16
    1c38:	ff 90       	pop	r15
    1c3a:	ef 90       	pop	r14
    1c3c:	df 90       	pop	r13
    1c3e:	cf 90       	pop	r12
    1c40:	08 95       	ret
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_ll_hvline.c:94
  bit_pos &= 7; 	/* ... because only the lowest 3 bits are needed */
  mask = 1;
  mask <<= bit_pos;

  or_mask = 0;
  xor_mask = 0;
    1c42:	30 e0       	ldi	r19, 0x00	; 0
    1c44:	d9 cf       	rjmp	.-78     	; 0x1bf8 <u8g2_ll_hvline_vertical_top_lsb+0x3e>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_ll_hvline.c:147
	if ( u8g2->draw_color != 1 )
	  xor_mask = 1;
      }
      else
      {
	or_mask <<= 1;
    1c46:	11 0f       	add	r17, r17
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_ll_hvline.c:148
	xor_mask <<= 1;
    1c48:	33 0f       	add	r19, r19
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_ll_hvline.c:150
      }
    } while( len != 0 );
    1c4a:	22 23       	and	r18, r18
    1c4c:	89 f3       	breq	.-30     	; 0x1c30 <u8g2_ll_hvline_vertical_top_lsb+0x76>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_ll_hvline.c:128
    do
    {
#ifdef __unix
      assert(ptr < max_ptr);
#endif
      *ptr |= or_mask;
    1c4e:	9c 91       	ld	r25, X
    1c50:	91 2b       	or	r25, r17
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_ll_hvline.c:129
      *ptr ^= xor_mask;
    1c52:	93 27       	eor	r25, r19
    1c54:	9c 93       	st	X, r25
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_ll_hvline.c:131
      
      bit_pos++;
    1c56:	8f 5f       	subi	r24, 0xFF	; 255
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_ll_hvline.c:132
      bit_pos &= 7;
    1c58:	87 70       	andi	r24, 0x07	; 7
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_ll_hvline.c:134

      len--;
    1c5a:	21 50       	subi	r18, 0x01	; 1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_ll_hvline.c:136

      if ( bit_pos == 0 )
    1c5c:	81 11       	cpse	r24, r1
    1c5e:	f3 cf       	rjmp	.-26     	; 0x1c46 <u8g2_ll_hvline_vertical_top_lsb+0x8c>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_ll_hvline.c:138
      {
	ptr+=u8g2->pixel_buf_width;	/* 6 Jan 17: Changed u8g2->width to u8g2->pixel_buf_width, issue #148 */
    1c60:	9c ad       	ldd	r25, Y+60	; 0x3c
    1c62:	a9 0f       	add	r26, r25
    1c64:	b1 1d       	adc	r27, r1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_ll_hvline.c:140
		
	if ( u8g2->draw_color <= 1 )
    1c66:	f7 01       	movw	r30, r14
    1c68:	90 81       	ld	r25, Z
    1c6a:	92 30       	cpi	r25, 0x02	; 2
    1c6c:	28 f4       	brcc	.+10     	; 0x1c78 <u8g2_ll_hvline_vertical_top_lsb+0xbe>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_ll_hvline.c:142
	  or_mask  = 1;
	if ( u8g2->draw_color != 1 )
    1c6e:	91 30       	cpi	r25, 0x01	; 1
    1c70:	09 f0       	breq	.+2      	; 0x1c74 <u8g2_ll_hvline_vertical_top_lsb+0xba>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_ll_hvline.c:143
	  xor_mask = 1;
    1c72:	31 e0       	ldi	r19, 0x01	; 1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_ll_hvline.c:141
      if ( bit_pos == 0 )
      {
	ptr+=u8g2->pixel_buf_width;	/* 6 Jan 17: Changed u8g2->width to u8g2->pixel_buf_width, issue #148 */
		
	if ( u8g2->draw_color <= 1 )
	  or_mask  = 1;
    1c74:	11 e0       	ldi	r17, 0x01	; 1
    1c76:	e9 cf       	rjmp	.-46     	; 0x1c4a <u8g2_ll_hvline_vertical_top_lsb+0x90>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_ll_hvline.c:143
	if ( u8g2->draw_color != 1 )
	  xor_mask = 1;
    1c78:	31 e0       	ldi	r19, 0x01	; 1
    1c7a:	e7 cf       	rjmp	.-50     	; 0x1c4a <u8g2_ll_hvline_vertical_top_lsb+0x90>

00001c7c <u8x8_dummy_cb>:
u8x8_dummy_cb():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_setup.c:44
/* universal dummy callback, which will be default for all callbacks */
uint8_t u8x8_dummy_cb(U8X8_UNUSED u8x8_t *u8x8, U8X8_UNUSED uint8_t msg, U8X8_UNUSED uint8_t arg_int, U8X8_UNUSED void *arg_ptr)
{
  /* the dummy callback will not handle any message and will fail for all messages */
  return 0;
}
    1c7c:	80 e0       	ldi	r24, 0x00	; 0
    1c7e:	08 95       	ret

00001c80 <u8g2_font_calc_vref_font>:
u8g2_font_calc_vref_font():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:1230
/* callback procedures to correct the y position */

u8g2_uint_t u8g2_font_calc_vref_font(U8X8_UNUSED u8g2_t *u8g2)
{
  return 0;
}
    1c80:	80 e0       	ldi	r24, 0x00	; 0
    1c82:	08 95       	ret

00001c84 <Adafruit_Thermal::adjustCharValues(unsigned char) [clone .constprop.44]>:
adjustCharValues():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:283
#define DOUBLE_WIDTH_MASK (1 << 5)  //!< Turn on/off double-width printing mode
#define STRIKE_MASK (1 << 6)        //!< Turn on/off deleteline mode

void Adafruit_Thermal::adjustCharValues(uint8_t printMode) {
  uint8_t charWidth;
  if (printMode & FONT_MASK) {
    1c84:	80 ff       	sbrs	r24, 0
    1c86:	15 c0       	rjmp	.+42     	; 0x1cb2 <Adafruit_Thermal::adjustCharValues(unsigned char) [clone .constprop.44]+0x2e>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:285
    // FontB
    charHeight = 17;
    1c88:	91 e1       	ldi	r25, 0x11	; 17
    1c8a:	90 93 bb 2f 	sts	0x2FBB, r25	; 0x802fbb <printer+0xa>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:286
    charWidth = 9;
    1c8e:	69 e0       	ldi	r22, 0x09	; 9
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:293
    // FontA
    charHeight = 24;
    charWidth = 12;
  }
  // Double Width Mode
  if (printMode & DOUBLE_WIDTH_MASK) {
    1c90:	85 fd       	sbrc	r24, 5
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:295
    maxColumn /= 2;
    charWidth *= 2;
    1c92:	66 0f       	add	r22, r22
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:298
  }
  // Double Height Mode
  if (printMode & DOUBLE_HEIGHT_MASK) {
    1c94:	84 ff       	sbrs	r24, 4
    1c96:	05 c0       	rjmp	.+10     	; 0x1ca2 <Adafruit_Thermal::adjustCharValues(unsigned char) [clone .constprop.44]+0x1e>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:299
    charHeight *= 2;
    1c98:	80 91 bb 2f 	lds	r24, 0x2FBB	; 0x802fbb <printer+0xa>
    1c9c:	88 0f       	add	r24, r24
    1c9e:	80 93 bb 2f 	sts	0x2FBB, r24	; 0x802fbb <printer+0xa>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:301
  }
  maxColumn = (384 / charWidth);
    1ca2:	70 e0       	ldi	r23, 0x00	; 0
    1ca4:	80 e8       	ldi	r24, 0x80	; 128
    1ca6:	91 e0       	ldi	r25, 0x01	; 1
    1ca8:	0e 94 66 39 	call	0x72cc	; 0x72cc <__divmodhi4>
    1cac:	60 93 ba 2f 	sts	0x2FBA, r22	; 0x802fba <printer+0x9>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:302
}
    1cb0:	08 95       	ret
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:289
    // FontB
    charHeight = 17;
    charWidth = 9;
  } else {
    // FontA
    charHeight = 24;
    1cb2:	98 e1       	ldi	r25, 0x18	; 24
    1cb4:	90 93 bb 2f 	sts	0x2FBB, r25	; 0x802fbb <printer+0xa>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:290
    charWidth = 12;
    1cb8:	6c e0       	ldi	r22, 0x0C	; 12
    1cba:	ea cf       	rjmp	.-44     	; 0x1c90 <Adafruit_Thermal::adjustCharValues(unsigned char) [clone .constprop.44]+0xc>

00001cbc <u8g2_SetDrawColor.constprop.20>:
u8g2_SetDrawColor():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_hvline.c:251
  7 Jan 2017: Allow color value 2 for XOR operation.
  
*/
void u8g2_SetDrawColor(u8g2_t *u8g2, uint8_t color)
{
  u8g2->draw_color = color;	/* u8g2_SetDrawColor: just assign the argument */ 
    1cbc:	81 e0       	ldi	r24, 0x01	; 1
    1cbe:	80 93 6b 30 	sts	0x306B, r24	; 0x80306b <u8g2+0x7d>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_hvline.c:254
  if ( color >= 3 )
    u8g2->draw_color = 1;	/* u8g2_SetDrawColor: make color as one if arg is invalid */
}
    1cc2:	08 95       	ret

00001cc4 <u8x8_byte_SendBytes.constprop.4>:
u8x8_byte_SendBytes():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_byte.c:44
uint8_t u8x8_byte_SetDC(u8x8_t *u8x8, uint8_t dc)
{
  return u8x8->byte_cb(u8x8, U8X8_MSG_BYTE_SET_DC, dc, NULL);
}

uint8_t u8x8_byte_SendBytes(u8x8_t *u8x8, uint8_t cnt, uint8_t *data)
    1cc4:	9b 01       	movw	r18, r22
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_byte.c:46
{
  return u8x8->byte_cb(u8x8, U8X8_MSG_BYTE_SEND, cnt, (void *)data);
    1cc6:	dc 01       	movw	r26, r24
    1cc8:	18 96       	adiw	r26, 0x08	; 8
    1cca:	ed 91       	ld	r30, X+
    1ccc:	fc 91       	ld	r31, X
    1cce:	41 e0       	ldi	r20, 0x01	; 1
    1cd0:	67 e1       	ldi	r22, 0x17	; 23
    1cd2:	09 94       	ijmp

00001cd4 <pinMode.part.1>:
pinMode.part.1():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:29

#define ARDUINO_MAIN
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
    1cd4:	cf 93       	push	r28
    1cd6:	df 93       	push	r29
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:31
{
  uint8_t bit_mask = digitalPinToBitMask(pin);
    1cd8:	90 e0       	ldi	r25, 0x00	; 0
    1cda:	fc 01       	movw	r30, r24
    1cdc:	e6 52       	subi	r30, 0x26	; 38
    1cde:	f7 44       	sbci	r31, 0x47	; 71
    1ce0:	20 81       	ld	r18, Z
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:33

  if ((bit_mask == NOT_A_PIN) || (mode > INPUT_PULLUP))
    1ce2:	2f 3f       	cpi	r18, 0xFF	; 255
    1ce4:	69 f0       	breq	.+26     	; 0x1d00 <pinMode.part.1+0x2c>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:36
    return;

  PORT_t *port = digitalPinToPortStruct(pin);
    1ce6:	fc 01       	movw	r30, r24
    1ce8:	e1 54       	subi	r30, 0x41	; 65
    1cea:	f7 44       	sbci	r31, 0x47	; 71
    1cec:	a0 81       	ld	r26, Z
    1cee:	30 e2       	ldi	r19, 0x20	; 32
    1cf0:	a3 9f       	mul	r26, r19
    1cf2:	d0 01       	movw	r26, r0
    1cf4:	11 24       	eor	r1, r1
    1cf6:	bc 5f       	subi	r27, 0xFC	; 252
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:40
  if (port == NULL)
    return;

  if (mode == OUTPUT)
    1cf8:	61 30       	cpi	r22, 0x01	; 1
    1cfa:	29 f4       	brne	.+10     	; 0x1d06 <pinMode.part.1+0x32>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:43
  {
    /* Configure direction as output */
    port->DIRSET = bit_mask;
    1cfc:	11 96       	adiw	r26, 0x01	; 1
    1cfe:	2c 93       	st	X, r18
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:75
    }

    /* Restore state */
    SREG = status;
  }
}
    1d00:	df 91       	pop	r29
    1d02:	cf 91       	pop	r28
    1d04:	08 95       	ret
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:48
    port->DIRSET = bit_mask;
  }
  else
  { /* mode == INPUT or INPUT_PULLUP */

    uint8_t bit_pos = digitalPinToBitPosition(pin);
    1d06:	88 59       	subi	r24, 0x98	; 152
    1d08:	97 44       	sbci	r25, 0x47	; 71
    1d0a:	ec 01       	movw	r28, r24
    1d0c:	e8 81       	ld	r30, Y
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:50
    /* Calculate where pin control register is */
    volatile uint8_t *pin_ctrl_reg = getPINnCTRLregister(port, bit_pos);
    1d0e:	ef 3f       	cpi	r30, 0xFF	; 255
    1d10:	81 f0       	breq	.+32     	; 0x1d32 <pinMode.part.1+0x5e>
    1d12:	cd 01       	movw	r24, r26
    1d14:	40 96       	adiw	r24, 0x10	; 16
    1d16:	e8 0f       	add	r30, r24
    1d18:	f9 2f       	mov	r31, r25
    1d1a:	f1 1d       	adc	r31, r1
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:53

    /* Save state */
    uint8_t status = SREG;
    1d1c:	9f b7       	in	r25, 0x3f	; 63
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:54
    cli();
    1d1e:	f8 94       	cli
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:57

    /* Configure direction as input */
    port->DIRCLR = bit_mask;
    1d20:	12 96       	adiw	r26, 0x02	; 2
    1d22:	2c 93       	st	X, r18
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:63

    /* Configure pull-up resistor */
    if (mode == INPUT_PULLUP)
    {
      /* Enable pull-up */
      *pin_ctrl_reg |= PORT_PULLUPEN_bm;
    1d24:	80 81       	ld	r24, Z
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:60

    /* Configure direction as input */
    port->DIRCLR = bit_mask;

    /* Configure pull-up resistor */
    if (mode == INPUT_PULLUP)
    1d26:	62 30       	cpi	r22, 0x02	; 2
    1d28:	39 f4       	brne	.+14     	; 0x1d38 <pinMode.part.1+0x64>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:63
    {
      /* Enable pull-up */
      *pin_ctrl_reg |= PORT_PULLUPEN_bm;
    1d2a:	88 60       	ori	r24, 0x08	; 8
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:69
    }
    else
    { /* mode == INPUT (no pullup) */

      /* Disable pull-up */
      *pin_ctrl_reg &= ~(PORT_PULLUPEN_bm);
    1d2c:	80 83       	st	Z, r24
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:73
    }

    /* Restore state */
    SREG = status;
    1d2e:	9f bf       	out	0x3f, r25	; 63
    1d30:	e7 cf       	rjmp	.-50     	; 0x1d00 <pinMode.part.1+0x2c>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:50
  else
  { /* mode == INPUT or INPUT_PULLUP */

    uint8_t bit_pos = digitalPinToBitPosition(pin);
    /* Calculate where pin control register is */
    volatile uint8_t *pin_ctrl_reg = getPINnCTRLregister(port, bit_pos);
    1d32:	f0 e0       	ldi	r31, 0x00	; 0
    1d34:	e0 e0       	ldi	r30, 0x00	; 0
    1d36:	f2 cf       	rjmp	.-28     	; 0x1d1c <pinMode.part.1+0x48>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:69
    }
    else
    { /* mode == INPUT (no pullup) */

      /* Disable pull-up */
      *pin_ctrl_reg &= ~(PORT_PULLUPEN_bm);
    1d38:	87 7f       	andi	r24, 0xF7	; 247
    1d3a:	f8 cf       	rjmp	.-16     	; 0x1d2c <pinMode.part.1+0x58>

00001d3c <pinMode>:
pinMode():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:31
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
{
  uint8_t bit_mask = digitalPinToBitMask(pin);
    1d3c:	8b 31       	cpi	r24, 0x1B	; 27
    1d3e:	08 f4       	brcc	.+2      	; 0x1d42 <pinMode+0x6>
    1d40:	c9 cf       	rjmp	.-110    	; 0x1cd4 <pinMode.part.1>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:75
    }

    /* Restore state */
    SREG = status;
  }
}
    1d42:	08 95       	ret

00001d44 <turnOffPWM.part.0>:
turnOffPWM.part.0():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:97
static void turnOffPWM(uint8_t pin)
{
  /* Actually turn off compare channel, not the timer */

  /* Get pin's timer */
  uint8_t timer = digitalPinToTimer(pin);
    1d44:	90 e0       	ldi	r25, 0x00	; 0
    1d46:	fc 01       	movw	r30, r24
    1d48:	e3 5b       	subi	r30, 0xB3	; 179
    1d4a:	f7 44       	sbci	r31, 0x47	; 71
    1d4c:	e0 81       	ld	r30, Z
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:98
  if (timer == NOT_ON_TIMER)
    1d4e:	ee 23       	and	r30, r30
    1d50:	19 f1       	breq	.+70     	; 0x1d98 <turnOffPWM.part.0+0x54>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:104
    return;

  uint8_t bit_pos;
  TCB_t *timerB;

  switch (timer)
    1d52:	e1 30       	cpi	r30, 0x01	; 1
    1d54:	21 f0       	breq	.+8      	; 0x1d5e <turnOffPWM.part.0+0x1a>
    1d56:	00 f1       	brcs	.+64     	; 0x1d98 <turnOffPWM.part.0+0x54>
    1d58:	e6 30       	cpi	r30, 0x06	; 6
    1d5a:	a8 f0       	brcs	.+42     	; 0x1d86 <turnOffPWM.part.0+0x42>
    1d5c:	08 95       	ret
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:109
  {
    /* TCA0 */
    case TIMERA0:
      /* Bit position will give output channel */
      bit_pos = digitalPinToBitPosition(pin);
    1d5e:	88 59       	subi	r24, 0x98	; 152
    1d60:	97 44       	sbci	r25, 0x47	; 71
    1d62:	fc 01       	movw	r30, r24
    1d64:	20 81       	ld	r18, Z
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:112

      /* Disable corresponding channel */
      if (bit_pos >= 3) ++bit_pos; /* Upper 3 bits are shifted by 1 */
    1d66:	23 30       	cpi	r18, 0x03	; 3
    1d68:	08 f0       	brcs	.+2      	; 0x1d6c <turnOffPWM.part.0+0x28>
    1d6a:	2f 5f       	subi	r18, 0xFF	; 255
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:113
      TCA0.SPLIT.CTRLB &= ~(1 << (TCA_SPLIT_LCMP0EN_bp + bit_pos));
    1d6c:	30 91 01 0a 	lds	r19, 0x0A01	; 0x800a01 <__TEXT_REGION_LENGTH__+0x7f4a01>
    1d70:	81 e0       	ldi	r24, 0x01	; 1
    1d72:	90 e0       	ldi	r25, 0x00	; 0
    1d74:	01 c0       	rjmp	.+2      	; 0x1d78 <turnOffPWM.part.0+0x34>
    1d76:	88 0f       	add	r24, r24
    1d78:	2a 95       	dec	r18
    1d7a:	ea f7       	brpl	.-6      	; 0x1d76 <turnOffPWM.part.0+0x32>
    1d7c:	80 95       	com	r24
    1d7e:	83 23       	and	r24, r19
    1d80:	80 93 01 0a 	sts	0x0A01, r24	; 0x800a01 <__TEXT_REGION_LENGTH__+0x7f4a01>
    1d84:	08 95       	ret
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:123
    case TIMERB0:
    case TIMERB1:
    case TIMERB2:
    case TIMERB3:

      timerB = (TCB_t *)&TCB0 + (timer - TIMERB0);
    1d86:	80 e1       	ldi	r24, 0x10	; 16
    1d88:	e8 9f       	mul	r30, r24
    1d8a:	f0 01       	movw	r30, r0
    1d8c:	11 24       	eor	r1, r1
    1d8e:	e0 5a       	subi	r30, 0xA0	; 160
    1d90:	f5 4f       	sbci	r31, 0xF5	; 245
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:126

      /* Disable TCB compare channel */
      timerB->CTRLB &= ~(TCB_CCMPEN_bm);
    1d92:	81 81       	ldd	r24, Z+1	; 0x01
    1d94:	8f 7e       	andi	r24, 0xEF	; 239
    1d96:	81 83       	std	Z+1, r24	; 0x01
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:132

      break;
    default:
      break;
  }
}
    1d98:	08 95       	ret

00001d9a <digitalWrite.part.2>:
digitalWrite.part.2():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:134

void digitalWrite(uint8_t pin, uint8_t val)
    1d9a:	0f 93       	push	r16
    1d9c:	1f 93       	push	r17
    1d9e:	cf 93       	push	r28
    1da0:	df 93       	push	r29
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:137
{
  /* Get bit mask for pin */
  uint8_t bit_mask = digitalPinToBitMask(pin);
    1da2:	08 2f       	mov	r16, r24
    1da4:	10 e0       	ldi	r17, 0x00	; 0
    1da6:	f8 01       	movw	r30, r16
    1da8:	e6 52       	subi	r30, 0x26	; 38
    1daa:	f7 44       	sbci	r31, 0x47	; 71
    1dac:	d0 81       	ld	r29, Z
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:138
  if (bit_mask == NOT_A_PIN)
    1dae:	df 3f       	cpi	r29, 0xFF	; 255
    1db0:	99 f0       	breq	.+38     	; 0x1dd8 <digitalWrite.part.2+0x3e>
    1db2:	c6 2f       	mov	r28, r22
turnOffPWM():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:97
static void turnOffPWM(uint8_t pin)
{
  /* Actually turn off compare channel, not the timer */

  /* Get pin's timer */
  uint8_t timer = digitalPinToTimer(pin);
    1db4:	8b 31       	cpi	r24, 0x1B	; 27
    1db6:	08 f4       	brcc	.+2      	; 0x1dba <digitalWrite.part.2+0x20>
    1db8:	c5 df       	rcall	.-118    	; 0x1d44 <turnOffPWM.part.0>
digitalWrite.part.2():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:150
  turnOffPWM(pin);

  /* Assuming the direction is already output !! */

  /* Get port */
  PORT_t *port = digitalPinToPortStruct(pin);
    1dba:	f8 01       	movw	r30, r16
    1dbc:	e1 54       	subi	r30, 0x41	; 65
    1dbe:	f7 44       	sbci	r31, 0x47	; 71
    1dc0:	e0 81       	ld	r30, Z
    1dc2:	80 e2       	ldi	r24, 0x20	; 32
    1dc4:	e8 9f       	mul	r30, r24
    1dc6:	f0 01       	movw	r30, r0
    1dc8:	11 24       	eor	r1, r1
    1dca:	fc 5f       	subi	r31, 0xFC	; 252
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:153

  /* Output direction */
  if (port->DIR & bit_mask)
    1dcc:	80 81       	ld	r24, Z
    1dce:	8d 23       	and	r24, r29
    1dd0:	71 f0       	breq	.+28     	; 0x1dee <digitalWrite.part.2+0x54>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:156
  {
    /* Set output to value */
    if (val == LOW)
    1dd2:	c1 11       	cpse	r28, r1
    1dd4:	06 c0       	rjmp	.+12     	; 0x1de2 <digitalWrite.part.2+0x48>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:158
    { /* If LOW */
      port->OUTCLR = bit_mask;
    1dd6:	d6 83       	std	Z+6, r29	; 0x06
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:203
    }

    /* Restore system status */
    SREG = status;
  }
}
    1dd8:	df 91       	pop	r29
    1dda:	cf 91       	pop	r28
    1ddc:	1f 91       	pop	r17
    1dde:	0f 91       	pop	r16
    1de0:	08 95       	ret
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:160
    /* Set output to value */
    if (val == LOW)
    { /* If LOW */
      port->OUTCLR = bit_mask;
    }
    else if (val == CHANGE)
    1de2:	c4 30       	cpi	r28, 0x04	; 4
    1de4:	11 f4       	brne	.+4      	; 0x1dea <digitalWrite.part.2+0x50>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:162
    { /* If TOGGLE */
      port->OUTTGL = bit_mask;
    1de6:	d7 83       	std	Z+7, r29	; 0x07
    1de8:	f7 cf       	rjmp	.-18     	; 0x1dd8 <digitalWrite.part.2+0x3e>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:167
      /* If HIGH OR  > TOGGLE  */
    }
    else
    {
      port->OUTSET = bit_mask;
    1dea:	d5 83       	std	Z+5, r29	; 0x05
    1dec:	f5 cf       	rjmp	.-22     	; 0x1dd8 <digitalWrite.part.2+0x3e>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:180
    pull up is enabled if this function is called.
    Should we purposely implement this side effect?
    */

    /* Get bit position for getting pin ctrl reg */
    uint8_t bit_pos = digitalPinToBitPosition(pin);
    1dee:	d8 01       	movw	r26, r16
    1df0:	a8 59       	subi	r26, 0x98	; 152
    1df2:	b7 44       	sbci	r27, 0x47	; 71
    1df4:	8c 91       	ld	r24, X
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:183

    /* Calculate where pin control register is */
    volatile uint8_t *pin_ctrl_reg = getPINnCTRLregister(port, bit_pos);
    1df6:	30 97       	sbiw	r30, 0x00	; 0
    1df8:	71 f0       	breq	.+28     	; 0x1e16 <digitalWrite.part.2+0x7c>
    1dfa:	8f 3f       	cpi	r24, 0xFF	; 255
    1dfc:	61 f0       	breq	.+24     	; 0x1e16 <digitalWrite.part.2+0x7c>
    1dfe:	70 96       	adiw	r30, 0x10	; 16
    1e00:	e8 0f       	add	r30, r24
    1e02:	f1 1d       	adc	r31, r1
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:186

    /* Save system status and disable interrupts */
    uint8_t status = SREG;
    1e04:	9f b7       	in	r25, 0x3f	; 63
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:187
    cli();
    1e06:	f8 94       	cli
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:192

    if (val == LOW)
    {
      /* Disable pullup */
      *pin_ctrl_reg &= ~PORT_PULLUPEN_bm;
    1e08:	80 81       	ld	r24, Z
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:189

    /* Save system status and disable interrupts */
    uint8_t status = SREG;
    cli();

    if (val == LOW)
    1e0a:	c1 11       	cpse	r28, r1
    1e0c:	07 c0       	rjmp	.+14     	; 0x1e1c <digitalWrite.part.2+0x82>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:192
    {
      /* Disable pullup */
      *pin_ctrl_reg &= ~PORT_PULLUPEN_bm;
    1e0e:	87 7f       	andi	r24, 0xF7	; 247
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:197
    }
    else
    {
      /* Enable pull-up */
      *pin_ctrl_reg |= PORT_PULLUPEN_bm;
    1e10:	80 83       	st	Z, r24
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:201
    }

    /* Restore system status */
    SREG = status;
    1e12:	9f bf       	out	0x3f, r25	; 63
    1e14:	e1 cf       	rjmp	.-62     	; 0x1dd8 <digitalWrite.part.2+0x3e>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:183

    /* Get bit position for getting pin ctrl reg */
    uint8_t bit_pos = digitalPinToBitPosition(pin);

    /* Calculate where pin control register is */
    volatile uint8_t *pin_ctrl_reg = getPINnCTRLregister(port, bit_pos);
    1e16:	f0 e0       	ldi	r31, 0x00	; 0
    1e18:	e0 e0       	ldi	r30, 0x00	; 0
    1e1a:	f4 cf       	rjmp	.-24     	; 0x1e04 <digitalWrite.part.2+0x6a>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:197
      *pin_ctrl_reg &= ~PORT_PULLUPEN_bm;
    }
    else
    {
      /* Enable pull-up */
      *pin_ctrl_reg |= PORT_PULLUPEN_bm;
    1e1c:	88 60       	ori	r24, 0x08	; 8
    1e1e:	f8 cf       	rjmp	.-16     	; 0x1e10 <digitalWrite.part.2+0x76>

00001e20 <digitalRead>:
digitalRead():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:228
  else // CHANGE
    vport->IN = mask;
}

uint8_t digitalRead(uint8_t pin)
{
    1e20:	0f 93       	push	r16
    1e22:	1f 93       	push	r17
    1e24:	cf 93       	push	r28
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:230
  /* Get bit mask and check valid pin */
  uint8_t bit_mask = digitalPinToBitMask(pin);
    1e26:	8b 31       	cpi	r24, 0x1B	; 27
    1e28:	b0 f4       	brcc	.+44     	; 0x1e56 <digitalRead+0x36>
    1e2a:	08 2f       	mov	r16, r24
    1e2c:	10 e0       	ldi	r17, 0x00	; 0
    1e2e:	f8 01       	movw	r30, r16
    1e30:	e6 52       	subi	r30, 0x26	; 38
    1e32:	f7 44       	sbci	r31, 0x47	; 71
    1e34:	c0 81       	ld	r28, Z
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:231
  if (bit_mask == NOT_A_PIN)
    1e36:	cf 3f       	cpi	r28, 0xFF	; 255
    1e38:	71 f0       	breq	.+28     	; 0x1e56 <digitalRead+0x36>
turnOffPWM():
    1e3a:	84 df       	rcall	.-248    	; 0x1d44 <turnOffPWM.part.0>
digitalRead():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:239
  // If the pin that support PWM output, we need to turn it off
  // before getting a digital reading.
  turnOffPWM(pin);

  /* Get port and check valid port */
  PORT_t *port = digitalPinToPortStruct(pin);
    1e3c:	f8 01       	movw	r30, r16
    1e3e:	e1 54       	subi	r30, 0x41	; 65
    1e40:	f7 44       	sbci	r31, 0x47	; 71
    1e42:	e0 81       	ld	r30, Z
    1e44:	80 e2       	ldi	r24, 0x20	; 32
    1e46:	e8 9f       	mul	r30, r24
    1e48:	f0 01       	movw	r30, r0
    1e4a:	11 24       	eor	r1, r1
    1e4c:	fc 5f       	subi	r31, 0xFC	; 252
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:242

  /* Read pin value from PORTx.IN register */
  if (port->IN & bit_mask)
    1e4e:	80 85       	ldd	r24, Z+8	; 0x08
    1e50:	c8 23       	and	r28, r24
    1e52:	81 e0       	ldi	r24, 0x01	; 1
    1e54:	09 f4       	brne	.+2      	; 0x1e58 <digitalRead+0x38>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:232
uint8_t digitalRead(uint8_t pin)
{
  /* Get bit mask and check valid pin */
  uint8_t bit_mask = digitalPinToBitMask(pin);
  if (bit_mask == NOT_A_PIN)
    return LOW;
    1e56:	80 e0       	ldi	r24, 0x00	; 0
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:248
    return HIGH;
  else
    return LOW;

  return LOW;
}
    1e58:	cf 91       	pop	r28
    1e5a:	1f 91       	pop	r17
    1e5c:	0f 91       	pop	r16
    1e5e:	08 95       	ret

00001e60 <micros>:
micros():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring.c:103
{
  uint32_t m;
  uint16_t t;

  /* Save current state and disable interrupts */
  uint8_t status = SREG;
    1e60:	8f b7       	in	r24, 0x3f	; 63
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring.c:104
  cli();
    1e62:	f8 94       	cli
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring.c:107

  /* Get current number of millis (i.e. overflows) and timer count */
  m = timer_millis;
    1e64:	20 91 b7 29 	lds	r18, 0x29B7	; 0x8029b7 <timer_millis>
    1e68:	30 91 b8 29 	lds	r19, 0x29B8	; 0x8029b8 <timer_millis+0x1>
    1e6c:	40 91 b9 29 	lds	r20, 0x29B9	; 0x8029b9 <timer_millis+0x2>
    1e70:	50 91 ba 29 	lds	r21, 0x29BA	; 0x8029ba <timer_millis+0x3>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring.c:108
  t = _timer->CNT;
    1e74:	e0 91 aa 0a 	lds	r30, 0x0AAA	; 0x800aaa <__TEXT_REGION_LENGTH__+0x7f4aaa>
    1e78:	f0 91 ab 0a 	lds	r31, 0x0AAB	; 0x800aab <__TEXT_REGION_LENGTH__+0x7f4aab>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring.c:112

  /* If the timer overflow flag is raised, we just missed it,
  increment to account for it, & read new ticks */
  if (_timer->INTFLAGS & TCB_CAPT_bm)
    1e7c:	90 91 a6 0a 	lds	r25, 0x0AA6	; 0x800aa6 <__TEXT_REGION_LENGTH__+0x7f4aa6>
    1e80:	90 ff       	sbrs	r25, 0
    1e82:	08 c0       	rjmp	.+16     	; 0x1e94 <micros+0x34>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring.c:114
  {
    m++;
    1e84:	2f 5f       	subi	r18, 0xFF	; 255
    1e86:	3f 4f       	sbci	r19, 0xFF	; 255
    1e88:	4f 4f       	sbci	r20, 0xFF	; 255
    1e8a:	5f 4f       	sbci	r21, 0xFF	; 255
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring.c:115
    t = _timer->CNT;
    1e8c:	e0 91 aa 0a 	lds	r30, 0x0AAA	; 0x800aaa <__TEXT_REGION_LENGTH__+0x7f4aaa>
    1e90:	f0 91 ab 0a 	lds	r31, 0x0AAB	; 0x800aab <__TEXT_REGION_LENGTH__+0x7f4aab>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring.c:119
  }

  // Restore SREG
  SREG = status;
    1e94:	8f bf       	out	0x3f, r24	; 63
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring.c:125

#if (F_CPU == 20000000L)
  t = t >> 4;
  return m * 1000 + (t - (t >> 2) + (t >> 4) - (t >> 6));
#elif (F_CPU == 16000000L)
  return m * 1000 + (t >> 4);
    1e96:	a8 ee       	ldi	r26, 0xE8	; 232
    1e98:	b3 e0       	ldi	r27, 0x03	; 3
    1e9a:	0e 94 77 38 	call	0x70ee	; 0x70ee <__muluhisi3>
    1e9e:	24 e0       	ldi	r18, 0x04	; 4
    1ea0:	f6 95       	lsr	r31
    1ea2:	e7 95       	ror	r30
    1ea4:	2a 95       	dec	r18
    1ea6:	e1 f7       	brne	.-8      	; 0x1ea0 <micros+0x40>
    1ea8:	6e 0f       	add	r22, r30
    1eaa:	7f 1f       	adc	r23, r31
    1eac:	81 1d       	adc	r24, r1
    1eae:	91 1d       	adc	r25, r1
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring.c:143
#elif (F_CPU == 1000000L)
  return m * 1000 + t;
#else
  return 0;
#endif
}
    1eb0:	08 95       	ret

00001eb2 <delay>:
delay():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring.c:146

void delay(unsigned long ms)
{
    1eb2:	8f 92       	push	r8
    1eb4:	9f 92       	push	r9
    1eb6:	af 92       	push	r10
    1eb8:	bf 92       	push	r11
    1eba:	cf 92       	push	r12
    1ebc:	df 92       	push	r13
    1ebe:	ef 92       	push	r14
    1ec0:	ff 92       	push	r15
    1ec2:	4b 01       	movw	r8, r22
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring.c:147
  uint32_t start_time = micros(), delay_time = 1000 * ms;
    1ec4:	5c 01       	movw	r10, r24
    1ec6:	cc df       	rcall	.-104    	; 0x1e60 <micros>
    1ec8:	6b 01       	movw	r12, r22
    1eca:	7c 01       	movw	r14, r24
    1ecc:	a8 ee       	ldi	r26, 0xE8	; 232
    1ece:	b3 e0       	ldi	r27, 0x03	; 3
    1ed0:	a5 01       	movw	r20, r10
    1ed2:	94 01       	movw	r18, r8
    1ed4:	0e 94 77 38 	call	0x70ee	; 0x70ee <__muluhisi3>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring.c:150

  /* Calculate future time to return */
  uint32_t return_time = start_time + delay_time;
    1ed8:	c6 0e       	add	r12, r22
    1eda:	d7 1e       	adc	r13, r23
    1edc:	e8 1e       	adc	r14, r24
    1ede:	f9 1e       	adc	r15, r25
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring.c:153

  /* If return time overflows */
  if (return_time < delay_time)
    1ee0:	c6 16       	cp	r12, r22
    1ee2:	d7 06       	cpc	r13, r23
    1ee4:	e8 06       	cpc	r14, r24
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring.c:156
  {
    /* Wait until micros overflows */
    while (micros() > return_time)
    1ee6:	f9 06       	cpc	r15, r25
    1ee8:	10 f4       	brcc	.+4      	; 0x1eee <delay+0x3c>
    1eea:	ba df       	rcall	.-140    	; 0x1e60 <micros>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring.c:161
      ;
  }

  /* Wait until return time */
  while (micros() < return_time)
    1eec:	f9 cf       	rjmp	.-14     	; 0x1ee0 <delay+0x2e>
    1eee:	b8 df       	rcall	.-144    	; 0x1e60 <micros>
    1ef0:	6c 15       	cp	r22, r12
    1ef2:	7d 05       	cpc	r23, r13
    1ef4:	8e 05       	cpc	r24, r14
    1ef6:	9f 05       	cpc	r25, r15
    1ef8:	d0 f3       	brcs	.-12     	; 0x1eee <delay+0x3c>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring.c:163
    ;
}
    1efa:	ff 90       	pop	r15
    1efc:	ef 90       	pop	r14
    1efe:	df 90       	pop	r13
    1f00:	cf 90       	pop	r12
    1f02:	bf 90       	pop	r11
    1f04:	af 90       	pop	r10
    1f06:	9f 90       	pop	r9
    1f08:	8f 90       	pop	r8
    1f0a:	08 95       	ret

00001f0c <d_click()>:
d_click():
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:1231
} 

//-----------------------------------double click logic for suction process---------------------------//
void d_click()
{ 
  if(menus==1)                 //---------------titrate mode
    1f0c:	80 91 b5 29 	lds	r24, 0x29B5	; 0x8029b5 <menus>
    1f10:	90 91 b6 29 	lds	r25, 0x29B6	; 0x8029b6 <menus+0x1>
    1f14:	81 30       	cpi	r24, 0x01	; 1
    1f16:	91 05       	cpc	r25, r1
    1f18:	29 f4       	brne	.+10     	; 0x1f24 <d_click()+0x18>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:1233
  {
  double_flag=1;
    1f1a:	80 93 93 29 	sts	0x2993, r24	; 0x802993 <double_flag>
    1f1e:	90 93 94 29 	sts	0x2994, r25	; 0x802994 <double_flag+0x1>
    1f22:	08 95       	ret
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:1236
  }
  
  else if(menus==2)           //---------------dispense mode
    1f24:	82 30       	cpi	r24, 0x02	; 2
    1f26:	91 05       	cpc	r25, r1
    1f28:	39 f4       	brne	.+14     	; 0x1f38 <d_click()+0x2c>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:1238
  {
   double_flag1=1;
    1f2a:	81 e0       	ldi	r24, 0x01	; 1
    1f2c:	90 e0       	ldi	r25, 0x00	; 0
    1f2e:	80 93 98 29 	sts	0x2998, r24	; 0x802998 <double_flag1>
    1f32:	90 93 99 29 	sts	0x2999, r25	; 0x802999 <double_flag1+0x1>
    1f36:	08 95       	ret
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:1241
      
  }
   else if(menus==5)         //---------------priming mode
    1f38:	05 97       	sbiw	r24, 0x05	; 5
    1f3a:	31 f4       	brne	.+12     	; 0x1f48 <d_click()+0x3c>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:1243
  {
    double_flag2=1;
    1f3c:	81 e0       	ldi	r24, 0x01	; 1
    1f3e:	90 e0       	ldi	r25, 0x00	; 0
    1f40:	80 93 ab 29 	sts	0x29AB, r24	; 0x8029ab <double_flag2>
    1f44:	90 93 ac 29 	sts	0x29AC, r25	; 0x8029ac <double_flag2+0x1>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:1245
  }
}
    1f48:	08 95       	ret

00001f4a <SoftwareSerial::handle_interrupt()>:
handle_interrupt():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:221
//

/* static */
inline void SoftwareSerial::handle_interrupt()
{
  if (active_object)
    1f4a:	e0 91 7e 29 	lds	r30, 0x297E	; 0x80297e <SoftwareSerial::active_object>
    1f4e:	f0 91 7f 29 	lds	r31, 0x297F	; 0x80297f <SoftwareSerial::active_object+0x1>
    1f52:	30 97       	sbiw	r30, 0x00	; 0
    1f54:	09 f4       	brne	.+2      	; 0x1f58 <SoftwareSerial::handle_interrupt()+0xe>
    1f56:	4d c0       	rjmp	.+154    	; 0x1ff2 <SoftwareSerial::handle_interrupt()+0xa8>
    1f58:	a6 85       	ldd	r26, Z+14	; 0x0e
    1f5a:	b7 85       	ldd	r27, Z+15	; 0x0f
    1f5c:	85 85       	ldd	r24, Z+13	; 0x0d
_ZN14SoftwareSerial4recvEv():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:146

  uint8_t d = 0;

  // If RX line is high, then we don't see any start bit
  // so interrupt is probably not for us
  if (_inverse_logic ? rx_pin_read() : !rx_pin_read())
    1f5e:	96 8d       	ldd	r25, Z+30	; 0x1e
    1f60:	91 ff       	sbrs	r25, 1
    1f62:	04 c0       	rjmp	.+8      	; 0x1f6c <SoftwareSerial::handle_interrupt()+0x22>
rx_pin_read():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:211
#endif
}

uint8_t SoftwareSerial::rx_pin_read()
{
  return *_receivePortRegister & _receiveBitMask;
    1f64:	9c 91       	ld	r25, X
    1f66:	89 23       	and	r24, r25
_ZN14SoftwareSerial4recvEv():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:146

  uint8_t d = 0;

  // If RX line is high, then we don't see any start bit
  // so interrupt is probably not for us
  if (_inverse_logic ? rx_pin_read() : !rx_pin_read())
    1f68:	29 f4       	brne	.+10     	; 0x1f74 <SoftwareSerial::handle_interrupt()+0x2a>
    1f6a:	08 95       	ret
rx_pin_read():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:211
#endif
}

uint8_t SoftwareSerial::rx_pin_read()
{
  return *_receivePortRegister & _receiveBitMask;
    1f6c:	9c 91       	ld	r25, X
    1f6e:	89 23       	and	r24, r25
_ZN14SoftwareSerial4recvEv():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:146

  uint8_t d = 0;

  // If RX line is high, then we don't see any start bit
  // so interrupt is probably not for us
  if (_inverse_logic ? rx_pin_read() : !rx_pin_read())
    1f70:	09 f0       	breq	.+2      	; 0x1f74 <SoftwareSerial::handle_interrupt()+0x2a>
    1f72:	3f c0       	rjmp	.+126    	; 0x1ff2 <SoftwareSerial::handle_interrupt()+0xa8>
_ZN14SoftwareSerial11setRxIntMskEb():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:355
void SoftwareSerial::setRxIntMsk(bool enable)
{
    if (enable)
      *_pcint_maskreg |= _pcint_maskvalue;
    else
      *_pcint_maskreg &= ~_pcint_maskvalue;
    1f74:	a3 89       	ldd	r26, Z+19	; 0x13
    1f76:	b4 89       	ldd	r27, Z+20	; 0x14
    1f78:	9c 91       	ld	r25, X
    1f7a:	85 89       	ldd	r24, Z+21	; 0x15
    1f7c:	80 95       	com	r24
    1f7e:	89 23       	and	r24, r25
    1f80:	8c 93       	st	X, r24
_delay_loop_2():
c:\users\manish.acharya\appdata\local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7\avr\include\util/delay_basic.h:110
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
    1f82:	86 89       	ldd	r24, Z+22	; 0x16
    1f84:	97 89       	ldd	r25, Z+23	; 0x17
    1f86:	01 97       	sbiw	r24, 0x01	; 1
    1f88:	f1 f7       	brne	.-4      	; 0x1f86 <SoftwareSerial::handle_interrupt()+0x3c>
_ZN14SoftwareSerial4recvEv():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:160
    DebugPulse(_DEBUG_PIN2, 1);

    // Read each of the 8 bits
    for (uint8_t i=8; i > 0; --i)
    {
      tunedDelay(_rx_delay_intrabit);
    1f8a:	60 8d       	ldd	r22, Z+24	; 0x18
    1f8c:	71 8d       	ldd	r23, Z+25	; 0x19
rx_pin_read():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:211
#endif
}

uint8_t SoftwareSerial::rx_pin_read()
{
  return *_receivePortRegister & _receiveBitMask;
    1f8e:	a6 85       	ldd	r26, Z+14	; 0x0e
    1f90:	b7 85       	ldd	r27, Z+15	; 0x0f
    1f92:	55 85       	ldd	r21, Z+13	; 0x0d
    1f94:	38 e0       	ldi	r19, 0x08	; 8
handle_interrupt():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:142
    "push r26 \n\t"
    "push r27 \n\t"
    ::);
#endif

  uint8_t d = 0;
    1f96:	20 e0       	ldi	r18, 0x00	; 0
_delay_loop_2():
c:\users\manish.acharya\appdata\local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7\avr\include\util/delay_basic.h:110
    1f98:	cb 01       	movw	r24, r22
    1f9a:	01 97       	sbiw	r24, 0x01	; 1
    1f9c:	f1 f7       	brne	.-4      	; 0x1f9a <SoftwareSerial::handle_interrupt()+0x50>
_ZN14SoftwareSerial4recvEv():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:161

    // Read each of the 8 bits
    for (uint8_t i=8; i > 0; --i)
    {
      tunedDelay(_rx_delay_intrabit);
      d >>= 1;
    1f9e:	82 2f       	mov	r24, r18
    1fa0:	90 e0       	ldi	r25, 0x00	; 0
    1fa2:	95 95       	asr	r25
    1fa4:	87 95       	ror	r24
    1fa6:	28 2f       	mov	r18, r24
rx_pin_read():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:211
#endif
}

uint8_t SoftwareSerial::rx_pin_read()
{
  return *_receivePortRegister & _receiveBitMask;
    1fa8:	4c 91       	ld	r20, X
    1faa:	45 23       	and	r20, r21
_ZN14SoftwareSerial4recvEv():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:163
    for (uint8_t i=8; i > 0; --i)
    {
      tunedDelay(_rx_delay_intrabit);
      d >>= 1;
      DebugPulse(_DEBUG_PIN2, 1);
      if (rx_pin_read())
    1fac:	09 f0       	breq	.+2      	; 0x1fb0 <SoftwareSerial::handle_interrupt()+0x66>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:164
        d |= 0x80;
    1fae:	20 68       	ori	r18, 0x80	; 128
    1fb0:	31 50       	subi	r19, 0x01	; 1
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:158
    // Wait approximately 1/2 of a bit width to "center" the sample
    tunedDelay(_rx_delay_centering);
    DebugPulse(_DEBUG_PIN2, 1);

    // Read each of the 8 bits
    for (uint8_t i=8; i > 0; --i)
    1fb2:	91 f7       	brne	.-28     	; 0x1f98 <SoftwareSerial::handle_interrupt()+0x4e>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:167
      DebugPulse(_DEBUG_PIN2, 1);
      if (rx_pin_read())
        d |= 0x80;
    }

    if (_inverse_logic)
    1fb4:	86 8d       	ldd	r24, Z+30	; 0x1e
    1fb6:	81 fd       	sbrc	r24, 1
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:168
      d = ~d;
    1fb8:	20 95       	com	r18
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:171

    // if buffer full, set the overflow flag and return
    uint8_t next = (_receive_buffer_tail + 1) % _SS_MAX_RX_BUFF;
    1fba:	80 91 7d 29 	lds	r24, 0x297D	; 0x80297d <SoftwareSerial::_receive_buffer_tail>
    1fbe:	90 e0       	ldi	r25, 0x00	; 0
    1fc0:	01 96       	adiw	r24, 0x01	; 1
    1fc2:	8f 73       	andi	r24, 0x3F	; 63
    1fc4:	99 27       	eor	r25, r25
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:172
    if (next != _receive_buffer_head)
    1fc6:	30 91 7c 29 	lds	r19, 0x297C	; 0x80297c <SoftwareSerial::_receive_buffer_head>
    1fca:	38 17       	cp	r19, r24
    1fcc:	99 f0       	breq	.+38     	; 0x1ff4 <SoftwareSerial::handle_interrupt()+0xaa>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:175
    {
      // save new data in buffer: tail points to where byte goes
      _receive_buffer[_receive_buffer_tail] = d; // save new byte
    1fce:	a0 91 7d 29 	lds	r26, 0x297D	; 0x80297d <SoftwareSerial::_receive_buffer_tail>
    1fd2:	b0 e0       	ldi	r27, 0x00	; 0
    1fd4:	a2 52       	subi	r26, 0x22	; 34
    1fd6:	b7 4d       	sbci	r27, 0xD7	; 215
    1fd8:	2c 93       	st	X, r18
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:176
      _receive_buffer_tail = next;
    1fda:	80 93 7d 29 	sts	0x297D, r24	; 0x80297d <SoftwareSerial::_receive_buffer_tail>
_delay_loop_2():
c:\users\manish.acharya\appdata\local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7\avr\include\util/delay_basic.h:110
    1fde:	82 8d       	ldd	r24, Z+26	; 0x1a
    1fe0:	93 8d       	ldd	r25, Z+27	; 0x1b
    1fe2:	01 97       	sbiw	r24, 0x01	; 1
    1fe4:	f1 f7       	brne	.-4      	; 0x1fe2 <SoftwareSerial::handle_interrupt()+0x98>
_ZN14SoftwareSerial11setRxIntMskEb():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:353
}

void SoftwareSerial::setRxIntMsk(bool enable)
{
    if (enable)
      *_pcint_maskreg |= _pcint_maskvalue;
    1fe6:	a3 89       	ldd	r26, Z+19	; 0x13
    1fe8:	b4 89       	ldd	r27, Z+20	; 0x14
    1fea:	8c 91       	ld	r24, X
    1fec:	95 89       	ldd	r25, Z+21	; 0x15
    1fee:	89 2b       	or	r24, r25
    1ff0:	8c 93       	st	X, r24
handle_interrupt():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:225
{
  if (active_object)
  {
    active_object->recv();
  }
}
    1ff2:	08 95       	ret
_ZN14SoftwareSerial4recvEv():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:181
      _receive_buffer_tail = next;
    }
    else
    {
      DebugPulse(_DEBUG_PIN1, 1);
      _buffer_overflow = true;
    1ff4:	86 8d       	ldd	r24, Z+30	; 0x1e
    1ff6:	81 60       	ori	r24, 0x01	; 1
    1ff8:	86 8f       	std	Z+30, r24	; 0x1e
    1ffa:	f1 cf       	rjmp	.-30     	; 0x1fde <SoftwareSerial::handle_interrupt()+0x94>

00001ffc <Print::flush()>:
flush():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/Print.h:88
    size_t println(void);

    int16_t printf(const char *format, ...) __attribute__ ((format (printf, 2, 3)));
    int16_t printf(const __FlashStringHelper *format, ...);

    virtual void flush() { /* Empty implementation for backward compatibility */ }
    1ffc:	08 95       	ret

00001ffe <Print::print(String const&)>:
write():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/Print.h:53
      if (str == NULL) return 0;
      return write((const uint8_t *)str, strlen(str));
    }
    virtual size_t write(const uint8_t *buffer, size_t size);
    size_t write(const char *buffer, size_t size) {
      return write((const uint8_t *)buffer, size);
    1ffe:	db 01       	movw	r26, r22
    2000:	14 96       	adiw	r26, 0x04	; 4
    2002:	4d 91       	ld	r20, X+
    2004:	5c 91       	ld	r21, X
    2006:	15 97       	sbiw	r26, 0x05	; 5
    2008:	6d 91       	ld	r22, X+
    200a:	7c 91       	ld	r23, X
    200c:	dc 01       	movw	r26, r24
    200e:	ed 91       	ld	r30, X+
    2010:	fc 91       	ld	r31, X
    2012:	02 80       	ldd	r0, Z+2	; 0x02
    2014:	f3 81       	ldd	r31, Z+3	; 0x03
    2016:	e0 2d       	mov	r30, r0
    2018:	09 94       	ijmp

0000201a <Print::write(unsigned char const*, unsigned int)>:
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/Print.cpp:30

// Public Methods //////////////////////////////////////////////////////////////

/* default implementation: may be overridden */
size_t Print::write(const uint8_t *buffer, size_t size)
{
    201a:	af 92       	push	r10
    201c:	bf 92       	push	r11
    201e:	cf 92       	push	r12
    2020:	df 92       	push	r13
    2022:	ef 92       	push	r14
    2024:	ff 92       	push	r15
    2026:	0f 93       	push	r16
    2028:	1f 93       	push	r17
    202a:	cf 93       	push	r28
    202c:	df 93       	push	r29
    202e:	6c 01       	movw	r12, r24
    2030:	7b 01       	movw	r14, r22
    2032:	8b 01       	movw	r16, r22
    2034:	04 0f       	add	r16, r20
    2036:	15 1f       	adc	r17, r21
    2038:	eb 01       	movw	r28, r22
    203a:	5e 01       	movw	r10, r28
    203c:	ae 18       	sub	r10, r14
    203e:	bf 08       	sbc	r11, r15
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/Print.cpp:32
  size_t n = 0;
  while (size--)
    2040:	c0 17       	cp	r28, r16
    2042:	d1 07       	cpc	r29, r17
    2044:	59 f0       	breq	.+22     	; 0x205c <Print::write(unsigned char const*, unsigned int)+0x42>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/Print.cpp:34
  {
    if (write(*buffer++))
    2046:	69 91       	ld	r22, Y+
    2048:	d6 01       	movw	r26, r12
    204a:	ed 91       	ld	r30, X+
    204c:	fc 91       	ld	r31, X
    204e:	01 90       	ld	r0, Z+
    2050:	f0 81       	ld	r31, Z
    2052:	e0 2d       	mov	r30, r0
    2054:	c6 01       	movw	r24, r12
    2056:	09 95       	icall
    2058:	89 2b       	or	r24, r25
    205a:	79 f7       	brne	.-34     	; 0x203a <Print::write(unsigned char const*, unsigned int)+0x20>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/Print.cpp:40
      n++;
    else
      break;
  }
  return n;
}
    205c:	c5 01       	movw	r24, r10
    205e:	df 91       	pop	r29
    2060:	cf 91       	pop	r28
    2062:	1f 91       	pop	r17
    2064:	0f 91       	pop	r16
    2066:	ff 90       	pop	r15
    2068:	ef 90       	pop	r14
    206a:	df 90       	pop	r13
    206c:	cf 90       	pop	r12
    206e:	bf 90       	pop	r11
    2070:	af 90       	pop	r10
    2072:	08 95       	ret

00002074 <attachInterrupt.part.0>:
attachInterrupt.part.0():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/WInterrupts.c:38
static volatile voidFuncPtr intFunc[EXTERNAL_NUM_INTERRUPTS];

void attachInterrupt(uint8_t pin, void (*userFunc)(void), uint8_t mode)
{
  /* Get bit position and check pin validity */
  uint8_t bit_pos = digitalPinToBitPosition(pin);
    2074:	28 2f       	mov	r18, r24
    2076:	30 e0       	ldi	r19, 0x00	; 0
    2078:	f9 01       	movw	r30, r18
    207a:	e8 59       	subi	r30, 0x98	; 152
    207c:	f7 44       	sbci	r31, 0x47	; 71
    207e:	90 81       	ld	r25, Z
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/WInterrupts.c:39
  if (bit_pos == NOT_A_PIN) return;
    2080:	9f 3f       	cpi	r25, 0xFF	; 255
    2082:	21 f1       	breq	.+72     	; 0x20cc <attachInterrupt.part.0+0x58>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/WInterrupts.c:42

  /* Get interrupt number from pin */
  uint8_t interruptNum = (digitalPinToPort(pin) * 8) + bit_pos;
    2084:	21 54       	subi	r18, 0x41	; 65
    2086:	37 44       	sbci	r19, 0x47	; 71
    2088:	f9 01       	movw	r30, r18
    208a:	80 81       	ld	r24, Z
    208c:	e8 2f       	mov	r30, r24
    208e:	ee 0f       	add	r30, r30
    2090:	ee 0f       	add	r30, r30
    2092:	ee 0f       	add	r30, r30
    2094:	e9 0f       	add	r30, r25
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/WInterrupts.c:45

  /* Check interrupt number and apply function pointer to correct array index */
  if (interruptNum < EXTERNAL_NUM_INTERRUPTS)
    2096:	ef 32       	cpi	r30, 0x2F	; 47
    2098:	c8 f4       	brcc	.+50     	; 0x20cc <attachInterrupt.part.0+0x58>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/WInterrupts.c:47
  {
    intFunc[interruptNum] = userFunc;
    209a:	f0 e0       	ldi	r31, 0x00	; 0
    209c:	ee 0f       	add	r30, r30
    209e:	ff 1f       	adc	r31, r31
    20a0:	e2 5e       	subi	r30, 0xE2	; 226
    20a2:	f6 4d       	sbci	r31, 0xD6	; 214
    20a4:	60 83       	st	Z, r22
    20a6:	71 83       	std	Z+1, r23	; 0x01
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/WInterrupts.c:63
        break;
      case FALLING:
        mode = PORT_ISC_FALLING_gc;
        break;
      case RISING:
        mode = PORT_ISC_RISING_gc;
    20a8:	22 e0       	ldi	r18, 0x02	; 2
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/WInterrupts.c:54
    // Configure the interrupt mode (trigger on low input, any change, rising
    // edge, or falling edge).  The mode constants were chosen to correspond
    // to the configuration bits in the hardware register, so we simply apply
    // the setting in the pin control register

    switch (mode)
    20aa:	44 30       	cpi	r20, 0x04	; 4
    20ac:	09 f4       	brne	.+2      	; 0x20b0 <attachInterrupt.part.0+0x3c>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/WInterrupts.c:57
    {
      case CHANGE:
        mode = PORT_ISC_BOTHEDGES_gc;
    20ae:	21 e0       	ldi	r18, 0x01	; 1
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/WInterrupts.c:76
    }

    // Enable the interrupt.

    /* Get pointer to correct pin control register */
    PORT_t *port = digitalPinToPortStruct(pin);
    20b0:	30 e2       	ldi	r19, 0x20	; 32
    20b2:	83 9f       	mul	r24, r19
    20b4:	f0 01       	movw	r30, r0
    20b6:	11 24       	eor	r1, r1
    20b8:	fc 5f       	subi	r31, 0xFC	; 252
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/WInterrupts.c:77
    volatile uint8_t *pin_ctrl_reg = getPINnCTRLregister(port, bit_pos);
    20ba:	70 96       	adiw	r30, 0x10	; 16
    20bc:	e9 0f       	add	r30, r25
    20be:	f1 1d       	adc	r31, r1
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/WInterrupts.c:80

    /* Clear any previous setting */
    *pin_ctrl_reg &= ~(PORT_ISC_gm);
    20c0:	90 81       	ld	r25, Z
    20c2:	98 7f       	andi	r25, 0xF8	; 248
    20c4:	90 83       	st	Z, r25
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/WInterrupts.c:83

    /* Apply ISC setting */
    *pin_ctrl_reg |= mode;
    20c6:	80 81       	ld	r24, Z
    20c8:	82 2b       	or	r24, r18
    20ca:	80 83       	st	Z, r24
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/WInterrupts.c:85
  }
}
    20cc:	08 95       	ret

000020ce <port_interrupt_handler>:
port_interrupt_handler():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/WInterrupts.c:112
    intFunc[interruptNum] = 0;
  }
}

static void port_interrupt_handler(uint8_t port)
{
    20ce:	ef 92       	push	r14
    20d0:	ff 92       	push	r15
    20d2:	0f 93       	push	r16
    20d4:	1f 93       	push	r17
    20d6:	cf 93       	push	r28
    20d8:	df 93       	push	r29
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/WInterrupts.c:113
  PORT_t *portStruct = portToPortStruct(port);
    20da:	90 e2       	ldi	r25, 0x20	; 32
    20dc:	89 9f       	mul	r24, r25
    20de:	e0 01       	movw	r28, r0
    20e0:	11 24       	eor	r1, r1
    20e2:	dc 5f       	subi	r29, 0xFC	; 252
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/WInterrupts.c:115
  /* Copy flags */
  uint8_t int_flags = portStruct->INTFLAGS;
    20e4:	e9 84       	ldd	r14, Y+9	; 0x09
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/WInterrupts.c:126
  {
    /* Check if flag raised */
    if (int_flags & bit_mask)
    {
      /* Get interrupt */
      uint8_t interrupt_num = port * 8 + bit_pos;
    20e6:	08 2f       	mov	r16, r24
    20e8:	00 0f       	add	r16, r16
    20ea:	00 0f       	add	r16, r16
    20ec:	00 0f       	add	r16, r16
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/WInterrupts.c:117
{
  PORT_t *portStruct = portToPortStruct(port);
  /* Copy flags */
  uint8_t int_flags = portStruct->INTFLAGS;

  uint8_t bit_pos = PIN0_bp, bit_mask = PIN0_bm;
    20ee:	ff 24       	eor	r15, r15
    20f0:	f3 94       	inc	r15
    20f2:	10 e0       	ldi	r17, 0x00	; 0
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/WInterrupts.c:123

  /* Iterate through flags */
  while (bit_pos <= PIN7_bp)
  {
    /* Check if flag raised */
    if (int_flags & bit_mask)
    20f4:	8e 2d       	mov	r24, r14
    20f6:	8f 21       	and	r24, r15
    20f8:	79 f0       	breq	.+30     	; 0x2118 <port_interrupt_handler+0x4a>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/WInterrupts.c:129
    {
      /* Get interrupt */
      uint8_t interrupt_num = port * 8 + bit_pos;

      /* Check if function defined */
      if (intFunc[interrupt_num] != 0)
    20fa:	e0 2f       	mov	r30, r16
    20fc:	e1 0f       	add	r30, r17
    20fe:	f0 e0       	ldi	r31, 0x00	; 0
    2100:	ee 0f       	add	r30, r30
    2102:	ff 1f       	adc	r31, r31
    2104:	e2 5e       	subi	r30, 0xE2	; 226
    2106:	f6 4d       	sbci	r31, 0xD6	; 214
    2108:	80 81       	ld	r24, Z
    210a:	91 81       	ldd	r25, Z+1	; 0x01
    210c:	89 2b       	or	r24, r25
    210e:	21 f0       	breq	.+8      	; 0x2118 <port_interrupt_handler+0x4a>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/WInterrupts.c:132
      {
        /* Call function */
        intFunc[interrupt_num]();
    2110:	01 90       	ld	r0, Z+
    2112:	f0 81       	ld	r31, Z
    2114:	e0 2d       	mov	r30, r0
    2116:	09 95       	icall
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/WInterrupts.c:135
      }
    }
    bit_pos++;
    2118:	1f 5f       	subi	r17, 0xFF	; 255
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/WInterrupts.c:136
    bit_mask = (bit_mask << 1);
    211a:	ff 0c       	add	r15, r15
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/WInterrupts.c:120
  uint8_t int_flags = portStruct->INTFLAGS;

  uint8_t bit_pos = PIN0_bp, bit_mask = PIN0_bm;

  /* Iterate through flags */
  while (bit_pos <= PIN7_bp)
    211c:	18 30       	cpi	r17, 0x08	; 8
    211e:	51 f7       	brne	.-44     	; 0x20f4 <port_interrupt_handler+0x26>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/WInterrupts.c:140
    bit_pos++;
    bit_mask = (bit_mask << 1);
  }

  /* Clear flags that have been handled */
  portStruct->INTFLAGS = int_flags;
    2120:	e9 86       	std	Y+9, r14	; 0x09
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/WInterrupts.c:141
}
    2122:	df 91       	pop	r29
    2124:	cf 91       	pop	r28
    2126:	1f 91       	pop	r17
    2128:	0f 91       	pop	r16
    212a:	ff 90       	pop	r15
    212c:	ef 90       	pop	r14
    212e:	08 95       	ret

00002130 <UartClass::availableForWrite()>:
availableForWrite():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:295
  tx_buffer_index_t head;
  tx_buffer_index_t tail;

  TX_BUFFER_ATOMIC
  {
    head = _tx_buffer_head;
    2130:	fc 01       	movw	r30, r24
    2132:	50 8d       	ldd	r21, Z+24	; 0x18
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:296
    tail = _tx_buffer_tail;
    2134:	41 8d       	ldd	r20, Z+25	; 0x19
    2136:	25 2f       	mov	r18, r21
    2138:	30 e0       	ldi	r19, 0x00	; 0
    213a:	84 2f       	mov	r24, r20
    213c:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:298
  }
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
    213e:	82 1b       	sub	r24, r18
    2140:	93 0b       	sbc	r25, r19
    2142:	54 17       	cp	r21, r20
    2144:	10 f0       	brcs	.+4      	; 0x214a <UartClass::availableForWrite()+0x1a>
    2146:	cf 96       	adiw	r24, 0x3f	; 63
    2148:	08 95       	ret
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:299
  return tail - head - 1;
    214a:	01 97       	sbiw	r24, 0x01	; 1
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:300
}
    214c:	08 95       	ret

0000214e <UartClass::read()>:
read():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:274
    return _rx_buffer[_rx_buffer_tail];
  }
}

int UartClass::read(void)
{
    214e:	fc 01       	movw	r30, r24
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:276
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail)
    2150:	96 89       	ldd	r25, Z+22	; 0x16
    2152:	87 89       	ldd	r24, Z+23	; 0x17
    2154:	98 17       	cp	r25, r24
    2156:	61 f0       	breq	.+24     	; 0x2170 <UartClass::read()+0x22>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:282
  {
    return -1;
  }
  else
  {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    2158:	a7 89       	ldd	r26, Z+23	; 0x17
    215a:	ae 0f       	add	r26, r30
    215c:	bf 2f       	mov	r27, r31
    215e:	b1 1d       	adc	r27, r1
    2160:	5d 96       	adiw	r26, 0x1d	; 29
    2162:	8c 91       	ld	r24, X
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:283
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    2164:	97 89       	ldd	r25, Z+23	; 0x17
    2166:	9f 5f       	subi	r25, 0xFF	; 255
    2168:	9f 73       	andi	r25, 0x3F	; 63
    216a:	97 8b       	std	Z+23, r25	; 0x17
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:284
    return c;
    216c:	90 e0       	ldi	r25, 0x00	; 0
    216e:	08 95       	ret
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:278
int UartClass::read(void)
{
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail)
  {
    return -1;
    2170:	8f ef       	ldi	r24, 0xFF	; 255
    2172:	9f ef       	ldi	r25, 0xFF	; 255
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:286
  {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    return c;
  }
}
    2174:	08 95       	ret

00002176 <UartClass::peek()>:
peek():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:262
{
  return ((unsigned int)(SERIAL_RX_BUFFER_SIZE + _rx_buffer_head - _rx_buffer_tail)) % SERIAL_RX_BUFFER_SIZE;
}

int UartClass::peek(void)
{
    2176:	fc 01       	movw	r30, r24
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:263
  if (_rx_buffer_head == _rx_buffer_tail)
    2178:	96 89       	ldd	r25, Z+22	; 0x16
    217a:	87 89       	ldd	r24, Z+23	; 0x17
    217c:	98 17       	cp	r25, r24
    217e:	31 f0       	breq	.+12     	; 0x218c <UartClass::peek()+0x16>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:269
  {
    return -1;
  }
  else
  {
    return _rx_buffer[_rx_buffer_tail];
    2180:	87 89       	ldd	r24, Z+23	; 0x17
    2182:	e8 0f       	add	r30, r24
    2184:	f1 1d       	adc	r31, r1
    2186:	85 8d       	ldd	r24, Z+29	; 0x1d
    2188:	90 e0       	ldi	r25, 0x00	; 0
    218a:	08 95       	ret
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:265

int UartClass::peek(void)
{
  if (_rx_buffer_head == _rx_buffer_tail)
  {
    return -1;
    218c:	8f ef       	ldi	r24, 0xFF	; 255
    218e:	9f ef       	ldi	r25, 0xFF	; 255
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:271
  }
  else
  {
    return _rx_buffer[_rx_buffer_tail];
  }
}
    2190:	08 95       	ret

00002192 <UartClass::available()>:
available():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:257
  // Note: Does not change output pins
  _written = false;
}

int UartClass::available(void)
{
    2192:	fc 01       	movw	r30, r24
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:258
  return ((unsigned int)(SERIAL_RX_BUFFER_SIZE + _rx_buffer_head - _rx_buffer_tail)) % SERIAL_RX_BUFFER_SIZE;
    2194:	96 89       	ldd	r25, Z+22	; 0x16
    2196:	27 89       	ldd	r18, Z+23	; 0x17
    2198:	89 2f       	mov	r24, r25
    219a:	90 e0       	ldi	r25, 0x00	; 0
    219c:	80 5c       	subi	r24, 0xC0	; 192
    219e:	9f 4f       	sbci	r25, 0xFF	; 255
    21a0:	82 1b       	sub	r24, r18
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:259
}
    21a2:	91 09       	sbc	r25, r1
    21a4:	8f 73       	andi	r24, 0x3F	; 63
    21a6:	99 27       	eor	r25, r25
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART0.cpp:65

// Function that can be weakly referenced by serialEventRun to prevent
// pulling in this file if it's not otherwise used.
bool Serial0_available()
{
  return Serial.available();
    21a8:	08 95       	ret

000021aa <Serial0_available()>:
Serial0_available():
    21aa:	8b eb       	ldi	r24, 0xBB	; 187
    21ac:	99 e2       	ldi	r25, 0x29	; 41
    21ae:	f1 df       	rcall	.-30     	; 0x2192 <UartClass::available()>
    21b0:	21 e0       	ldi	r18, 0x01	; 1
    21b2:	89 2b       	or	r24, r25
    21b4:	09 f4       	brne	.+2      	; 0x21b8 <Serial0_available()+0xe>
    21b6:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART0.cpp:66
}
    21b8:	82 2f       	mov	r24, r18
    21ba:	08 95       	ret

000021bc <UartClass::end()>:
end():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:240
  // Restore SREG content
  SREG = oldSREG;
}

void UartClass::end()
{
    21bc:	cf 93       	push	r28
    21be:	df 93       	push	r29
    21c0:	ec 01       	movw	r28, r24
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:242
  // wait for transmission of outgoing data
  flush();
    21c2:	e8 81       	ld	r30, Y
    21c4:	f9 81       	ldd	r31, Y+1	; 0x01
    21c6:	06 80       	ldd	r0, Z+6	; 0x06
    21c8:	f7 81       	ldd	r31, Z+7	; 0x07
    21ca:	e0 2d       	mov	r30, r0
    21cc:	09 95       	icall
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:246

  // Disable receiver and transmitter as well as the RX complete and
  // data register empty interrupts.
  (*_hwserial_module).CTRLB &= ~(USART_RXEN_bm | USART_TXEN_bm);
    21ce:	ec 85       	ldd	r30, Y+12	; 0x0c
    21d0:	fd 85       	ldd	r31, Y+13	; 0x0d
    21d2:	86 81       	ldd	r24, Z+6	; 0x06
    21d4:	8f 73       	andi	r24, 0x3F	; 63
    21d6:	86 83       	std	Z+6, r24	; 0x06
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:247
  (*_hwserial_module).CTRLA &= ~(USART_RXCIE_bm | USART_DREIE_bm);
    21d8:	ec 85       	ldd	r30, Y+12	; 0x0c
    21da:	fd 85       	ldd	r31, Y+13	; 0x0d
    21dc:	85 81       	ldd	r24, Z+5	; 0x05
    21de:	8f 75       	andi	r24, 0x5F	; 95
    21e0:	85 83       	std	Z+5, r24	; 0x05
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:250

  // clear any received data
  _rx_buffer_head = _rx_buffer_tail;
    21e2:	8f 89       	ldd	r24, Y+23	; 0x17
    21e4:	8e 8b       	std	Y+22, r24	; 0x16
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:253

  // Note: Does not change output pins
  _written = false;
    21e6:	1d 8a       	std	Y+21, r1	; 0x15
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:254
}
    21e8:	df 91       	pop	r29
    21ea:	cf 91       	pop	r28
    21ec:	08 95       	ret

000021ee <UartClass::begin(unsigned long, unsigned int)>:
begin():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:180
    return false;
  }
}

void UartClass::begin(unsigned long baud, uint16_t config)
{
    21ee:	af 92       	push	r10
    21f0:	bf 92       	push	r11
    21f2:	cf 92       	push	r12
    21f4:	df 92       	push	r13
    21f6:	ef 92       	push	r14
    21f8:	ff 92       	push	r15
    21fa:	0f 93       	push	r16
    21fc:	1f 93       	push	r17
    21fe:	cf 93       	push	r28
    2200:	df 93       	push	r29
    2202:	ec 01       	movw	r28, r24
    2204:	6a 01       	movw	r12, r20
    2206:	7b 01       	movw	r14, r22
    2208:	a2 2e       	mov	r10, r18
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:183
  // Make sure no transmissions are ongoing and USART is disabled in case begin() is called by accident
  // without first calling end()
  if (_written)
    220a:	8d 89       	ldd	r24, Y+21	; 0x15
    220c:	88 23       	and	r24, r24
    220e:	39 f0       	breq	.+14     	; 0x221e <UartClass::begin(unsigned long, unsigned int)+0x30>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:185
  {
    this->end();
    2210:	e8 81       	ld	r30, Y
    2212:	f9 81       	ldd	r31, Y+1	; 0x01
    2214:	06 88       	ldd	r0, Z+22	; 0x16
    2216:	f7 89       	ldd	r31, Z+23	; 0x17
    2218:	e0 2d       	mov	r30, r0
    221a:	ce 01       	movw	r24, r28
    221c:	09 95       	icall
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:188
  }

  struct UartPinSet *set = &_hw_set[_pin_set];
    221e:	0c 89       	ldd	r16, Y+20	; 0x14
    2220:	10 e0       	ldi	r17, 0x00	; 0
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:193

  int32_t baud_setting = 0;

  //Make sure global interrupts are disabled during initialization
  uint8_t oldSREG = SREG;
    2222:	bf b6       	in	r11, 0x3f	; 63
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:194
  cli();
    2224:	f8 94       	cli
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:196

  baud_setting = (((8 * F_CPU) / baud) + 1) / 2;
    2226:	60 e0       	ldi	r22, 0x00	; 0
    2228:	70 e2       	ldi	r23, 0x20	; 32
    222a:	81 ea       	ldi	r24, 0xA1	; 161
    222c:	97 e0       	ldi	r25, 0x07	; 7
    222e:	a7 01       	movw	r20, r14
    2230:	96 01       	movw	r18, r12
    2232:	0e 94 79 39 	call	0x72f2	; 0x72f2 <__udivmodsi4>
    2236:	69 01       	movw	r12, r18
    2238:	7a 01       	movw	r14, r20
    223a:	8f ef       	ldi	r24, 0xFF	; 255
    223c:	c8 1a       	sub	r12, r24
    223e:	d8 0a       	sbc	r13, r24
    2240:	e8 0a       	sbc	r14, r24
    2242:	f8 0a       	sbc	r15, r24
    2244:	f6 94       	lsr	r15
    2246:	e7 94       	ror	r14
    2248:	d7 94       	ror	r13
    224a:	c7 94       	ror	r12
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:198
  // Disable CLK2X
  (*_hwserial_module).CTRLB &= (~USART_RXMODE_CLK2X_gc);
    224c:	ec 85       	ldd	r30, Y+12	; 0x0c
    224e:	fd 85       	ldd	r31, Y+13	; 0x0d
    2250:	86 81       	ldd	r24, Z+6	; 0x06
    2252:	8d 7f       	andi	r24, 0xFD	; 253
    2254:	86 83       	std	Z+6, r24	; 0x06
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:199
  (*_hwserial_module).CTRLB |= USART_RXMODE_NORMAL_gc;
    2256:	ec 85       	ldd	r30, Y+12	; 0x0c
    2258:	fd 85       	ldd	r31, Y+13	; 0x0d
    225a:	86 81       	ldd	r24, Z+6	; 0x06
    225c:	86 83       	std	Z+6, r24	; 0x06
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:201

  _written = false;
    225e:	1d 8a       	std	Y+21, r1	; 0x15
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:210
// Use error compensation if internal oscillator is used
#if !defined(USE_EXTERNAL_OSCILLATOR)
#if F_CPU == 20000000L
  sigrow_val = SIGROW.OSC20ERR5V;
#else
  sigrow_val = SIGROW.OSC16ERR5V;
    2260:	a0 91 23 11 	lds	r26, 0x1123	; 0x801123 <__TEXT_REGION_LENGTH__+0x7f5123>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:214
#endif
#endif

  baud_setting += (baud_setting * sigrow_val) / 1024;
    2264:	0a 2e       	mov	r0, r26
    2266:	00 0c       	add	r0, r0
    2268:	bb 0b       	sbc	r27, r27
    226a:	a7 01       	movw	r20, r14
    226c:	96 01       	movw	r18, r12
    226e:	0e 94 bd 39 	call	0x737a	; 0x737a <__mulshisi3>
    2272:	20 e0       	ldi	r18, 0x00	; 0
    2274:	34 e0       	ldi	r19, 0x04	; 4
    2276:	40 e0       	ldi	r20, 0x00	; 0
    2278:	50 e0       	ldi	r21, 0x00	; 0
    227a:	0e 94 9b 39 	call	0x7336	; 0x7336 <__divmodsi4>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:217

  // assign the baud_setting, a.k.a. BAUD (USART Baud Rate Register)
  (*_hwserial_module).BAUD = (uint16_t)baud_setting;
    227e:	ec 85       	ldd	r30, Y+12	; 0x0c
    2280:	fd 85       	ldd	r31, Y+13	; 0x0d
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:214
#else
  sigrow_val = SIGROW.OSC16ERR5V;
#endif
#endif

  baud_setting += (baud_setting * sigrow_val) / 1024;
    2282:	c2 0e       	add	r12, r18
    2284:	d3 1e       	adc	r13, r19
    2286:	e4 1e       	adc	r14, r20
    2288:	f5 1e       	adc	r15, r21
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:217

  // assign the baud_setting, a.k.a. BAUD (USART Baud Rate Register)
  (*_hwserial_module).BAUD = (uint16_t)baud_setting;
    228a:	c0 86       	std	Z+8, r12	; 0x08
    228c:	d1 86       	std	Z+9, r13	; 0x09
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:220

  // Set USART mode of operation
  (*_hwserial_module).CTRLC = config;
    228e:	ec 85       	ldd	r30, Y+12	; 0x0c
    2290:	fd 85       	ldd	r31, Y+13	; 0x0d
    2292:	a7 82       	std	Z+7, r10	; 0x07
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:223

  // Enable transmitter and receiver
  (*_hwserial_module).CTRLB |= (USART_RXEN_bm | USART_TXEN_bm);
    2294:	ec 85       	ldd	r30, Y+12	; 0x0c
    2296:	fd 85       	ldd	r31, Y+13	; 0x0d
    2298:	86 81       	ldd	r24, Z+6	; 0x06
    229a:	80 6c       	ori	r24, 0xC0	; 192
    229c:	86 83       	std	Z+6, r24	; 0x06
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:225

  (*_hwserial_module).CTRLA |= USART_RXCIE_bm;
    229e:	ec 85       	ldd	r30, Y+12	; 0x0c
    22a0:	fd 85       	ldd	r31, Y+13	; 0x0d
    22a2:	85 81       	ldd	r24, Z+5	; 0x05
    22a4:	80 68       	ori	r24, 0x80	; 128
    22a6:	85 83       	std	Z+5, r24	; 0x05
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:228

  // Let PORTMUX point to alternative UART pins as requested
  PORTMUX.USARTROUTEA = set->mux | (PORTMUX.USARTROUTEA & ~_hw_set[1].mux);
    22a8:	90 91 e2 05 	lds	r25, 0x05E2	; 0x8005e2 <__TEXT_REGION_LENGTH__+0x7f45e2>
    22ac:	8b 89       	ldd	r24, Y+19	; 0x13
    22ae:	80 95       	com	r24
    22b0:	89 23       	and	r24, r25
    22b2:	78 01       	movw	r14, r16
    22b4:	ee 0c       	add	r14, r14
    22b6:	ff 1c       	adc	r15, r15
    22b8:	67 01       	movw	r12, r14
    22ba:	c0 0e       	add	r12, r16
    22bc:	d1 1e       	adc	r13, r17
    22be:	cc 0e       	add	r12, r28
    22c0:	dd 1e       	adc	r13, r29
    22c2:	f6 01       	movw	r30, r12
    22c4:	90 89       	ldd	r25, Z+16	; 0x10
    22c6:	89 2b       	or	r24, r25
    22c8:	80 93 e2 05 	sts	0x05E2, r24	; 0x8005e2 <__TEXT_REGION_LENGTH__+0x7f45e2>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:231

  // Set pin state for swapped UART pins
  pinMode(set->rx_pin, INPUT_PULLUP);
    22cc:	62 e0       	ldi	r22, 0x02	; 2
    22ce:	86 85       	ldd	r24, Z+14	; 0x0e
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:232
  digitalWrite(set->tx_pin, HIGH);
    22d0:	35 dd       	rcall	.-1430   	; 0x1d3c <pinMode>
    22d2:	f6 01       	movw	r30, r12
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:137
}

void digitalWrite(uint8_t pin, uint8_t val)
{
  /* Get bit mask for pin */
  uint8_t bit_mask = digitalPinToBitMask(pin);
    22d4:	87 85       	ldd	r24, Z+15	; 0x0f
digitalWrite():
    22d6:	8b 31       	cpi	r24, 0x1B	; 27
    22d8:	10 f4       	brcc	.+4      	; 0x22de <UartClass::begin(unsigned long, unsigned int)+0xf0>
    22da:	61 e0       	ldi	r22, 0x01	; 1
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:233
  pinMode(set->tx_pin, OUTPUT);
    22dc:	5e dd       	rcall	.-1348   	; 0x1d9a <digitalWrite.part.2>
begin():
    22de:	0e 0d       	add	r16, r14
    22e0:	1f 1d       	adc	r17, r15
    22e2:	c0 0f       	add	r28, r16
    22e4:	d1 1f       	adc	r29, r17
    22e6:	61 e0       	ldi	r22, 0x01	; 1
    22e8:	8f 85       	ldd	r24, Y+15	; 0x0f
    22ea:	28 dd       	rcall	.-1456   	; 0x1d3c <pinMode>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:236

  // Restore SREG content
  SREG = oldSREG;
    22ec:	bf be       	out	0x3f, r11	; 63
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:237
}
    22ee:	df 91       	pop	r29
    22f0:	cf 91       	pop	r28
    22f2:	1f 91       	pop	r17
    22f4:	0f 91       	pop	r16
    22f6:	ff 90       	pop	r15
    22f8:	ef 90       	pop	r14
    22fa:	df 90       	pop	r13
    22fc:	cf 90       	pop	r12
    22fe:	bf 90       	pop	r11
    2300:	af 90       	pop	r10
    2302:	08 95       	ret

00002304 <UartClass::swap(unsigned char)>:
swap():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:161
  _pin_set = 0; // Default to standard
  return false;
}

bool UartClass::swap(uint8_t state)
{
    2304:	fc 01       	movw	r30, r24
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:162
  if (state == 1) // Use alternative pin position
    2306:	61 30       	cpi	r22, 0x01	; 1
    2308:	19 f4       	brne	.+6      	; 0x2310 <UartClass::swap(unsigned char)+0xc>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:164
  {
    _pin_set = state;
    230a:	64 8b       	std	Z+20, r22	; 0x14
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:170
    return true;
  }
  else if (state == 0) // Use default pin position
  {
    _pin_set = 0;
    return true;
    230c:	81 e0       	ldi	r24, 0x01	; 1
    230e:	08 95       	ret
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:169
    _pin_set = state;
    return true;
  }
  else if (state == 0) // Use default pin position
  {
    _pin_set = 0;
    2310:	14 8a       	std	Z+20, r1	; 0x14
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:167
  if (state == 1) // Use alternative pin position
  {
    _pin_set = state;
    return true;
  }
  else if (state == 0) // Use default pin position
    2312:	66 23       	and	r22, r22
    2314:	d9 f3       	breq	.-10     	; 0x230c <UartClass::swap(unsigned char)+0x8>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:175
    return true;
  }
  else // Invalid swap value. Use default position
  {
    _pin_set = 0;
    return false;
    2316:	80 e0       	ldi	r24, 0x00	; 0
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:177
  }
}
    2318:	08 95       	ret

0000231a <UartClass::pins(unsigned char, unsigned char)>:
pins():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:147

// Public Methods //////////////////////////////////////////////////////////////

// Invoke this function before 'begin' to define the pins used
bool UartClass::pins(uint8_t tx, uint8_t rx)
{
    231a:	dc 01       	movw	r26, r24
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:148
  for (_pin_set = 0; _pin_set < SERIAL_PIN_SETS; ++_pin_set)
    231c:	54 96       	adiw	r26, 0x14	; 20
    231e:	1c 92       	st	X, r1
    2320:	54 97       	sbiw	r26, 0x14	; 20
    2322:	54 96       	adiw	r26, 0x14	; 20
    2324:	8c 91       	ld	r24, X
    2326:	54 97       	sbiw	r26, 0x14	; 20
    2328:	82 30       	cpi	r24, 0x02	; 2
    232a:	a0 f4       	brcc	.+40     	; 0x2354 <UartClass::pins(unsigned char, unsigned char)+0x3a>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:150
  {
    if (tx == _hw_set[_pin_set].tx_pin && rx == _hw_set[_pin_set].rx_pin)
    232c:	28 2f       	mov	r18, r24
    232e:	30 e0       	ldi	r19, 0x00	; 0
    2330:	f9 01       	movw	r30, r18
    2332:	ee 0f       	add	r30, r30
    2334:	ff 1f       	adc	r31, r31
    2336:	e2 0f       	add	r30, r18
    2338:	f3 1f       	adc	r31, r19
    233a:	ea 0f       	add	r30, r26
    233c:	fb 1f       	adc	r31, r27
    233e:	97 85       	ldd	r25, Z+15	; 0x0f
    2340:	96 13       	cpse	r25, r22
    2342:	03 c0       	rjmp	.+6      	; 0x234a <UartClass::pins(unsigned char, unsigned char)+0x30>
    2344:	96 85       	ldd	r25, Z+14	; 0x0e
    2346:	94 17       	cp	r25, r20
    2348:	49 f0       	breq	.+18     	; 0x235c <UartClass::pins(unsigned char, unsigned char)+0x42>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:148
// Public Methods //////////////////////////////////////////////////////////////

// Invoke this function before 'begin' to define the pins used
bool UartClass::pins(uint8_t tx, uint8_t rx)
{
  for (_pin_set = 0; _pin_set < SERIAL_PIN_SETS; ++_pin_set)
    234a:	8f 5f       	subi	r24, 0xFF	; 255
    234c:	54 96       	adiw	r26, 0x14	; 20
    234e:	8c 93       	st	X, r24
    2350:	54 97       	sbiw	r26, 0x14	; 20
    2352:	e7 cf       	rjmp	.-50     	; 0x2322 <UartClass::pins(unsigned char, unsigned char)+0x8>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:156
    {
      // We are good, this set of pins is supported
      return true;
    }
  }
  _pin_set = 0; // Default to standard
    2354:	54 96       	adiw	r26, 0x14	; 20
    2356:	1c 92       	st	X, r1
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:157
  return false;
    2358:	80 e0       	ldi	r24, 0x00	; 0
    235a:	08 95       	ret
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:153
  for (_pin_set = 0; _pin_set < SERIAL_PIN_SETS; ++_pin_set)
  {
    if (tx == _hw_set[_pin_set].tx_pin && rx == _hw_set[_pin_set].rx_pin)
    {
      // We are good, this set of pins is supported
      return true;
    235c:	81 e0       	ldi	r24, 0x01	; 1
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:158
    }
  }
  _pin_set = 0; // Default to standard
  return false;
}
    235e:	08 95       	ret

00002360 <UartClass::_tx_data_empty_irq()>:
_tx_data_empty_irq():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:89
#endif

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void UartClass::_tx_data_empty_irq(void)
{
    2360:	cf 93       	push	r28
    2362:	df 93       	push	r29
    2364:	fc 01       	movw	r30, r24
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:91
  // Check if tx buffer already empty.
  if (_tx_buffer_head == _tx_buffer_tail)
    2366:	90 8d       	ldd	r25, Z+24	; 0x18
    2368:	81 8d       	ldd	r24, Z+25	; 0x19
    236a:	c4 85       	ldd	r28, Z+12	; 0x0c
    236c:	d5 85       	ldd	r29, Z+13	; 0x0d
    236e:	98 13       	cpse	r25, r24
    2370:	06 c0       	rjmp	.+12     	; 0x237e <UartClass::_tx_data_empty_irq()+0x1e>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:94
  {
    // Buffer empty, so disable "data register empty" interrupt
    (*_hwserial_module).CTRLA &= (~USART_DREIE_bm);
    2372:	8d 81       	ldd	r24, Y+5	; 0x05
    2374:	8f 7d       	andi	r24, 0xDF	; 223
    2376:	8d 83       	std	Y+5, r24	; 0x05
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:122
    {
      CPUINT.LVL1VEC = _prev_lvl1_interrupt_vect;
      _hwserial_dre_interrupt_elevated = 0;
    }
  }
}
    2378:	df 91       	pop	r29
    237a:	cf 91       	pop	r28
    237c:	08 95       	ret
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:100
    return;
  }

  // There must be more data in the output
  // buffer. Send the next byte
  unsigned char c = _tx_buffer[_tx_buffer_tail];
    237e:	a1 8d       	ldd	r26, Z+25	; 0x19
    2380:	ae 0f       	add	r26, r30
    2382:	bf 2f       	mov	r27, r31
    2384:	b1 1d       	adc	r27, r1
    2386:	a3 5a       	subi	r26, 0xA3	; 163
    2388:	bf 4f       	sbci	r27, 0xFF	; 255
    238a:	2c 91       	ld	r18, X
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:101
  _tx_buffer_tail = (_tx_buffer_tail + 1) % SERIAL_TX_BUFFER_SIZE;
    238c:	81 8d       	ldd	r24, Z+25	; 0x19
    238e:	90 e0       	ldi	r25, 0x00	; 0
    2390:	01 96       	adiw	r24, 0x01	; 1
    2392:	8f 73       	andi	r24, 0x3F	; 63
    2394:	99 27       	eor	r25, r25
    2396:	81 8f       	std	Z+25, r24	; 0x19
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:106

  // clear the TXCIF flag -- "can be cleared by writing a one to its bit
  // location". This makes sure flush() won't return until the bytes
  // actually got written
  (*_hwserial_module).STATUS = USART_TXCIF_bm;
    2398:	80 e4       	ldi	r24, 0x40	; 64
    239a:	8c 83       	std	Y+4, r24	; 0x04
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:108

  (*_hwserial_module).TXDATAL = c;
    239c:	a4 85       	ldd	r26, Z+12	; 0x0c
    239e:	b5 85       	ldd	r27, Z+13	; 0x0d
    23a0:	12 96       	adiw	r26, 0x02	; 2
    23a2:	2c 93       	st	X, r18
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:110

  if (_tx_buffer_head == _tx_buffer_tail)
    23a4:	90 8d       	ldd	r25, Z+24	; 0x18
    23a6:	81 8d       	ldd	r24, Z+25	; 0x19
    23a8:	98 13       	cpse	r25, r24
    23aa:	e6 cf       	rjmp	.-52     	; 0x2378 <UartClass::_tx_data_empty_irq()+0x18>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:113
  {
    // Buffer empty, so disable "data register empty" interrupt
    (*_hwserial_module).CTRLA &= (~USART_DREIE_bm);
    23ac:	a4 85       	ldd	r26, Z+12	; 0x0c
    23ae:	b5 85       	ldd	r27, Z+13	; 0x0d
    23b0:	15 96       	adiw	r26, 0x05	; 5
    23b2:	8c 91       	ld	r24, X
    23b4:	15 97       	sbiw	r26, 0x05	; 5
    23b6:	8f 7d       	andi	r24, 0xDF	; 223
    23b8:	15 96       	adiw	r26, 0x05	; 5
    23ba:	8c 93       	st	X, r24
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:116

    //Take the DRE interrupt back no normal priority level if it has been elevated
    if (_hwserial_dre_interrupt_elevated)
    23bc:	83 8d       	ldd	r24, Z+27	; 0x1b
    23be:	88 23       	and	r24, r24
    23c0:	d9 f2       	breq	.-74     	; 0x2378 <UartClass::_tx_data_empty_irq()+0x18>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:118
    {
      CPUINT.LVL1VEC = _prev_lvl1_interrupt_vect;
    23c2:	84 8d       	ldd	r24, Z+28	; 0x1c
    23c4:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <__TEXT_REGION_LENGTH__+0x7f4113>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:119
      _hwserial_dre_interrupt_elevated = 0;
    23c8:	13 8e       	std	Z+27, r1	; 0x1b
    23ca:	d6 cf       	rjmp	.-84     	; 0x2378 <UartClass::_tx_data_empty_irq()+0x18>

000023cc <UartClass::_poll_tx_data_empty()>:
_poll_tx_data_empty():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:126
  }
}

// To invoke data empty "interrupt" via a call, use this method
void UartClass::_poll_tx_data_empty(void)
{
    23cc:	dc 01       	movw	r26, r24
    23ce:	1c 96       	adiw	r26, 0x0c	; 12
    23d0:	ed 91       	ld	r30, X+
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:127
  if ((!(SREG & CPU_I_bm)) || (!((*_hwserial_module).CTRLA & USART_DREIE_bm)))
    23d2:	fc 91       	ld	r31, X
    23d4:	0f b6       	in	r0, 0x3f	; 63
    23d6:	07 fe       	sbrs	r0, 7
    23d8:	03 c0       	rjmp	.+6      	; 0x23e0 <UartClass::_poll_tx_data_empty()+0x14>
    23da:	25 81       	ldd	r18, Z+5	; 0x05
    23dc:	25 fd       	sbrc	r18, 5
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:135
    // so we'll have to poll the "data register empty" flag ourselves.
    // If it is set, pretend an interrupt has happened and call the handler
    // to free up space for us.

    // Invoke interrupt handler only if conditions data register is empty
    if ((*_hwserial_module).STATUS & USART_DREIF_bm)
    23de:	03 c0       	rjmp	.+6      	; 0x23e6 <UartClass::_poll_tx_data_empty()+0x1a>
    23e0:	24 81       	ldd	r18, Z+4	; 0x04
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:137
    {
      _tx_data_empty_irq();
    23e2:	25 fd       	sbrc	r18, 5
    23e4:	bd cf       	rjmp	.-134    	; 0x2360 <UartClass::_tx_data_empty_irq()>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:141
    }
  }
  // In case interrupts are enabled, the interrupt routine will be invoked by itself
}
    23e6:	08 95       	ret

000023e8 <UartClass::write(unsigned char)>:
write():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:336
  // If we get here, nothing is queued anymore (DREIE is disabled) and
  // the hardware finished transmission (TXCIF is set).
}

size_t UartClass::write(uint8_t c)
{
    23e8:	ef 92       	push	r14
    23ea:	ff 92       	push	r15
    23ec:	0f 93       	push	r16
    23ee:	1f 93       	push	r17
    23f0:	cf 93       	push	r28
    23f2:	df 93       	push	r29
    23f4:	ec 01       	movw	r28, r24
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:337
  _written = true;
    23f6:	81 e0       	ldi	r24, 0x01	; 1
    23f8:	8d 8b       	std	Y+21, r24	; 0x15
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:343

  // If the buffer and the data register is empty, just write the byte
  // to the data register and be done. This shortcut helps
  // significantly improve the effective data rate at high (>
  // 500kbit/s) bit rates, where interrupt overhead becomes a slowdown.
  if ((_tx_buffer_head == _tx_buffer_tail) && ((*_hwserial_module).STATUS & USART_DREIF_bm))
    23fa:	98 8d       	ldd	r25, Y+24	; 0x18
    23fc:	89 8d       	ldd	r24, Y+25	; 0x19
    23fe:	98 13       	cpse	r25, r24
    2400:	1c c0       	rjmp	.+56     	; 0x243a <UartClass::write(unsigned char)+0x52>
    2402:	ac 85       	ldd	r26, Y+12	; 0x0c
    2404:	bd 85       	ldd	r27, Y+13	; 0x0d
    2406:	14 96       	adiw	r26, 0x04	; 4
    2408:	8c 91       	ld	r24, X
    240a:	14 97       	sbiw	r26, 0x04	; 4
    240c:	85 ff       	sbrs	r24, 5
    240e:	15 c0       	rjmp	.+42     	; 0x243a <UartClass::write(unsigned char)+0x52>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:345
  {
    (*_hwserial_module).TXDATAL = c;
    2410:	12 96       	adiw	r26, 0x02	; 2
    2412:	6c 93       	st	X, r22
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:346
    (*_hwserial_module).STATUS = USART_TXCIF_bm;
    2414:	ac 85       	ldd	r26, Y+12	; 0x0c
    2416:	bd 85       	ldd	r27, Y+13	; 0x0d
    2418:	80 e4       	ldi	r24, 0x40	; 64
    241a:	14 96       	adiw	r26, 0x04	; 4
    241c:	8c 93       	st	X, r24
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:350

    // Make sure data register empty interrupt is disabled to avoid
    // that the interrupt handler is called in this situation
    (*_hwserial_module).CTRLA &= (~USART_DREIE_bm);
    241e:	ec 85       	ldd	r30, Y+12	; 0x0c
    2420:	fd 85       	ldd	r31, Y+13	; 0x0d
    2422:	85 81       	ldd	r24, Z+5	; 0x05
    2424:	8f 7d       	andi	r24, 0xDF	; 223
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:380

  _tx_buffer[_tx_buffer_head] = c;
  _tx_buffer_head = i;

  // Enable data "register empty interrupt"
  (*_hwserial_module).CTRLA |= USART_DREIE_bm;
    2426:	85 83       	std	Z+5, r24	; 0x05
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:383

  return 1;
}
    2428:	81 e0       	ldi	r24, 0x01	; 1
    242a:	90 e0       	ldi	r25, 0x00	; 0
    242c:	df 91       	pop	r29
    242e:	cf 91       	pop	r28
    2430:	1f 91       	pop	r17
    2432:	0f 91       	pop	r16
    2434:	ff 90       	pop	r15
    2436:	ef 90       	pop	r14
    2438:	08 95       	ret
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:357
    return 1;
  }

  //Check if we are inside an ISR already (could be from by a source other than UART),
  // in which case the UART ISRs will be blocked.
  if (CPUINT.STATUS & CPUINT_LVL0EX_bm)
    243a:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <__TEXT_REGION_LENGTH__+0x7f4111>
    243e:	80 ff       	sbrs	r24, 0
    2440:	08 c0       	rjmp	.+16     	; 0x2452 <UartClass::write(unsigned char)+0x6a>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:361
  {
    //Elevate the priority level of the Data Register Empty Interrupt vector
    //and copy whatever vector number that might be in the register already.
    _prev_lvl1_interrupt_vect = CPUINT.LVL1VEC;
    2442:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <__TEXT_REGION_LENGTH__+0x7f4113>
    2446:	8c 8f       	std	Y+28, r24	; 0x1c
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:362
    CPUINT.LVL1VEC = _hwserial_dre_interrupt_vect_num;
    2448:	8a 8d       	ldd	r24, Y+26	; 0x1a
    244a:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <__TEXT_REGION_LENGTH__+0x7f4113>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:364

    _hwserial_dre_interrupt_elevated = 1;
    244e:	81 e0       	ldi	r24, 0x01	; 1
    2450:	8b 8f       	std	Y+27, r24	; 0x1b
    2452:	f6 2e       	mov	r15, r22
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:367
  }

  tx_buffer_index_t i = (_tx_buffer_head + 1) % SERIAL_TX_BUFFER_SIZE;
    2454:	08 8d       	ldd	r16, Y+24	; 0x18
    2456:	10 e0       	ldi	r17, 0x00	; 0
    2458:	0f 5f       	subi	r16, 0xFF	; 255
    245a:	1f 4f       	sbci	r17, 0xFF	; 255
    245c:	0f 73       	andi	r16, 0x3F	; 63
    245e:	11 27       	eor	r17, r17
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:371

  //If the output buffer is full, there's nothing for it other than to
  //wait for the interrupt handler to empty it a bit (or emulate interrupts)
  while (i == _tx_buffer_tail)
    2460:	e0 2e       	mov	r14, r16
    2462:	89 8d       	ldd	r24, Y+25	; 0x19
    2464:	8e 11       	cpse	r24, r14
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:373
  {
    _poll_tx_data_empty();
    2466:	03 c0       	rjmp	.+6      	; 0x246e <UartClass::write(unsigned char)+0x86>
    2468:	ce 01       	movw	r24, r28
    246a:	b0 df       	rcall	.-160    	; 0x23cc <UartClass::_poll_tx_data_empty()>
    246c:	fa cf       	rjmp	.-12     	; 0x2462 <UartClass::write(unsigned char)+0x7a>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:376
  }

  _tx_buffer[_tx_buffer_head] = c;
    246e:	e8 8d       	ldd	r30, Y+24	; 0x18
    2470:	ec 0f       	add	r30, r28
    2472:	fd 2f       	mov	r31, r29
    2474:	f1 1d       	adc	r31, r1
    2476:	e3 5a       	subi	r30, 0xA3	; 163
    2478:	ff 4f       	sbci	r31, 0xFF	; 255
    247a:	f0 82       	st	Z, r15
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:377
  _tx_buffer_head = i;
    247c:	08 8f       	std	Y+24, r16	; 0x18
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:380

  // Enable data "register empty interrupt"
  (*_hwserial_module).CTRLA |= USART_DREIE_bm;
    247e:	ec 85       	ldd	r30, Y+12	; 0x0c
    2480:	fd 85       	ldd	r31, Y+13	; 0x0d
    2482:	85 81       	ldd	r24, Z+5	; 0x05
    2484:	80 62       	ori	r24, 0x20	; 32
    2486:	cf cf       	rjmp	.-98     	; 0x2426 <UartClass::write(unsigned char)+0x3e>

00002488 <UartClass::flush()>:
flush():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:303
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
  return tail - head - 1;
}

void UartClass::flush()
{
    2488:	cf 93       	push	r28
    248a:	df 93       	push	r29
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:307
  // If we have never written a byte, no need to flush. This special
  // case is needed since there is no way to force the TXCIF (transmit
  // complete) bit to 1 during initialization
  if (!_written)
    248c:	fc 01       	movw	r30, r24
    248e:	25 89       	ldd	r18, Z+21	; 0x15
    2490:	22 23       	and	r18, r18
    2492:	c1 f0       	breq	.+48     	; 0x24c4 <UartClass::flush()+0x3c>
    2494:	ec 01       	movw	r28, r24
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:314
    return;
  }

  //Check if we are inside an ISR already (e.g. connected to a different peripheral then UART), in which case the UART ISRs will not be called.
  //Temporarily elevate the DRE interrupt to allow it to run.
  if (CPUINT.STATUS & CPUINT_LVL0EX_bm)
    2496:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <__TEXT_REGION_LENGTH__+0x7f4111>
    249a:	80 ff       	sbrs	r24, 0
    249c:	08 c0       	rjmp	.+16     	; 0x24ae <UartClass::flush()+0x26>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:318
  {
    //Elevate the priority level of the Data Register Empty Interrupt vector
    //and copy whatever vector number that might be in the register already.
    _prev_lvl1_interrupt_vect = CPUINT.LVL1VEC;
    249e:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <__TEXT_REGION_LENGTH__+0x7f4113>
    24a2:	84 8f       	std	Z+28, r24	; 0x1c
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:319
    CPUINT.LVL1VEC = _hwserial_dre_interrupt_vect_num;
    24a4:	82 8d       	ldd	r24, Z+26	; 0x1a
    24a6:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <__TEXT_REGION_LENGTH__+0x7f4113>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:321

    _hwserial_dre_interrupt_elevated = 1;
    24aa:	81 e0       	ldi	r24, 0x01	; 1
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:325
  }

  // Spin until the data-register-empty-interrupt is disabled and TX complete interrupt flag is raised
  while (((*_hwserial_module).CTRLA & USART_DREIE_bm) || (!((*_hwserial_module).STATUS & USART_TXCIF_bm)))
    24ac:	83 8f       	std	Z+27, r24	; 0x1b
    24ae:	ec 85       	ldd	r30, Y+12	; 0x0c
    24b0:	fd 85       	ldd	r31, Y+13	; 0x0d
    24b2:	85 81       	ldd	r24, Z+5	; 0x05
    24b4:	85 fd       	sbrc	r24, 5
    24b6:	03 c0       	rjmp	.+6      	; 0x24be <UartClass::flush()+0x36>
    24b8:	84 81       	ldd	r24, Z+4	; 0x04
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:329
  {
    // If interrupts are globally disabled or the and DR empty interrupt is disabled,
    // poll the "data register empty" interrupt flag to prevent deadlock
    _poll_tx_data_empty();
    24ba:	86 fd       	sbrc	r24, 6
    24bc:	03 c0       	rjmp	.+6      	; 0x24c4 <UartClass::flush()+0x3c>
    24be:	ce 01       	movw	r24, r28
    24c0:	85 df       	rcall	.-246    	; 0x23cc <UartClass::_poll_tx_data_empty()>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:333
  }
  // If we get here, nothing is queued anymore (DREIE is disabled) and
  // the hardware finished transmission (TXCIF is set).
}
    24c2:	f5 cf       	rjmp	.-22     	; 0x24ae <UartClass::flush()+0x26>
    24c4:	df 91       	pop	r29
    24c6:	cf 91       	pop	r28
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:66
#endif

void serialEventRun(void)
{
#if defined(HAVE_HWSERIAL0)
  if (Serial0_available && serialEvent && Serial0_available()) serialEvent();
    24c8:	08 95       	ret

000024ca <serialEventRun()>:
serialEventRun():
    24ca:	80 e0       	ldi	r24, 0x00	; 0
    24cc:	90 e0       	ldi	r25, 0x00	; 0
    24ce:	89 2b       	or	r24, r25
    24d0:	21 f0       	breq	.+8      	; 0x24da <serialEventRun()+0x10>
    24d2:	6b de       	rcall	.-810    	; 0x21aa <Serial0_available()>
    24d4:	81 11       	cpse	r24, r1
    24d6:	0e 94 00 00 	call	0	; 0x0 <__TEXT_REGION_ORIGIN__>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:69
#endif
#if defined(HAVE_HWSERIAL1)
  if (Serial1_available && serialEvent1 && Serial1_available()) serialEvent1();
    24da:	80 e0       	ldi	r24, 0x00	; 0
    24dc:	90 e0       	ldi	r25, 0x00	; 0
    24de:	89 2b       	or	r24, r25
    24e0:	49 f0       	breq	.+18     	; 0x24f4 <serialEventRun()+0x2a>
    24e2:	80 e0       	ldi	r24, 0x00	; 0
    24e4:	90 e0       	ldi	r25, 0x00	; 0
    24e6:	89 2b       	or	r24, r25
    24e8:	29 f0       	breq	.+10     	; 0x24f4 <serialEventRun()+0x2a>
    24ea:	0e 94 00 00 	call	0	; 0x0 <__TEXT_REGION_ORIGIN__>
    24ee:	81 11       	cpse	r24, r1
    24f0:	0e 94 00 00 	call	0	; 0x0 <__TEXT_REGION_ORIGIN__>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:72
#endif
#if defined(HAVE_HWSERIAL2)
  if (Serial2_available && serialEvent2 && Serial2_available()) serialEvent2();
    24f4:	80 e0       	ldi	r24, 0x00	; 0
    24f6:	90 e0       	ldi	r25, 0x00	; 0
    24f8:	89 2b       	or	r24, r25
    24fa:	49 f0       	breq	.+18     	; 0x250e <serialEventRun()+0x44>
    24fc:	80 e0       	ldi	r24, 0x00	; 0
    24fe:	90 e0       	ldi	r25, 0x00	; 0
    2500:	89 2b       	or	r24, r25
    2502:	29 f0       	breq	.+10     	; 0x250e <serialEventRun()+0x44>
    2504:	0e 94 00 00 	call	0	; 0x0 <__TEXT_REGION_ORIGIN__>
    2508:	81 11       	cpse	r24, r1
    250a:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.cpp:77
#endif
#if defined(HAVE_HWSERIAL3)
  if (Serial3_available && serialEvent3 && Serial3_available()) serialEvent3();
#endif
}
    250e:	08 95       	ret

00002510 <UartClass::operator bool()>:
operator 3():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.h:174
    inline size_t write(unsigned long n) { return write((uint8_t)n); }
    inline size_t write(long n) { return write((uint8_t)n); }
    inline size_t write(unsigned int n) { return write((uint8_t)n); }
    inline size_t write(int n) { return write((uint8_t)n); }
    using Print::write; // pull in write(str) and write(buf, size) from Print
    explicit operator bool() { return true; }
    2510:	81 e0       	ldi	r24, 0x01	; 1
    2512:	08 95       	ret

00002514 <SoftwareSerial::peek()>:
peek():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:450
  // There is no tx buffering, simply return
}

int SoftwareSerial::peek()
{
  if (!isListening())
    2514:	20 91 7e 29 	lds	r18, 0x297E	; 0x80297e <SoftwareSerial::active_object>
    2518:	30 91 7f 29 	lds	r19, 0x297F	; 0x80297f <SoftwareSerial::active_object+0x1>
    251c:	28 17       	cp	r18, r24
    251e:	39 07       	cpc	r19, r25
    2520:	71 f4       	brne	.+28     	; 0x253e <SoftwareSerial::peek()+0x2a>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:454
    return -1;

  // Empty buffer?
  if (_receive_buffer_head == _receive_buffer_tail)
    2522:	90 91 7c 29 	lds	r25, 0x297C	; 0x80297c <SoftwareSerial::_receive_buffer_head>
    2526:	80 91 7d 29 	lds	r24, 0x297D	; 0x80297d <SoftwareSerial::_receive_buffer_tail>
    252a:	98 17       	cp	r25, r24
    252c:	41 f0       	breq	.+16     	; 0x253e <SoftwareSerial::peek()+0x2a>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:458
    return -1;

  // Read from "head"
  return _receive_buffer[_receive_buffer_head];
    252e:	e0 91 7c 29 	lds	r30, 0x297C	; 0x80297c <SoftwareSerial::_receive_buffer_head>
    2532:	f0 e0       	ldi	r31, 0x00	; 0
    2534:	e2 52       	subi	r30, 0x22	; 34
    2536:	f7 4d       	sbci	r31, 0xD7	; 215
    2538:	80 81       	ld	r24, Z
    253a:	90 e0       	ldi	r25, 0x00	; 0
    253c:	08 95       	ret
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:451
}

int SoftwareSerial::peek()
{
  if (!isListening())
    return -1;
    253e:	8f ef       	ldi	r24, 0xFF	; 255
    2540:	9f ef       	ldi	r25, 0xFF	; 255
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:459
  if (_receive_buffer_head == _receive_buffer_tail)
    return -1;

  // Read from "head"
  return _receive_buffer[_receive_buffer_head];
}
    2542:	08 95       	ret

00002544 <SoftwareSerial::flush()>:
flush():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src/Wire.cpp:358
  //   rxBufferIndex = 0;
  //   rxBufferLength = 0;
  //
  //   /* Turn off and on TWI module */
  //   TWI_Flush();
}
    2544:	08 95       	ret

00002546 <SoftwareSerial::write(unsigned char)>:
write():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:389

  return ((uint16_t)(_receive_buffer_tail + _SS_MAX_RX_BUFF - _receive_buffer_head)) % _SS_MAX_RX_BUFF;
}

size_t SoftwareSerial::write(uint8_t b)
{
    2546:	ef 92       	push	r14
    2548:	ff 92       	push	r15
    254a:	0f 93       	push	r16
    254c:	1f 93       	push	r17
    254e:	cf 93       	push	r28
    2550:	df 93       	push	r29
    2552:	dc 01       	movw	r26, r24
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:390
  if (_tx_delay == 0) {
    2554:	5c 96       	adiw	r26, 0x1c	; 28
    2556:	ed 90       	ld	r14, X+
    2558:	fc 90       	ld	r15, X
    255a:	5d 97       	sbiw	r26, 0x1d	; 29
    255c:	e1 14       	cp	r14, r1
    255e:	f1 04       	cpc	r15, r1
    2560:	79 f4       	brne	.+30     	; 0x2580 <SoftwareSerial::write(unsigned char)+0x3a>
_ZN5Print13setWriteErrorEi():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/Print.h:39
  private:
    int write_error;
    size_t printNumber(unsigned long, uint8_t);
    size_t printFloat(double, uint8_t);
  protected:
    void setWriteError(int err = 1) { write_error = err; }
    2562:	81 e0       	ldi	r24, 0x01	; 1
    2564:	90 e0       	ldi	r25, 0x00	; 0
    2566:	12 96       	adiw	r26, 0x02	; 2
    2568:	8d 93       	st	X+, r24
    256a:	9c 93       	st	X, r25
    256c:	13 97       	sbiw	r26, 0x03	; 3
write():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:392
    setWriteError();
    return 0;
    256e:	90 e0       	ldi	r25, 0x00	; 0
    2570:	80 e0       	ldi	r24, 0x00	; 0
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:441

  SREG = oldSREG; // turn interrupts back on
  tunedDelay(_tx_delay);

  return 1;
}
    2572:	df 91       	pop	r29
    2574:	cf 91       	pop	r28
    2576:	1f 91       	pop	r17
    2578:	0f 91       	pop	r16
    257a:	ff 90       	pop	r15
    257c:	ef 90       	pop	r14
    257e:	08 95       	ret
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:399

  // By declaring these as local variables, the compiler will put them
  // in registers _before_ disabling interrupts and entering the
  // critical timing sections below, which makes it a lot easier to
  // verify the cycle timings
  volatile uint8_t *reg = _transmitPortRegister;
    2580:	51 96       	adiw	r26, 0x11	; 17
    2582:	ed 91       	ld	r30, X+
    2584:	fc 91       	ld	r31, X
    2586:	52 97       	sbiw	r26, 0x12	; 18
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:400
  uint8_t reg_mask = _transmitBitMask;
    2588:	50 96       	adiw	r26, 0x10	; 16
    258a:	8c 91       	ld	r24, X
    258c:	50 97       	sbiw	r26, 0x10	; 16
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:401
  uint8_t inv_mask = ~_transmitBitMask;
    258e:	98 2f       	mov	r25, r24
    2590:	90 95       	com	r25
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:402
  uint8_t oldSREG = SREG;
    2592:	0f b7       	in	r16, 0x3f	; 63
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:403
  bool inv = _inverse_logic;
    2594:	5e 96       	adiw	r26, 0x1e	; 30
    2596:	2c 91       	ld	r18, X
    2598:	5e 97       	sbiw	r26, 0x1e	; 30
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:406
  uint16_t delay = _tx_delay;

  if (inv)
    259a:	12 2f       	mov	r17, r18
    259c:	12 70       	andi	r17, 0x02	; 2
    259e:	21 fd       	sbrc	r18, 1
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:407
    b = ~b;
    25a0:	60 95       	com	r22
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:409

  cli();  // turn off interrupts for a clean txmit
    25a2:	f8 94       	cli
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:413

  // Write the start bit
  if (inv)
    *reg |= reg_mask;
    25a4:	20 81       	ld	r18, Z
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:412
    b = ~b;

  cli();  // turn off interrupts for a clean txmit

  // Write the start bit
  if (inv)
    25a6:	11 23       	and	r17, r17
    25a8:	19 f1       	breq	.+70     	; 0x25f0 <SoftwareSerial::write(unsigned char)+0xaa>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:413
    *reg |= reg_mask;
    25aa:	28 2b       	or	r18, r24
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:415
  else
    *reg &= inv_mask;
    25ac:	20 83       	st	Z, r18
_delay_loop_2():
c:\users\manish.acharya\appdata\local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7\avr\include\util/delay_basic.h:110
    25ae:	e7 01       	movw	r28, r14
    25b0:	21 97       	sbiw	r28, 0x01	; 1
    25b2:	f1 f7       	brne	.-4      	; 0x25b0 <SoftwareSerial::write(unsigned char)+0x6a>
    25b4:	28 e0       	ldi	r18, 0x08	; 8
write():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:422
  tunedDelay(delay);

  // Write each of the 8 bits
  for (uint8_t i = 8; i > 0; --i)
  {
    if (b & 1) // choose bit
    25b6:	46 2f       	mov	r20, r22
    25b8:	50 e0       	ldi	r21, 0x00	; 0
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:423
      *reg |= reg_mask; // send 1
    25ba:	30 81       	ld	r19, Z
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:422
  tunedDelay(delay);

  // Write each of the 8 bits
  for (uint8_t i = 8; i > 0; --i)
  {
    if (b & 1) // choose bit
    25bc:	60 ff       	sbrs	r22, 0
    25be:	1a c0       	rjmp	.+52     	; 0x25f4 <SoftwareSerial::write(unsigned char)+0xae>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:423
      *reg |= reg_mask; // send 1
    25c0:	38 2b       	or	r19, r24
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:425
    else
      *reg &= inv_mask; // send 0
    25c2:	30 83       	st	Z, r19
_delay_loop_2():
c:\users\manish.acharya\appdata\local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7\avr\include\util/delay_basic.h:110
    25c4:	e7 01       	movw	r28, r14
    25c6:	21 97       	sbiw	r28, 0x01	; 1
    25c8:	f1 f7       	brne	.-4      	; 0x25c6 <SoftwareSerial::write(unsigned char)+0x80>
write():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:428

    tunedDelay(delay);
    b >>= 1;
    25ca:	ba 01       	movw	r22, r20
    25cc:	75 95       	asr	r23
    25ce:	67 95       	ror	r22
    25d0:	21 50       	subi	r18, 0x01	; 1
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:420
    *reg &= inv_mask;

  tunedDelay(delay);

  // Write each of the 8 bits
  for (uint8_t i = 8; i > 0; --i)
    25d2:	89 f7       	brne	.-30     	; 0x25b6 <SoftwareSerial::write(unsigned char)+0x70>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:432
    tunedDelay(delay);
    b >>= 1;
  }

  // restore pin to natural state
  if (inv)
    25d4:	11 23       	and	r17, r17
    25d6:	81 f0       	breq	.+32     	; 0x25f8 <SoftwareSerial::write(unsigned char)+0xb2>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:433
    *reg &= inv_mask;
    25d8:	80 81       	ld	r24, Z
    25da:	89 23       	and	r24, r25
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:435
  else
    *reg |= reg_mask;
    25dc:	80 83       	st	Z, r24
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:437

  SREG = oldSREG; // turn interrupts back on
    25de:	0f bf       	out	0x3f, r16	; 63
_delay_loop_2():
c:\users\manish.acharya\appdata\local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7\avr\include\util/delay_basic.h:110
    25e0:	5c 96       	adiw	r26, 0x1c	; 28
    25e2:	8d 91       	ld	r24, X+
    25e4:	9c 91       	ld	r25, X
    25e6:	01 97       	sbiw	r24, 0x01	; 1
    25e8:	f1 f7       	brne	.-4      	; 0x25e6 <SoftwareSerial::write(unsigned char)+0xa0>
write():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:440
  tunedDelay(_tx_delay);

  return 1;
    25ea:	81 e0       	ldi	r24, 0x01	; 1
    25ec:	90 e0       	ldi	r25, 0x00	; 0
    25ee:	c1 cf       	rjmp	.-126    	; 0x2572 <SoftwareSerial::write(unsigned char)+0x2c>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:415

  // Write the start bit
  if (inv)
    *reg |= reg_mask;
  else
    *reg &= inv_mask;
    25f0:	29 23       	and	r18, r25
    25f2:	dc cf       	rjmp	.-72     	; 0x25ac <SoftwareSerial::write(unsigned char)+0x66>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:425
  for (uint8_t i = 8; i > 0; --i)
  {
    if (b & 1) // choose bit
      *reg |= reg_mask; // send 1
    else
      *reg &= inv_mask; // send 0
    25f4:	39 23       	and	r19, r25
    25f6:	e5 cf       	rjmp	.-54     	; 0x25c2 <SoftwareSerial::write(unsigned char)+0x7c>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:435

  // restore pin to natural state
  if (inv)
    *reg &= inv_mask;
  else
    *reg |= reg_mask;
    25f8:	90 81       	ld	r25, Z
    25fa:	89 2b       	or	r24, r25
    25fc:	ef cf       	rjmp	.-34     	; 0x25dc <SoftwareSerial::write(unsigned char)+0x96>

000025fe <SoftwareSerial::available()>:
available():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:382
  return d;
}

int SoftwareSerial::available()
{
  if (!isListening())
    25fe:	20 91 7e 29 	lds	r18, 0x297E	; 0x80297e <SoftwareSerial::active_object>
    2602:	30 91 7f 29 	lds	r19, 0x297F	; 0x80297f <SoftwareSerial::active_object+0x1>
    2606:	28 17       	cp	r18, r24
    2608:	39 07       	cpc	r19, r25
    260a:	61 f4       	brne	.+24     	; 0x2624 <SoftwareSerial::available()+0x26>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:385
    return 0;

  return ((uint16_t)(_receive_buffer_tail + _SS_MAX_RX_BUFF - _receive_buffer_head)) % _SS_MAX_RX_BUFF;
    260c:	80 91 7d 29 	lds	r24, 0x297D	; 0x80297d <SoftwareSerial::_receive_buffer_tail>
    2610:	20 91 7c 29 	lds	r18, 0x297C	; 0x80297c <SoftwareSerial::_receive_buffer_head>
    2614:	90 e0       	ldi	r25, 0x00	; 0
    2616:	80 5c       	subi	r24, 0xC0	; 192
    2618:	9f 4f       	sbci	r25, 0xFF	; 255
    261a:	82 1b       	sub	r24, r18
    261c:	91 09       	sbc	r25, r1
    261e:	8f 73       	andi	r24, 0x3F	; 63
    2620:	99 27       	eor	r25, r25
    2622:	08 95       	ret
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:383
}

int SoftwareSerial::available()
{
  if (!isListening())
    return 0;
    2624:	90 e0       	ldi	r25, 0x00	; 0
    2626:	80 e0       	ldi	r24, 0x00	; 0
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:386

  return ((uint16_t)(_receive_buffer_tail + _SS_MAX_RX_BUFF - _receive_buffer_head)) % _SS_MAX_RX_BUFF;
}
    2628:	08 95       	ret

0000262a <SoftwareSerial::read()>:
read():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:367


// Read data from buffer
int SoftwareSerial::read()
{
  if (!isListening())
    262a:	20 91 7e 29 	lds	r18, 0x297E	; 0x80297e <SoftwareSerial::active_object>
    262e:	30 91 7f 29 	lds	r19, 0x297F	; 0x80297f <SoftwareSerial::active_object+0x1>
    2632:	28 17       	cp	r18, r24
    2634:	39 07       	cpc	r19, r25
    2636:	b9 f4       	brne	.+46     	; 0x2666 <SoftwareSerial::read()+0x3c>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:371
    return -1;

  // Empty buffer?
  if (_receive_buffer_head == _receive_buffer_tail)
    2638:	90 91 7c 29 	lds	r25, 0x297C	; 0x80297c <SoftwareSerial::_receive_buffer_head>
    263c:	80 91 7d 29 	lds	r24, 0x297D	; 0x80297d <SoftwareSerial::_receive_buffer_tail>
    2640:	98 17       	cp	r25, r24
    2642:	89 f0       	breq	.+34     	; 0x2666 <SoftwareSerial::read()+0x3c>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:375
    return -1;

  // Read from "head"
  uint8_t d = _receive_buffer[_receive_buffer_head]; // grab next byte
    2644:	e0 91 7c 29 	lds	r30, 0x297C	; 0x80297c <SoftwareSerial::_receive_buffer_head>
    2648:	f0 e0       	ldi	r31, 0x00	; 0
    264a:	e2 52       	subi	r30, 0x22	; 34
    264c:	f7 4d       	sbci	r31, 0xD7	; 215
    264e:	80 81       	ld	r24, Z
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:376
  _receive_buffer_head = (_receive_buffer_head + 1) % _SS_MAX_RX_BUFF;
    2650:	20 91 7c 29 	lds	r18, 0x297C	; 0x80297c <SoftwareSerial::_receive_buffer_head>
    2654:	30 e0       	ldi	r19, 0x00	; 0
    2656:	2f 5f       	subi	r18, 0xFF	; 255
    2658:	3f 4f       	sbci	r19, 0xFF	; 255
    265a:	2f 73       	andi	r18, 0x3F	; 63
    265c:	33 27       	eor	r19, r19
    265e:	20 93 7c 29 	sts	0x297C, r18	; 0x80297c <SoftwareSerial::_receive_buffer_head>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:377
  return d;
    2662:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:368

// Read data from buffer
int SoftwareSerial::read()
{
  if (!isListening())
    return -1;
    2664:	08 95       	ret
    2666:	8f ef       	ldi	r24, 0xFF	; 255
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\SoftwareSerial\src/SoftwareSerial.cpp:378

  // Read from "head"
  uint8_t d = _receive_buffer[_receive_buffer_head]; // grab next byte
  _receive_buffer_head = (_receive_buffer_head + 1) % _SS_MAX_RX_BUFF;
  return d;
}
    2668:	9f ef       	ldi	r25, 0xFF	; 255
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:82
  if (!dtrEnabled)
    resumeTime = micros() + x;
}

// This function waits (if necessary) for the prior task to complete.
void Adafruit_Thermal::timeoutWait() {
    266a:	08 95       	ret

0000266c <Adafruit_Thermal::timeoutWait()>:
timeoutWait():
    266c:	0f 93       	push	r16
    266e:	1f 93       	push	r17
    2670:	cf 93       	push	r28
    2672:	df 93       	push	r29
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:83
  if (dtrEnabled) {
    2674:	ec 01       	movw	r28, r24
    2676:	89 89       	ldd	r24, Y+17	; 0x11
    2678:	81 11       	cpse	r24, r1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:88
    while (digitalRead(dtrPin) == HIGH) {
      yield();
    };
  } else {
    while ((long)(micros() - resumeTime) < 0L) {
    267a:	10 c0       	rjmp	.+32     	; 0x269c <Adafruit_Thermal::timeoutWait()+0x30>
    267c:	f1 db       	rcall	.-2078   	; 0x1e60 <micros>
    267e:	0a 89       	ldd	r16, Y+18	; 0x12
    2680:	1b 89       	ldd	r17, Y+19	; 0x13
    2682:	2c 89       	ldd	r18, Y+20	; 0x14
    2684:	3d 89       	ldd	r19, Y+21	; 0x15
    2686:	60 1b       	sub	r22, r16
    2688:	71 0b       	sbc	r23, r17
    268a:	82 0b       	sbc	r24, r18
    268c:	93 0b       	sbc	r25, r19
    268e:	97 fd       	sbrc	r25, 7
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:92
      yield();
    }; // (syntax is rollover-proof)
  }
}
    2690:	f5 cf       	rjmp	.-22     	; 0x267c <Adafruit_Thermal::timeoutWait()+0x10>
    2692:	df 91       	pop	r29
    2694:	cf 91       	pop	r28
    2696:	1f 91       	pop	r17
    2698:	0f 91       	pop	r16
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:84
}

// This function waits (if necessary) for the prior task to complete.
void Adafruit_Thermal::timeoutWait() {
  if (dtrEnabled) {
    while (digitalRead(dtrPin) == HIGH) {
    269a:	08 95       	ret
    269c:	8e 85       	ldd	r24, Y+14	; 0x0e
    269e:	c0 db       	rcall	.-2176   	; 0x1e20 <digitalRead>
    26a0:	81 30       	cpi	r24, 0x01	; 1
    26a2:	e1 f3       	breq	.-8      	; 0x269c <Adafruit_Thermal::timeoutWait()+0x30>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:76
    : stream(s), dtrPin(dtr) {
  dtrEnabled = false;
}

// This method sets the estimated completion time for a just-issued task.
void Adafruit_Thermal::timeoutSet(unsigned long x) {
    26a4:	f6 cf       	rjmp	.-20     	; 0x2692 <Adafruit_Thermal::timeoutWait()+0x26>

000026a6 <Adafruit_Thermal::timeoutSet(unsigned long)>:
timeoutSet():
    26a6:	cf 92       	push	r12
    26a8:	df 92       	push	r13
    26aa:	ef 92       	push	r14
    26ac:	ff 92       	push	r15
    26ae:	cf 93       	push	r28
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:77
  if (!dtrEnabled)
    26b0:	df 93       	push	r29
    26b2:	fc 01       	movw	r30, r24
    26b4:	21 89       	ldd	r18, Z+17	; 0x11
    26b6:	21 11       	cpse	r18, r1
    26b8:	0c c0       	rjmp	.+24     	; 0x26d2 <Adafruit_Thermal::timeoutSet(unsigned long)+0x2c>
    26ba:	6a 01       	movw	r12, r20
    26bc:	7b 01       	movw	r14, r22
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:78
    resumeTime = micros() + x;
    26be:	ec 01       	movw	r28, r24
    26c0:	cf db       	rcall	.-2146   	; 0x1e60 <micros>
    26c2:	c6 0e       	add	r12, r22
    26c4:	d7 1e       	adc	r13, r23
    26c6:	e8 1e       	adc	r14, r24
    26c8:	f9 1e       	adc	r15, r25
    26ca:	ca 8a       	std	Y+18, r12	; 0x12
    26cc:	db 8a       	std	Y+19, r13	; 0x13
    26ce:	ec 8a       	std	Y+20, r14	; 0x14
    26d0:	fd 8a       	std	Y+21, r15	; 0x15
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:79
}
    26d2:	df 91       	pop	r29
    26d4:	cf 91       	pop	r28
    26d6:	ff 90       	pop	r15
    26d8:	ef 90       	pop	r14
    26da:	df 90       	pop	r13
    26dc:	cf 90       	pop	r12
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:126
  stream->write(a);
  stream->write(b);
  timeoutSet(2 * BYTE_TIME);
}

void Adafruit_Thermal::writeBytes(uint8_t a, uint8_t b, uint8_t c) {
    26de:	08 95       	ret

000026e0 <Adafruit_Thermal::writeBytes(unsigned char, unsigned char, unsigned char) [clone .constprop.43]>:
writeBytes():
    26e0:	ff 92       	push	r15
    26e2:	0f 93       	push	r16
    26e4:	1f 93       	push	r17
    26e6:	cf 93       	push	r28
    26e8:	df 93       	push	r29
    26ea:	f8 2e       	mov	r15, r24
    26ec:	06 2f       	mov	r16, r22
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:127
  timeoutWait();
    26ee:	14 2f       	mov	r17, r20
    26f0:	81 eb       	ldi	r24, 0xB1	; 177
    26f2:	9f e2       	ldi	r25, 0x2F	; 47
    26f4:	bb df       	rcall	.-138    	; 0x266c <Adafruit_Thermal::timeoutWait()>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:128
  stream->write(a);
    26f6:	c1 eb       	ldi	r28, 0xB1	; 177
    26f8:	df e2       	ldi	r29, 0x2F	; 47
    26fa:	8c 81       	ldd	r24, Y+4	; 0x04
    26fc:	9d 81       	ldd	r25, Y+5	; 0x05
    26fe:	dc 01       	movw	r26, r24
    2700:	ed 91       	ld	r30, X+
    2702:	fc 91       	ld	r31, X
    2704:	01 90       	ld	r0, Z+
    2706:	f0 81       	ld	r31, Z
    2708:	e0 2d       	mov	r30, r0
    270a:	6f 2d       	mov	r22, r15
    270c:	09 95       	icall
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:129
  stream->write(b);
    270e:	8c 81       	ldd	r24, Y+4	; 0x04
    2710:	9d 81       	ldd	r25, Y+5	; 0x05
    2712:	dc 01       	movw	r26, r24
    2714:	ed 91       	ld	r30, X+
    2716:	fc 91       	ld	r31, X
    2718:	01 90       	ld	r0, Z+
    271a:	f0 81       	ld	r31, Z
    271c:	e0 2d       	mov	r30, r0
    271e:	60 2f       	mov	r22, r16
    2720:	09 95       	icall
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:130
  stream->write(c);
    2722:	8c 81       	ldd	r24, Y+4	; 0x04
    2724:	9d 81       	ldd	r25, Y+5	; 0x05
    2726:	dc 01       	movw	r26, r24
    2728:	ed 91       	ld	r30, X+
    272a:	fc 91       	ld	r31, X
    272c:	01 90       	ld	r0, Z+
    272e:	f0 81       	ld	r31, Z
    2730:	e0 2d       	mov	r30, r0
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:131
  timeoutSet(3 * BYTE_TIME);
    2732:	61 2f       	mov	r22, r17
    2734:	09 95       	icall
    2736:	47 eb       	ldi	r20, 0xB7	; 183
    2738:	56 e0       	ldi	r21, 0x06	; 6
    273a:	60 e0       	ldi	r22, 0x00	; 0
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:132
}
    273c:	70 e0       	ldi	r23, 0x00	; 0
    273e:	ce 01       	movw	r24, r28
    2740:	df 91       	pop	r29
    2742:	cf 91       	pop	r28
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:131
void Adafruit_Thermal::writeBytes(uint8_t a, uint8_t b, uint8_t c) {
  timeoutWait();
  stream->write(a);
  stream->write(b);
  stream->write(c);
  timeoutSet(3 * BYTE_TIME);
    2744:	1f 91       	pop	r17
    2746:	0f 91       	pop	r16
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:321
  // charHeight = (printMode & DOUBLE_HEIGHT_MASK) ? 48 : 24;
  // maxColumn = (printMode & DOUBLE_WIDTH_MASK) ? 16 : 32;
}

void Adafruit_Thermal::writePrintMode() {
  writeBytes(ASCII_ESC, '!', printMode);
    2748:	ff 90       	pop	r15
    274a:	ad cf       	rjmp	.-166    	; 0x26a6 <Adafruit_Thermal::timeoutSet(unsigned long)>

0000274c <Adafruit_Thermal::writePrintMode() [clone .constprop.42]>:
writePrintMode():
    274c:	40 91 b7 2f 	lds	r20, 0x2FB7	; 0x802fb7 <printer+0x6>
    2750:	61 e2       	ldi	r22, 0x21	; 33
    2752:	8b e1       	ldi	r24, 0x1B	; 27
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:361
  } else {
    unsetPrintMode(UPDOWN_MASK);
  }
}

void Adafruit_Thermal::doubleHeightOn() { setPrintMode(DOUBLE_HEIGHT_MASK); }
    2754:	c5 cf       	rjmp	.-118    	; 0x26e0 <Adafruit_Thermal::writeBytes(unsigned char, unsigned char, unsigned char) [clone .constprop.43]>

00002756 <Adafruit_Thermal::doubleHeightOn() [clone .constprop.39]>:
doubleHeightOn():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:305
  }
  maxColumn = (384 / charWidth);
}

void Adafruit_Thermal::setPrintMode(uint8_t mask) {
  printMode |= mask;
    2756:	cf 93       	push	r28
    2758:	df 93       	push	r29
setPrintMode():
    275a:	c1 eb       	ldi	r28, 0xB1	; 177
    275c:	df e2       	ldi	r29, 0x2F	; 47
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:306
  writePrintMode();
    275e:	8e 81       	ldd	r24, Y+6	; 0x06
    2760:	80 61       	ori	r24, 0x10	; 16
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:307
  adjustCharValues(printMode);
    2762:	8e 83       	std	Y+6, r24	; 0x06
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:361
  } else {
    unsetPrintMode(UPDOWN_MASK);
  }
}

void Adafruit_Thermal::doubleHeightOn() { setPrintMode(DOUBLE_HEIGHT_MASK); }
    2764:	f3 df       	rcall	.-26     	; 0x274c <Adafruit_Thermal::writePrintMode() [clone .constprop.42]>
    2766:	8e 81       	ldd	r24, Y+6	; 0x06
doubleHeightOn():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:307
}

void Adafruit_Thermal::setPrintMode(uint8_t mask) {
  printMode |= mask;
  writePrintMode();
  adjustCharValues(printMode);
    2768:	df 91       	pop	r29
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:312
  // charHeight = (printMode & DOUBLE_HEIGHT_MASK) ? 48 : 24;
  // maxColumn = (printMode & DOUBLE_WIDTH_MASK) ? 16 : 32;
}

void Adafruit_Thermal::unsetPrintMode(uint8_t mask) {
    276a:	cf 91       	pop	r28
setPrintMode():
    276c:	8b ca       	rjmp	.-2794   	; 0x1c84 <Adafruit_Thermal::adjustCharValues(unsigned char) [clone .constprop.44]>

0000276e <Adafruit_Thermal::unsetPrintMode(unsigned char) [clone .constprop.38]>:
unsetPrintMode():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:313
  printMode &= ~mask;
    276e:	cf 93       	push	r28
    2770:	df 93       	push	r29
    2772:	c1 eb       	ldi	r28, 0xB1	; 177
    2774:	df e2       	ldi	r29, 0x2F	; 47
    2776:	98 2f       	mov	r25, r24
    2778:	90 95       	com	r25
    277a:	8e 81       	ldd	r24, Y+6	; 0x06
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:314
  writePrintMode();
    277c:	89 23       	and	r24, r25
    277e:	8e 83       	std	Y+6, r24	; 0x06
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:315
  adjustCharValues(printMode);
    2780:	e5 df       	rcall	.-54     	; 0x274c <Adafruit_Thermal::writePrintMode() [clone .constprop.42]>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:318
  // charHeight = (printMode & DOUBLE_HEIGHT_MASK) ? 48 : 24;
  // maxColumn = (printMode & DOUBLE_WIDTH_MASK) ? 16 : 32;
}
    2782:	8e 81       	ldd	r24, Y+6	; 0x06
    2784:	df 91       	pop	r29
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:315
}

void Adafruit_Thermal::unsetPrintMode(uint8_t mask) {
  printMode &= ~mask;
  writePrintMode();
  adjustCharValues(printMode);
    2786:	cf 91       	pop	r28
    2788:	7d ca       	rjmp	.-2822   	; 0x1c84 <Adafruit_Thermal::adjustCharValues(unsigned char) [clone .constprop.44]>

0000278a <Adafruit_Thermal::writeBytes(unsigned char, unsigned char) [clone .constprop.32]>:
writeBytes():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:119
  timeoutWait();
  stream->write(a);
  timeoutSet(BYTE_TIME);
}

void Adafruit_Thermal::writeBytes(uint8_t a, uint8_t b) {
    278a:	1f 93       	push	r17
    278c:	cf 93       	push	r28
    278e:	df 93       	push	r29
    2790:	18 2f       	mov	r17, r24
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:120
  timeoutWait();
    2792:	81 eb       	ldi	r24, 0xB1	; 177
    2794:	9f e2       	ldi	r25, 0x2F	; 47
    2796:	6a df       	rcall	.-300    	; 0x266c <Adafruit_Thermal::timeoutWait()>
    2798:	c1 eb       	ldi	r28, 0xB1	; 177
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:121
  stream->write(a);
    279a:	df e2       	ldi	r29, 0x2F	; 47
    279c:	8c 81       	ldd	r24, Y+4	; 0x04
    279e:	9d 81       	ldd	r25, Y+5	; 0x05
    27a0:	dc 01       	movw	r26, r24
    27a2:	ed 91       	ld	r30, X+
    27a4:	fc 91       	ld	r31, X
    27a6:	01 90       	ld	r0, Z+
    27a8:	f0 81       	ld	r31, Z
    27aa:	e0 2d       	mov	r30, r0
    27ac:	6b e1       	ldi	r22, 0x1B	; 27
    27ae:	09 95       	icall
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:122
  stream->write(b);
    27b0:	8c 81       	ldd	r24, Y+4	; 0x04
    27b2:	9d 81       	ldd	r25, Y+5	; 0x05
    27b4:	dc 01       	movw	r26, r24
    27b6:	ed 91       	ld	r30, X+
    27b8:	fc 91       	ld	r31, X
    27ba:	01 90       	ld	r0, Z+
    27bc:	f0 81       	ld	r31, Z
    27be:	e0 2d       	mov	r30, r0
    27c0:	61 2f       	mov	r22, r17
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:123
  timeoutSet(2 * BYTE_TIME);
    27c2:	09 95       	icall
    27c4:	4a e7       	ldi	r20, 0x7A	; 122
    27c6:	54 e0       	ldi	r21, 0x04	; 4
    27c8:	60 e0       	ldi	r22, 0x00	; 0
    27ca:	70 e0       	ldi	r23, 0x00	; 0
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:124
}
    27cc:	ce 01       	movw	r24, r28
    27ce:	df 91       	pop	r29
    27d0:	cf 91       	pop	r28
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:123

void Adafruit_Thermal::writeBytes(uint8_t a, uint8_t b) {
  timeoutWait();
  stream->write(a);
  stream->write(b);
  timeoutSet(2 * BYTE_TIME);
    27d2:	1f 91       	pop	r17
    27d4:	68 cf       	rjmp	.-304    	; 0x26a6 <Adafruit_Thermal::timeoutSet(unsigned long)>

000027d6 <Adafruit_Thermal::writeBytes(unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.30]>:
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:134
  stream->write(b);
  stream->write(c);
  timeoutSet(3 * BYTE_TIME);
}

void Adafruit_Thermal::writeBytes(uint8_t a, uint8_t b, uint8_t c, uint8_t d) {
    27d6:	ef 92       	push	r14
    27d8:	ff 92       	push	r15
    27da:	0f 93       	push	r16
    27dc:	1f 93       	push	r17
    27de:	cf 93       	push	r28
    27e0:	df 93       	push	r29
    27e2:	e8 2e       	mov	r14, r24
    27e4:	f6 2e       	mov	r15, r22
    27e6:	04 2f       	mov	r16, r20
    27e8:	12 2f       	mov	r17, r18
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:135
  timeoutWait();
    27ea:	81 eb       	ldi	r24, 0xB1	; 177
    27ec:	9f e2       	ldi	r25, 0x2F	; 47
    27ee:	3e df       	rcall	.-388    	; 0x266c <Adafruit_Thermal::timeoutWait()>
    27f0:	c1 eb       	ldi	r28, 0xB1	; 177
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:136
  stream->write(a);
    27f2:	df e2       	ldi	r29, 0x2F	; 47
    27f4:	8c 81       	ldd	r24, Y+4	; 0x04
    27f6:	9d 81       	ldd	r25, Y+5	; 0x05
    27f8:	dc 01       	movw	r26, r24
    27fa:	ed 91       	ld	r30, X+
    27fc:	fc 91       	ld	r31, X
    27fe:	01 90       	ld	r0, Z+
    2800:	f0 81       	ld	r31, Z
    2802:	e0 2d       	mov	r30, r0
    2804:	6e 2d       	mov	r22, r14
    2806:	09 95       	icall
    2808:	8c 81       	ldd	r24, Y+4	; 0x04
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:137
  stream->write(b);
    280a:	9d 81       	ldd	r25, Y+5	; 0x05
    280c:	dc 01       	movw	r26, r24
    280e:	ed 91       	ld	r30, X+
    2810:	fc 91       	ld	r31, X
    2812:	01 90       	ld	r0, Z+
    2814:	f0 81       	ld	r31, Z
    2816:	e0 2d       	mov	r30, r0
    2818:	6f 2d       	mov	r22, r15
    281a:	09 95       	icall
    281c:	8c 81       	ldd	r24, Y+4	; 0x04
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:138
  stream->write(c);
    281e:	9d 81       	ldd	r25, Y+5	; 0x05
    2820:	dc 01       	movw	r26, r24
    2822:	ed 91       	ld	r30, X+
    2824:	fc 91       	ld	r31, X
    2826:	01 90       	ld	r0, Z+
    2828:	f0 81       	ld	r31, Z
    282a:	e0 2d       	mov	r30, r0
    282c:	60 2f       	mov	r22, r16
    282e:	09 95       	icall
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:139
  stream->write(d);
    2830:	8c 81       	ldd	r24, Y+4	; 0x04
    2832:	9d 81       	ldd	r25, Y+5	; 0x05
    2834:	dc 01       	movw	r26, r24
    2836:	ed 91       	ld	r30, X+
    2838:	fc 91       	ld	r31, X
    283a:	01 90       	ld	r0, Z+
    283c:	f0 81       	ld	r31, Z
    283e:	e0 2d       	mov	r30, r0
    2840:	61 2f       	mov	r22, r17
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:140
  timeoutSet(4 * BYTE_TIME);
    2842:	09 95       	icall
    2844:	44 ef       	ldi	r20, 0xF4	; 244
    2846:	58 e0       	ldi	r21, 0x08	; 8
    2848:	60 e0       	ldi	r22, 0x00	; 0
    284a:	70 e0       	ldi	r23, 0x00	; 0
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:141
}
    284c:	ce 01       	movw	r24, r28
    284e:	df 91       	pop	r29
    2850:	cf 91       	pop	r28
    2852:	1f 91       	pop	r17
    2854:	0f 91       	pop	r16
    2856:	ff 90       	pop	r15
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:140
  timeoutWait();
  stream->write(a);
  stream->write(b);
  stream->write(c);
  stream->write(d);
  timeoutSet(4 * BYTE_TIME);
    2858:	ef 90       	pop	r14
    285a:	25 cf       	rjmp	.-438    	; 0x26a6 <Adafruit_Thermal::timeoutSet(unsigned long)>

0000285c <Adafruit_Thermal::write(unsigned char) [clone .part.2]>:
_ZN16Adafruit_Thermal5writeEh.part.2():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:145
}

// The underlying method for all high-level printing (e.g. println()).
// The inherited Print class handles the rest!
size_t Adafruit_Thermal::write(uint8_t c) {
    285c:	8f 92       	push	r8
    285e:	9f 92       	push	r9
    2860:	af 92       	push	r10
    2862:	bf 92       	push	r11
    2864:	cf 92       	push	r12
    2866:	df 92       	push	r13
    2868:	ef 92       	push	r14
    286a:	ff 92       	push	r15
    286c:	1f 93       	push	r17
    286e:	cf 93       	push	r28
    2870:	df 93       	push	r29
    2872:	ec 01       	movw	r28, r24
    2874:	16 2f       	mov	r17, r22
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:148

  if (c != 13) { // Strip carriage returns
    timeoutWait();
    2876:	fa de       	rcall	.-524    	; 0x266c <Adafruit_Thermal::timeoutWait()>
    2878:	8c 81       	ldd	r24, Y+4	; 0x04
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:149
    stream->write(c);
    287a:	9d 81       	ldd	r25, Y+5	; 0x05
    287c:	dc 01       	movw	r26, r24
    287e:	ed 91       	ld	r30, X+
    2880:	fc 91       	ld	r31, X
    2882:	01 90       	ld	r0, Z+
    2884:	f0 81       	ld	r31, Z
    2886:	e0 2d       	mov	r30, r0
    2888:	61 2f       	mov	r22, r17
    288a:	09 95       	icall
    288c:	1a 30       	cpi	r17, 0x0A	; 10
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:151
    unsigned long d = BYTE_TIME;
    if ((c == '\n') || (column == maxColumn)) { // If newline or wrap
    288e:	21 f0       	breq	.+8      	; 0x2898 <Adafruit_Thermal::write(unsigned char) [clone .part.2]+0x3c>
    2890:	88 85       	ldd	r24, Y+8	; 0x08
    2892:	99 85       	ldd	r25, Y+9	; 0x09
    2894:	89 13       	cpse	r24, r25
    2896:	3b c0       	rjmp	.+118    	; 0x290e <Adafruit_Thermal::write(unsigned char) [clone .part.2]+0xb2>
    2898:	aa 85       	ldd	r26, Y+10	; 0x0a
    289a:	eb 85       	ldd	r30, Y+11	; 0x0b
    289c:	8a 8c       	ldd	r8, Y+26	; 0x1a
    289e:	9b 8c       	ldd	r9, Y+27	; 0x1b
    28a0:	ac 8c       	ldd	r10, Y+28	; 0x1c
    28a2:	bd 8c       	ldd	r11, Y+29	; 0x1d
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:152
      d += (prevByte == '\n') ? ((charHeight + lineSpacing) * dotFeedTime)
    28a4:	8f 81       	ldd	r24, Y+7	; 0x07
    28a6:	8a 30       	cpi	r24, 0x0A	; 10
    28a8:	f1 f4       	brne	.+60     	; 0x28e6 <Adafruit_Thermal::write(unsigned char) [clone .part.2]+0x8a>
    28aa:	ae 0f       	add	r26, r30
    28ac:	bb 27       	eor	r27, r27
    28ae:	bb 1f       	adc	r27, r27
    28b0:	a5 01       	movw	r20, r10
    28b2:	94 01       	movw	r18, r8
    28b4:	0e 94 bd 39 	call	0x737a	; 0x737a <__mulshisi3>
    28b8:	ab 01       	movw	r20, r22
    28ba:	bc 01       	movw	r22, r24
    28bc:	43 5c       	subi	r20, 0xC3	; 195
    28be:	5d 4f       	sbci	r21, 0xFD	; 253
    28c0:	6f 4f       	sbci	r22, 0xFF	; 255
    28c2:	7f 4f       	sbci	r23, 0xFF	; 255
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:156
                              : // Feed line
               ((charHeight * dotPrintTime) +
                (lineSpacing * dotFeedTime)); // Text line
      column = 0;
    28c4:	18 86       	std	Y+8, r1	; 0x08
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:157
      c = '\n'; // Treat wrap as newline on next pass
    28c6:	1a e0       	ldi	r17, 0x0A	; 10
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:161
    } else {
      column++;
    }
    timeoutSet(d);
    28c8:	ce 01       	movw	r24, r28
    28ca:	ed de       	rcall	.-550    	; 0x26a6 <Adafruit_Thermal::timeoutSet(unsigned long)>
    28cc:	1f 83       	std	Y+7, r17	; 0x07
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:162
    prevByte = c;
    28ce:	df 91       	pop	r29
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:166
  }

  return 1;
}
    28d0:	cf 91       	pop	r28
    28d2:	1f 91       	pop	r17
    28d4:	ff 90       	pop	r15
    28d6:	ef 90       	pop	r14
    28d8:	df 90       	pop	r13
    28da:	cf 90       	pop	r12
    28dc:	bf 90       	pop	r11
    28de:	af 90       	pop	r10
    28e0:	9f 90       	pop	r9
    28e2:	8f 90       	pop	r8
    28e4:	08 95       	ret
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:154
    stream->write(c);
    unsigned long d = BYTE_TIME;
    if ((c == '\n') || (column == maxColumn)) { // If newline or wrap
      d += (prevByte == '\n') ? ((charHeight + lineSpacing) * dotFeedTime)
                              : // Feed line
               ((charHeight * dotPrintTime) +
    28e6:	2e 89       	ldd	r18, Y+22	; 0x16
    28e8:	3f 89       	ldd	r19, Y+23	; 0x17
    28ea:	48 8d       	ldd	r20, Y+24	; 0x18
    28ec:	59 8d       	ldd	r21, Y+25	; 0x19
    28ee:	b0 e0       	ldi	r27, 0x00	; 0
    28f0:	0e 94 77 38 	call	0x70ee	; 0x70ee <__muluhisi3>
    28f4:	6b 01       	movw	r12, r22
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:155
                (lineSpacing * dotFeedTime)); // Text line
    28f6:	7c 01       	movw	r14, r24
    28f8:	ae 2f       	mov	r26, r30
    28fa:	b0 e0       	ldi	r27, 0x00	; 0
    28fc:	a5 01       	movw	r20, r10
    28fe:	94 01       	movw	r18, r8
    2900:	0e 94 77 38 	call	0x70ee	; 0x70ee <__muluhisi3>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:152
  if (c != 13) { // Strip carriage returns
    timeoutWait();
    stream->write(c);
    unsigned long d = BYTE_TIME;
    if ((c == '\n') || (column == maxColumn)) { // If newline or wrap
      d += (prevByte == '\n') ? ((charHeight + lineSpacing) * dotFeedTime)
    2904:	6c 0d       	add	r22, r12
    2906:	7d 1d       	adc	r23, r13
    2908:	8e 1d       	adc	r24, r14
    290a:	9f 1d       	adc	r25, r15
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:159
               ((charHeight * dotPrintTime) +
                (lineSpacing * dotFeedTime)); // Text line
      column = 0;
      c = '\n'; // Treat wrap as newline on next pass
    } else {
      column++;
    290c:	d5 cf       	rjmp	.-86     	; 0x28b8 <Adafruit_Thermal::write(unsigned char) [clone .part.2]+0x5c>
    290e:	8f 5f       	subi	r24, 0xFF	; 255
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:150
size_t Adafruit_Thermal::write(uint8_t c) {

  if (c != 13) { // Strip carriage returns
    timeoutWait();
    stream->write(c);
    unsigned long d = BYTE_TIME;
    2910:	88 87       	std	Y+8, r24	; 0x08
    2912:	4d e3       	ldi	r20, 0x3D	; 61
    2914:	52 e0       	ldi	r21, 0x02	; 2
    2916:	60 e0       	ldi	r22, 0x00	; 0
    2918:	70 e0       	ldi	r23, 0x00	; 0
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:147

// The underlying method for all high-level printing (e.g. println()).
// The inherited Print class handles the rest!
size_t Adafruit_Thermal::write(uint8_t c) {

  if (c != 13) { // Strip carriage returns
    291a:	d6 cf       	rjmp	.-84     	; 0x28c8 <Adafruit_Thermal::write(unsigned char) [clone .part.2]+0x6c>

0000291c <Adafruit_Thermal::write(unsigned char)>:
write():
    291c:	6d 30       	cpi	r22, 0x0D	; 13
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:166
    timeoutSet(d);
    prevByte = c;
  }

  return 1;
}
    291e:	09 f0       	breq	.+2      	; 0x2922 <Adafruit_Thermal::write(unsigned char)+0x6>
    2920:	9d df       	rcall	.-198    	; 0x285c <Adafruit_Thermal::write(unsigned char) [clone .part.2]>
    2922:	81 e0       	ldi	r24, 0x01	; 1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:113
}

// The next four helper methods are used when issuing configuration
// commands, printing bitmaps or barcodes, etc.  Not when printing text.

void Adafruit_Thermal::writeBytes(uint8_t a) {
    2924:	90 e0       	ldi	r25, 0x00	; 0
    2926:	08 95       	ret

00002928 <Adafruit_Thermal::writeBytes(unsigned char)>:
writeBytes():
    2928:	1f 93       	push	r17
    292a:	cf 93       	push	r28
    292c:	df 93       	push	r29
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:114
  timeoutWait();
    292e:	ec 01       	movw	r28, r24
    2930:	16 2f       	mov	r17, r22
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:115
  stream->write(a);
    2932:	9c de       	rcall	.-712    	; 0x266c <Adafruit_Thermal::timeoutWait()>
    2934:	8c 81       	ldd	r24, Y+4	; 0x04
    2936:	9d 81       	ldd	r25, Y+5	; 0x05
    2938:	dc 01       	movw	r26, r24
    293a:	ed 91       	ld	r30, X+
    293c:	fc 91       	ld	r31, X
    293e:	01 90       	ld	r0, Z+
    2940:	f0 81       	ld	r31, Z
    2942:	e0 2d       	mov	r30, r0
    2944:	61 2f       	mov	r22, r17
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:116
  timeoutSet(BYTE_TIME);
    2946:	09 95       	icall
    2948:	4d e3       	ldi	r20, 0x3D	; 61
    294a:	52 e0       	ldi	r21, 0x02	; 2
    294c:	60 e0       	ldi	r22, 0x00	; 0
    294e:	70 e0       	ldi	r23, 0x00	; 0
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:117
}
    2950:	ce 01       	movw	r24, r28
    2952:	df 91       	pop	r29
    2954:	cf 91       	pop	r28
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:116
// commands, printing bitmaps or barcodes, etc.  Not when printing text.

void Adafruit_Thermal::writeBytes(uint8_t a) {
  timeoutWait();
  stream->write(a);
  timeoutSet(BYTE_TIME);
    2956:	1f 91       	pop	r17
    2958:	a6 ce       	rjmp	.-692    	; 0x26a6 <Adafruit_Thermal::timeoutSet(unsigned long)>

0000295a <Adafruit_Thermal::flush()>:
flush():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:416
  timeoutSet(rows * dotFeedTime);
  prevByte = '\n';
  column = 0;
}

void Adafruit_Thermal::flush() { writeBytes(ASCII_FF); }
    295a:	6c e0       	ldi	r22, 0x0C	; 12
    295c:	e5 cf       	rjmp	.-54     	; 0x2928 <Adafruit_Thermal::writeBytes(unsigned char)>

0000295e <Ticker::update()>:
update():
    295e:	0f 93       	push	r16
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:71
	else diffTime = micros() - lastTime;
	enabled = false;
	status = PAUSED;
	}

void Ticker::update() {
    2960:	1f 93       	push	r17
    2962:	cf 93       	push	r28
    2964:	df 93       	push	r29
tick():
    2966:	fc 01       	movw	r30, r24
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:76
	if (tick()) callback();
	}

bool Ticker::tick() {
	if (!enabled)	return false;
    2968:	20 81       	ld	r18, Z
    296a:	22 23       	and	r18, r18
    296c:	09 f4       	brne	.+2      	; 0x2970 <Ticker::update()+0x12>
    296e:	6a c0       	rjmp	.+212    	; 0x2a44 <Ticker::update()+0xe6>
    2970:	ec 01       	movw	r28, r24
    2972:	81 85       	ldd	r24, Z+9	; 0x09
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:77
	if (resolution == MILLIS) {
    2974:	92 85       	ldd	r25, Z+10	; 0x0a
    2976:	01 97       	sbiw	r24, 0x01	; 1
    2978:	09 f0       	breq	.+2      	; 0x297c <Ticker::update()+0x1e>
    297a:	4c c0       	rjmp	.+152    	; 0x2a14 <Ticker::update()+0xb6>
millis():
    297c:	2f b7       	in	r18, 0x3f	; 63
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring.c:87
{
  unsigned long m;

  // disable interrupts while we read timer0_millis or we might get an
  // inconsistent value (e.g. in the middle of a write to timer_millis)
  uint8_t status = SREG;
    297e:	f8 94       	cli
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring.c:88
  cli();
    2980:	80 91 b7 29 	lds	r24, 0x29B7	; 0x8029b7 <timer_millis>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring.c:90

  m = timer_millis;
    2984:	90 91 b8 29 	lds	r25, 0x29B8	; 0x8029b8 <timer_millis+0x1>
    2988:	a0 91 b9 29 	lds	r26, 0x29B9	; 0x8029b9 <timer_millis+0x2>
    298c:	b0 91 ba 29 	lds	r27, 0x29BA	; 0x8029ba <timer_millis+0x3>
    2990:	2f bf       	out	0x3f, r18	; 63
tick():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring.c:92

  SREG = status;
    2992:	43 89       	ldd	r20, Z+19	; 0x13
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:78
		if ((millis() - lastTime) >= timer) {
    2994:	54 89       	ldd	r21, Z+20	; 0x14
    2996:	65 89       	ldd	r22, Z+21	; 0x15
    2998:	76 89       	ldd	r23, Z+22	; 0x16
    299a:	84 1b       	sub	r24, r20
    299c:	95 0b       	sbc	r25, r21
    299e:	a6 0b       	sbc	r26, r22
    29a0:	b7 0b       	sbc	r27, r23
    29a2:	41 81       	ldd	r20, Z+1	; 0x01
    29a4:	52 81       	ldd	r21, Z+2	; 0x02
    29a6:	63 81       	ldd	r22, Z+3	; 0x03
    29a8:	74 81       	ldd	r23, Z+4	; 0x04
    29aa:	84 17       	cp	r24, r20
    29ac:	95 07       	cpc	r25, r21
    29ae:	a6 07       	cpc	r26, r22
    29b0:	b7 07       	cpc	r27, r23
    29b2:	08 f4       	brcc	.+2      	; 0x29b6 <Ticker::update()+0x58>
    29b4:	47 c0       	rjmp	.+142    	; 0x2a44 <Ticker::update()+0xe6>
millis():
    29b6:	2f b7       	in	r18, 0x3f	; 63
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring.c:87
{
  unsigned long m;

  // disable interrupts while we read timer0_millis or we might get an
  // inconsistent value (e.g. in the middle of a write to timer_millis)
  uint8_t status = SREG;
    29b8:	f8 94       	cli
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring.c:88
  cli();
    29ba:	80 91 b7 29 	lds	r24, 0x29B7	; 0x8029b7 <timer_millis>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring.c:90

  m = timer_millis;
    29be:	90 91 b8 29 	lds	r25, 0x29B8	; 0x8029b8 <timer_millis+0x1>
    29c2:	a0 91 b9 29 	lds	r26, 0x29B9	; 0x8029b9 <timer_millis+0x2>
    29c6:	b0 91 ba 29 	lds	r27, 0x29BA	; 0x8029ba <timer_millis+0x3>
    29ca:	2f bf       	out	0x3f, r18	; 63
tick():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring.c:92

  SREG = status;
    29cc:	83 8b       	std	Z+19, r24	; 0x13
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:79
			lastTime = millis();
    29ce:	94 8b       	std	Z+20, r25	; 0x14
    29d0:	a5 8b       	std	Z+21, r26	; 0x15
    29d2:	b6 8b       	std	Z+22, r27	; 0x16
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:88
			}
		}
	else {
		if ((micros() - lastTime) >= timer) {
			lastTime = micros();
			if (repeat - counts == 1) enabled = false;
    29d4:	8b 85       	ldd	r24, Y+11	; 0x0b
    29d6:	9c 85       	ldd	r25, Y+12	; 0x0c
    29d8:	ad 85       	ldd	r26, Y+13	; 0x0d
    29da:	be 85       	ldd	r27, Y+14	; 0x0e
    29dc:	4d 81       	ldd	r20, Y+5	; 0x05
    29de:	5e 81       	ldd	r21, Y+6	; 0x06
    29e0:	6f 81       	ldd	r22, Y+7	; 0x07
    29e2:	78 85       	ldd	r23, Y+8	; 0x08
    29e4:	48 1b       	sub	r20, r24
    29e6:	59 0b       	sbc	r21, r25
    29e8:	6a 0b       	sbc	r22, r26
    29ea:	7b 0b       	sbc	r23, r27
    29ec:	41 30       	cpi	r20, 0x01	; 1
    29ee:	51 05       	cpc	r21, r1
    29f0:	61 05       	cpc	r22, r1
    29f2:	71 05       	cpc	r23, r1
    29f4:	09 f4       	brne	.+2      	; 0x29f8 <Ticker::update()+0x9a>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:89
			counts++;
    29f6:	18 82       	st	Y, r1
    29f8:	01 96       	adiw	r24, 0x01	; 1
    29fa:	a1 1d       	adc	r26, r1
    29fc:	b1 1d       	adc	r27, r1
    29fe:	8b 87       	std	Y+11, r24	; 0x0b
    2a00:	9c 87       	std	Y+12, r25	; 0x0c
    2a02:	ad 87       	std	Y+13, r26	; 0x0d
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:72
	enabled = false;
	status = PAUSED;
	}

void Ticker::update() {
	if (tick()) callback();
    2a04:	be 87       	std	Y+14, r27	; 0x0e
update():
    2a06:	e9 89       	ldd	r30, Y+17	; 0x11
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:73
	}
    2a08:	fa 89       	ldd	r31, Y+18	; 0x12
    2a0a:	df 91       	pop	r29
    2a0c:	cf 91       	pop	r28
    2a0e:	1f 91       	pop	r17
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:72
	enabled = false;
	status = PAUSED;
	}

void Ticker::update() {
	if (tick()) callback();
    2a10:	0f 91       	pop	r16
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:86
			counts++;				
	  	return true;
			}
		}
	else {
		if ((micros() - lastTime) >= timer) {
    2a12:	09 94       	ijmp
tick():
    2a14:	25 da       	rcall	.-2998   	; 0x1e60 <micros>
    2a16:	0b 89       	ldd	r16, Y+19	; 0x13
    2a18:	1c 89       	ldd	r17, Y+20	; 0x14
    2a1a:	2d 89       	ldd	r18, Y+21	; 0x15
    2a1c:	3e 89       	ldd	r19, Y+22	; 0x16
    2a1e:	60 1b       	sub	r22, r16
    2a20:	71 0b       	sbc	r23, r17
    2a22:	82 0b       	sbc	r24, r18
    2a24:	93 0b       	sbc	r25, r19
    2a26:	09 81       	ldd	r16, Y+1	; 0x01
    2a28:	1a 81       	ldd	r17, Y+2	; 0x02
    2a2a:	2b 81       	ldd	r18, Y+3	; 0x03
    2a2c:	3c 81       	ldd	r19, Y+4	; 0x04
    2a2e:	60 17       	cp	r22, r16
    2a30:	71 07       	cpc	r23, r17
    2a32:	82 07       	cpc	r24, r18
    2a34:	93 07       	cpc	r25, r19
    2a36:	30 f0       	brcs	.+12     	; 0x2a44 <Ticker::update()+0xe6>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:87
			lastTime = micros();
    2a38:	13 da       	rcall	.-3034   	; 0x1e60 <micros>
    2a3a:	6b 8b       	std	Y+19, r22	; 0x13
    2a3c:	7c 8b       	std	Y+20, r23	; 0x14
    2a3e:	8d 8b       	std	Y+21, r24	; 0x15
    2a40:	9e 8b       	std	Y+22, r25	; 0x16
    2a42:	c8 cf       	rjmp	.-112    	; 0x29d4 <Ticker::update()+0x76>
update():
    2a44:	df 91       	pop	r29
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:73
	status = PAUSED;
	}

void Ticker::update() {
	if (tick()) callback();
	}
    2a46:	cf 91       	pop	r28
    2a48:	1f 91       	pop	r17
    2a4a:	0f 91       	pop	r16
    2a4c:	08 95       	ret

00002a4e <Ticker::start()>:
start():
    2a4e:	cf 93       	push	r28
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:40
	counts = 0;
	}

Ticker::~Ticker() {}

void Ticker::start() {
    2a50:	df 93       	push	r29
    2a52:	fc 01       	movw	r30, r24
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:41
	if (callback == NULL) return;
    2a54:	21 89       	ldd	r18, Z+17	; 0x11
    2a56:	32 89       	ldd	r19, Z+18	; 0x12
    2a58:	23 2b       	or	r18, r19
    2a5a:	f1 f0       	breq	.+60     	; 0x2a98 <Ticker::start()+0x4a>
    2a5c:	ec 01       	movw	r28, r24
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:42
	if (resolution == MILLIS) lastTime = millis();
    2a5e:	81 85       	ldd	r24, Z+9	; 0x09
    2a60:	92 85       	ldd	r25, Z+10	; 0x0a
    2a62:	01 97       	sbiw	r24, 0x01	; 1
    2a64:	e1 f4       	brne	.+56     	; 0x2a9e <Ticker::start()+0x50>
millis():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring.c:87
{
  unsigned long m;

  // disable interrupts while we read timer0_millis or we might get an
  // inconsistent value (e.g. in the middle of a write to timer_millis)
  uint8_t status = SREG;
    2a66:	2f b7       	in	r18, 0x3f	; 63
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring.c:88
  cli();
    2a68:	f8 94       	cli
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring.c:90

  m = timer_millis;
    2a6a:	80 91 b7 29 	lds	r24, 0x29B7	; 0x8029b7 <timer_millis>
    2a6e:	90 91 b8 29 	lds	r25, 0x29B8	; 0x8029b8 <timer_millis+0x1>
    2a72:	a0 91 b9 29 	lds	r26, 0x29B9	; 0x8029b9 <timer_millis+0x2>
    2a76:	b0 91 ba 29 	lds	r27, 0x29BA	; 0x8029ba <timer_millis+0x3>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring.c:92

  SREG = status;
    2a7a:	2f bf       	out	0x3f, r18	; 63
start():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:42
    2a7c:	83 8b       	std	Z+19, r24	; 0x13
    2a7e:	94 8b       	std	Z+20, r25	; 0x14
    2a80:	a5 8b       	std	Z+21, r26	; 0x15
    2a82:	b6 8b       	std	Z+22, r27	; 0x16
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:44
	else lastTime = micros();
	enabled = true;
    2a84:	81 e0       	ldi	r24, 0x01	; 1
    2a86:	88 83       	st	Y, r24
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:45
	counts = 0;
    2a88:	1b 86       	std	Y+11, r1	; 0x0b
    2a8a:	1c 86       	std	Y+12, r1	; 0x0c
    2a8c:	1d 86       	std	Y+13, r1	; 0x0d
    2a8e:	1e 86       	std	Y+14, r1	; 0x0e
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:46
	status = RUNNING;
    2a90:	81 e0       	ldi	r24, 0x01	; 1
    2a92:	90 e0       	ldi	r25, 0x00	; 0
    2a94:	8f 87       	std	Y+15, r24	; 0x0f
    2a96:	98 8b       	std	Y+16, r25	; 0x10
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:47
	}
    2a98:	df 91       	pop	r29
    2a9a:	cf 91       	pop	r28
    2a9c:	08 95       	ret
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:43
Ticker::~Ticker() {}

void Ticker::start() {
	if (callback == NULL) return;
	if (resolution == MILLIS) lastTime = millis();
	else lastTime = micros();
    2a9e:	e0 d9       	rcall	.-3136   	; 0x1e60 <micros>
    2aa0:	6b 8b       	std	Y+19, r22	; 0x13
    2aa2:	7c 8b       	std	Y+20, r23	; 0x14
    2aa4:	8d 8b       	std	Y+21, r24	; 0x15
    2aa6:	9e 8b       	std	Y+22, r25	; 0x16
    2aa8:	ed cf       	rjmp	.-38     	; 0x2a84 <Ticker::start()+0x36>

00002aaa <u8x8_gpio_call>:
u8x8_gpio_call():
    2aaa:	dc 01       	movw	r26, r24
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_gpio.c:42
#include "u8x8.h"


void u8x8_gpio_call(u8x8_t *u8x8, uint8_t msg, uint8_t arg)
{
  u8x8->gpio_and_delay_cb(u8x8, msg, arg, NULL);
    2aac:	1a 96       	adiw	r26, 0x0a	; 10
    2aae:	ed 91       	ld	r30, X+
    2ab0:	fc 91       	ld	r31, X
    2ab2:	30 e0       	ldi	r19, 0x00	; 0
    2ab4:	20 e0       	ldi	r18, 0x00	; 0
    2ab6:	09 94       	ijmp

00002ab8 <u8x8_byte_arduino_4wire_sw_spi>:
u8x8_byte_arduino_4wire_sw_spi():
    2ab8:	1f 93       	push	r17
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:401

#elif __AVR_ARCH__ == 4 || __AVR_ARCH__ == 5 || __AVR_ARCH__ == 51 || __AVR_ARCH__ == 6 || __AVR_ARCH__ == 103

/* this function completly replaces u8x8_byte_4wire_sw_spi*/
extern "C" uint8_t u8x8_byte_arduino_4wire_sw_spi(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
{
    2aba:	cf 93       	push	r28
    2abc:	df 93       	push	r29
    2abe:	ec 01       	movw	r28, r24
    2ac0:	a8 81       	ld	r26, Y
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:405
  uint8_t SREG_backup;
  uint8_t i, b;
  uint8_t *data;
  uint8_t takeover_edge = u8x8_GetSPIClockPhase(u8x8);
    2ac2:	b9 81       	ldd	r27, Y+1	; 0x01
    2ac4:	68 31       	cpi	r22, 0x18	; 24
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:422
  static uint8_t arduino_data_mask;
  static uint8_t arduino_data_n_mask;



  switch(msg)
    2ac6:	09 f4       	brne	.+2      	; 0x2aca <u8x8_byte_arduino_4wire_sw_spi+0x12>
    2ac8:	99 c0       	rjmp	.+306    	; 0x2bfc <u8x8_byte_arduino_4wire_sw_spi+0x144>
    2aca:	38 f4       	brcc	.+14     	; 0x2ada <u8x8_byte_arduino_4wire_sw_spi+0x22>
    2acc:	64 31       	cpi	r22, 0x14	; 20
    2ace:	09 f4       	brne	.+2      	; 0x2ad2 <u8x8_byte_arduino_4wire_sw_spi+0x1a>
    2ad0:	89 c0       	rjmp	.+274    	; 0x2be4 <u8x8_byte_arduino_4wire_sw_spi+0x12c>
    2ad2:	67 31       	cpi	r22, 0x17	; 23
    2ad4:	49 f0       	breq	.+18     	; 0x2ae8 <u8x8_byte_arduino_4wire_sw_spi+0x30>
    2ad6:	80 e0       	ldi	r24, 0x00	; 0
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:538
    case U8X8_MSG_BYTE_END_TRANSFER:
      u8x8->gpio_and_delay_cb(u8x8, U8X8_MSG_DELAY_NANO, u8x8->display_info->pre_chip_disable_wait_ns, NULL);
      u8x8_gpio_SetCS(u8x8, u8x8->display_info->chip_disable_level);
      break;
    default:
      return 0;
    2ad8:	0e c0       	rjmp	.+28     	; 0x2af6 <u8x8_byte_arduino_4wire_sw_spi+0x3e>
    2ada:	69 31       	cpi	r22, 0x19	; 25
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:422
  static uint8_t arduino_data_mask;
  static uint8_t arduino_data_n_mask;



  switch(msg)
    2adc:	09 f4       	brne	.+2      	; 0x2ae0 <u8x8_byte_arduino_4wire_sw_spi+0x28>
    2ade:	e3 c0       	rjmp	.+454    	; 0x2ca6 <u8x8_byte_arduino_4wire_sw_spi+0x1ee>
    2ae0:	60 32       	cpi	r22, 0x20	; 32
    2ae2:	c9 f7       	brne	.-14     	; 0x2ad6 <u8x8_byte_arduino_4wire_sw_spi+0x1e>
    2ae4:	6a e4       	ldi	r22, 0x4A	; 74
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:512
      
      /* for SPI: setup correct level of the clock signal */
      u8x8_gpio_SetSPIClock(u8x8, u8x8_GetSPIClockPhase(u8x8));
      break;
    case U8X8_MSG_BYTE_SET_DC:
      u8x8_gpio_SetDC(u8x8, arg_int);
    2ae6:	87 c0       	rjmp	.+270    	; 0x2bf6 <u8x8_byte_arduino_4wire_sw_spi+0x13e>
    2ae8:	1c 96       	adiw	r26, 0x0c	; 12
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:405
extern "C" uint8_t u8x8_byte_arduino_4wire_sw_spi(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
{
  uint8_t SREG_backup;
  uint8_t i, b;
  uint8_t *data;
  uint8_t takeover_edge = u8x8_GetSPIClockPhase(u8x8);
    2aea:	8c 91       	ld	r24, X
    2aec:	80 fd       	sbrc	r24, 0
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:427
  switch(msg)
  {
    case U8X8_MSG_BYTE_SEND:
    
      data = (uint8_t *)arg_ptr;      
      if ( takeover_edge == 0 )
    2aee:	3f c0       	rjmp	.+126    	; 0x2b6e <u8x8_byte_arduino_4wire_sw_spi+0xb6>
    2af0:	41 11       	cpse	r20, r1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:429
      {
	while( arg_int > 0 )
    2af2:	05 c0       	rjmp	.+10     	; 0x2afe <u8x8_byte_arduino_4wire_sw_spi+0x46>
    2af4:	81 e0       	ldi	r24, 0x01	; 1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:540
      u8x8_gpio_SetCS(u8x8, u8x8->display_info->chip_disable_level);
      break;
    default:
      return 0;
  }
  return 1;
    2af6:	df 91       	pop	r29
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:541
}
    2af8:	cf 91       	pop	r28
    2afa:	1f 91       	pop	r17
    2afc:	08 95       	ret
    2afe:	f9 01       	movw	r30, r18
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:431
      data = (uint8_t *)arg_ptr;      
      if ( takeover_edge == 0 )
      {
	while( arg_int > 0 )
	{
	  b = *data;
    2b00:	81 91       	ld	r24, Z+
    2b02:	9f 01       	movw	r18, r30
    2b04:	41 50       	subi	r20, 0x01	; 1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:433
	  data++;
	  arg_int--;
    2b06:	df b7       	in	r29, 0x3f	; 63
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:434
	  SREG_backup = SREG; cli();
    2b08:	f8 94       	cli
    2b0a:	a0 91 dc 28 	lds	r26, 0x28DC	; 0x8028dc <u8x8_byte_arduino_4wire_sw_spi::arduino_data_port>
    2b0e:	b0 91 dd 28 	lds	r27, 0x28DD	; 0x8028dd <u8x8_byte_arduino_4wire_sw_spi::arduino_data_port+0x1>
    2b12:	c0 91 db 28 	lds	r28, 0x28DB	; 0x8028db <u8x8_byte_arduino_4wire_sw_spi::arduino_data_n_mask>
    2b16:	e0 91 d9 28 	lds	r30, 0x28D9	; 0x8028d9 <u8x8_byte_arduino_4wire_sw_spi::arduino_clock_port>
    2b1a:	f0 91 da 28 	lds	r31, 0x28DA	; 0x8028da <u8x8_byte_arduino_4wire_sw_spi::arduino_clock_port+0x1>
    2b1e:	70 91 d8 28 	lds	r23, 0x28D8	; 0x8028d8 <u8x8_byte_arduino_4wire_sw_spi::arduino_clock_mask>
    2b22:	60 91 d7 28 	lds	r22, 0x28D7	; 0x8028d7 <u8x8_byte_arduino_4wire_sw_spi::arduino_clock_n_mask>
    2b26:	81 11       	cpse	r24, r1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:437
	  /* issue 156, check for speed */
#if F_CPU <= 17000000
	  if ( b == 0 )
    2b28:	0e c0       	rjmp	.+28     	; 0x2b46 <u8x8_byte_arduino_4wire_sw_spi+0x8e>
    2b2a:	8c 91       	ld	r24, X
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:439
	  {
	    *arduino_data_port &= arduino_data_n_mask;
    2b2c:	8c 23       	and	r24, r28
    2b2e:	8c 93       	st	X, r24
    2b30:	88 e0       	ldi	r24, 0x08	; 8
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:443
	    for( i = 0; i < 8; i++ )
	    {
	      *arduino_clock_port |= arduino_clock_mask;	    
	      *arduino_clock_port &= arduino_clock_n_mask;
    2b32:	90 81       	ld	r25, Z
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:442
	  if ( b == 0 )
	  {
	    *arduino_data_port &= arduino_data_n_mask;
	    for( i = 0; i < 8; i++ )
	    {
	      *arduino_clock_port |= arduino_clock_mask;	    
    2b34:	97 2b       	or	r25, r23
    2b36:	90 83       	st	Z, r25
    2b38:	90 81       	ld	r25, Z
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:443
	      *arduino_clock_port &= arduino_clock_n_mask;
    2b3a:	96 23       	and	r25, r22
    2b3c:	90 83       	st	Z, r25
    2b3e:	81 50       	subi	r24, 0x01	; 1
    2b40:	c1 f7       	brne	.-16     	; 0x2b32 <u8x8_byte_arduino_4wire_sw_spi+0x7a>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:440
	  /* issue 156, check for speed */
#if F_CPU <= 17000000
	  if ( b == 0 )
	  {
	    *arduino_data_port &= arduino_data_n_mask;
	    for( i = 0; i < 8; i++ )
    2b42:	df bf       	out	0x3f, r29	; 63
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:461
	      *arduino_clock_port |= arduino_clock_mask;	    
	      b <<= 1;
	      *arduino_clock_port &= arduino_clock_n_mask;
	    }
	  }
	  SREG = SREG_backup;
    2b44:	d5 cf       	rjmp	.-86     	; 0x2af0 <u8x8_byte_arduino_4wire_sw_spi+0x38>
    2b46:	10 91 d6 28 	lds	r17, 0x28D6	; 0x8028d6 <u8x8_byte_arduino_4wire_sw_spi::arduino_data_mask>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:452
#endif
	  {
	    for( i = 0; i < 8; i++ )
	    {
	      if ( b & 128 )
		*arduino_data_port |= arduino_data_mask;
    2b4a:	98 e0       	ldi	r25, 0x08	; 8
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:458
	      else
		*arduino_data_port &= arduino_data_n_mask;

	      *arduino_clock_port |= arduino_clock_mask;	    
	      b <<= 1;
	      *arduino_clock_port &= arduino_clock_n_mask;
    2b4c:	5c 91       	ld	r21, X
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:452
#endif
	  {
	    for( i = 0; i < 8; i++ )
	    {
	      if ( b & 128 )
		*arduino_data_port |= arduino_data_mask;
    2b4e:	87 ff       	sbrs	r24, 7
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:451
	  else
#endif
	  {
	    for( i = 0; i < 8; i++ )
	    {
	      if ( b & 128 )
    2b50:	0c c0       	rjmp	.+24     	; 0x2b6a <u8x8_byte_arduino_4wire_sw_spi+0xb2>
    2b52:	51 2b       	or	r21, r17
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:452
		*arduino_data_port |= arduino_data_mask;
    2b54:	5c 93       	st	X, r21
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:454
	      else
		*arduino_data_port &= arduino_data_n_mask;
    2b56:	50 81       	ld	r21, Z
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:456

	      *arduino_clock_port |= arduino_clock_mask;	    
    2b58:	57 2b       	or	r21, r23
    2b5a:	50 83       	st	Z, r21
    2b5c:	88 0f       	add	r24, r24
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:457
	      b <<= 1;
    2b5e:	50 81       	ld	r21, Z
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:458
	      *arduino_clock_port &= arduino_clock_n_mask;
    2b60:	56 23       	and	r21, r22
    2b62:	50 83       	st	Z, r21
    2b64:	91 50       	subi	r25, 0x01	; 1
    2b66:	91 f7       	brne	.-28     	; 0x2b4c <u8x8_byte_arduino_4wire_sw_spi+0x94>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:449
	    }
	  }
	  else
#endif
	  {
	    for( i = 0; i < 8; i++ )
    2b68:	ec cf       	rjmp	.-40     	; 0x2b42 <u8x8_byte_arduino_4wire_sw_spi+0x8a>
    2b6a:	5c 23       	and	r21, r28
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:454
	    {
	      if ( b & 128 )
		*arduino_data_port |= arduino_data_mask;
	      else
		*arduino_data_port &= arduino_data_n_mask;
    2b6c:	f3 cf       	rjmp	.-26     	; 0x2b54 <u8x8_byte_arduino_4wire_sw_spi+0x9c>
    2b6e:	44 23       	and	r20, r20
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:466
	  SREG = SREG_backup;
	}
      }
      else
      {
	while( arg_int > 0 )
    2b70:	09 f4       	brne	.+2      	; 0x2b74 <u8x8_byte_arduino_4wire_sw_spi+0xbc>
    2b72:	c0 cf       	rjmp	.-128    	; 0x2af4 <u8x8_byte_arduino_4wire_sw_spi+0x3c>
    2b74:	f9 01       	movw	r30, r18
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:468
	{
	  b = *data;
    2b76:	81 91       	ld	r24, Z+
    2b78:	9f 01       	movw	r18, r30
    2b7a:	41 50       	subi	r20, 0x01	; 1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:470
	  data++;
	  arg_int--;
    2b7c:	df b7       	in	r29, 0x3f	; 63
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:471
	  SREG_backup = SREG; cli();
    2b7e:	f8 94       	cli
    2b80:	a0 91 dc 28 	lds	r26, 0x28DC	; 0x8028dc <u8x8_byte_arduino_4wire_sw_spi::arduino_data_port>
    2b84:	b0 91 dd 28 	lds	r27, 0x28DD	; 0x8028dd <u8x8_byte_arduino_4wire_sw_spi::arduino_data_port+0x1>
    2b88:	c0 91 db 28 	lds	r28, 0x28DB	; 0x8028db <u8x8_byte_arduino_4wire_sw_spi::arduino_data_n_mask>
    2b8c:	e0 91 d9 28 	lds	r30, 0x28D9	; 0x8028d9 <u8x8_byte_arduino_4wire_sw_spi::arduino_clock_port>
    2b90:	f0 91 da 28 	lds	r31, 0x28DA	; 0x8028da <u8x8_byte_arduino_4wire_sw_spi::arduino_clock_port+0x1>
    2b94:	60 91 d8 28 	lds	r22, 0x28D8	; 0x8028d8 <u8x8_byte_arduino_4wire_sw_spi::arduino_clock_mask>
    2b98:	70 91 d7 28 	lds	r23, 0x28D7	; 0x8028d7 <u8x8_byte_arduino_4wire_sw_spi::arduino_clock_n_mask>
    2b9c:	81 11       	cpse	r24, r1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:474
	  /* issue 156, check for speed */
#if F_CPU <= 17000000
	  if ( b == 0 )
    2b9e:	0e c0       	rjmp	.+28     	; 0x2bbc <u8x8_byte_arduino_4wire_sw_spi+0x104>
    2ba0:	8c 91       	ld	r24, X
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:476
	  {
	    *arduino_data_port &= arduino_data_n_mask;
    2ba2:	8c 23       	and	r24, r28
    2ba4:	8c 93       	st	X, r24
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:480
	    for( i = 0; i < 8; i++ )
	    {
	      *arduino_clock_port &= arduino_clock_n_mask;
	      *arduino_clock_port |= arduino_clock_mask;	    
    2ba6:	88 e0       	ldi	r24, 0x08	; 8
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:479
	  if ( b == 0 )
	  {
	    *arduino_data_port &= arduino_data_n_mask;
	    for( i = 0; i < 8; i++ )
	    {
	      *arduino_clock_port &= arduino_clock_n_mask;
    2ba8:	90 81       	ld	r25, Z
    2baa:	97 23       	and	r25, r23
    2bac:	90 83       	st	Z, r25
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:480
	      *arduino_clock_port |= arduino_clock_mask;	    
    2bae:	90 81       	ld	r25, Z
    2bb0:	96 2b       	or	r25, r22
    2bb2:	90 83       	st	Z, r25
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:498
	      *arduino_clock_port &= arduino_clock_n_mask;
	      b <<= 1;
	      *arduino_clock_port |= arduino_clock_mask;	    
	    }
	  }
	  SREG = SREG_backup;
    2bb4:	81 50       	subi	r24, 0x01	; 1
    2bb6:	c1 f7       	brne	.-16     	; 0x2ba8 <u8x8_byte_arduino_4wire_sw_spi+0xf0>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:489
#endif
	  {
	    for( i = 0; i < 8; i++ )
	    {
	      if ( b & 128 )
		*arduino_data_port |= arduino_data_mask;
    2bb8:	df bf       	out	0x3f, r29	; 63
    2bba:	d9 cf       	rjmp	.-78     	; 0x2b6e <u8x8_byte_arduino_4wire_sw_spi+0xb6>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:495
	      else
		*arduino_data_port &= arduino_data_n_mask;

	      *arduino_clock_port &= arduino_clock_n_mask;
	      b <<= 1;
	      *arduino_clock_port |= arduino_clock_mask;	    
    2bbc:	10 91 d6 28 	lds	r17, 0x28D6	; 0x8028d6 <u8x8_byte_arduino_4wire_sw_spi::arduino_data_mask>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:488
	  else
#endif
	  {
	    for( i = 0; i < 8; i++ )
	    {
	      if ( b & 128 )
    2bc0:	98 e0       	ldi	r25, 0x08	; 8
    2bc2:	5c 91       	ld	r21, X
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:489
		*arduino_data_port |= arduino_data_mask;
    2bc4:	87 ff       	sbrs	r24, 7
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:491
	      else
		*arduino_data_port &= arduino_data_n_mask;
    2bc6:	0c c0       	rjmp	.+24     	; 0x2be0 <u8x8_byte_arduino_4wire_sw_spi+0x128>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:493

	      *arduino_clock_port &= arduino_clock_n_mask;
    2bc8:	51 2b       	or	r21, r17
    2bca:	5c 93       	st	X, r21
    2bcc:	50 81       	ld	r21, Z
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:494
	      b <<= 1;
    2bce:	57 23       	and	r21, r23
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:495
	      *arduino_clock_port |= arduino_clock_mask;	    
    2bd0:	50 83       	st	Z, r21
    2bd2:	88 0f       	add	r24, r24
    2bd4:	50 81       	ld	r21, Z
    2bd6:	56 2b       	or	r21, r22
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:486
	    }
	  }
	  else
#endif
	  {
	    for( i = 0; i < 8; i++ )
    2bd8:	50 83       	st	Z, r21
    2bda:	91 50       	subi	r25, 0x01	; 1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:491
	    {
	      if ( b & 128 )
		*arduino_data_port |= arduino_data_mask;
	      else
		*arduino_data_port &= arduino_data_n_mask;
    2bdc:	91 f7       	brne	.-28     	; 0x2bc2 <u8x8_byte_arduino_4wire_sw_spi+0x10a>
    2bde:	ec cf       	rjmp	.-40     	; 0x2bb8 <u8x8_byte_arduino_4wire_sw_spi+0x100>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:505
      }      
      break;
      
    case U8X8_MSG_BYTE_INIT:
      /* disable chipselect */
      u8x8_gpio_SetCS(u8x8, u8x8->display_info->chip_disable_level);
    2be0:	5c 23       	and	r21, r28
    2be2:	f3 cf       	rjmp	.-26     	; 0x2bca <u8x8_byte_arduino_4wire_sw_spi+0x112>
    2be4:	11 96       	adiw	r26, 0x01	; 1
    2be6:	4c 91       	ld	r20, X
    2be8:	69 e4       	ldi	r22, 0x49	; 73
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:509
      /* no wait required here */
      
      /* for SPI: setup correct level of the clock signal */
      u8x8_gpio_SetSPIClock(u8x8, u8x8_GetSPIClockPhase(u8x8));
    2bea:	5f df       	rcall	.-322    	; 0x2aaa <u8x8_gpio_call>
    2bec:	e8 81       	ld	r30, Y
    2bee:	f9 81       	ldd	r31, Y+1	; 0x01
    2bf0:	44 85       	ldd	r20, Z+12	; 0x0c
    2bf2:	41 70       	andi	r20, 0x01	; 1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:535
      arduino_data_n_mask = ~arduino_data_mask;
      
      break;
    case U8X8_MSG_BYTE_END_TRANSFER:
      u8x8->gpio_and_delay_cb(u8x8, U8X8_MSG_DELAY_NANO, u8x8->display_info->pre_chip_disable_wait_ns, NULL);
      u8x8_gpio_SetCS(u8x8, u8x8->display_info->chip_disable_level);
    2bf4:	60 e4       	ldi	r22, 0x40	; 64
    2bf6:	ce 01       	movw	r24, r28
    2bf8:	58 df       	rcall	.-336    	; 0x2aaa <u8x8_gpio_call>
    2bfa:	7c cf       	rjmp	.-264    	; 0x2af4 <u8x8_byte_arduino_4wire_sw_spi+0x3c>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:515
      break;
    case U8X8_MSG_BYTE_SET_DC:
      u8x8_gpio_SetDC(u8x8, arg_int);
      break;
    case U8X8_MSG_BYTE_START_TRANSFER:
      u8x8_gpio_SetCS(u8x8, u8x8->display_info->chip_enable_level);  
    2bfc:	4c 91       	ld	r20, X
    2bfe:	69 e4       	ldi	r22, 0x49	; 73
    2c00:	54 df       	rcall	.-344    	; 0x2aaa <u8x8_gpio_call>
    2c02:	a8 81       	ld	r26, Y
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:516
      u8x8->gpio_and_delay_cb(u8x8, U8X8_MSG_DELAY_NANO, u8x8->display_info->post_chip_enable_wait_ns, NULL);
    2c04:	b9 81       	ldd	r27, Y+1	; 0x01
    2c06:	ea 85       	ldd	r30, Y+10	; 0x0a
    2c08:	fb 85       	ldd	r31, Y+11	; 0x0b
    2c0a:	30 e0       	ldi	r19, 0x00	; 0
    2c0c:	20 e0       	ldi	r18, 0x00	; 0
    2c0e:	12 96       	adiw	r26, 0x02	; 2
    2c10:	4c 91       	ld	r20, X
    2c12:	6c e2       	ldi	r22, 0x2C	; 44
    2c14:	ce 01       	movw	r24, r28
    2c16:	09 95       	icall
    2c18:	ee 8d       	ldd	r30, Y+30	; 0x1e
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:520

      /* there is no consistency checking for u8x8->pins[U8X8_PIN_SPI_CLOCK] */
    
      arduino_clock_port = portOutputRegister(digitalPinToPort(u8x8->pins[U8X8_PIN_SPI_CLOCK]));
    2c1a:	eb 31       	cpi	r30, 0x1B	; 27
    2c1c:	f0 f5       	brcc	.+124    	; 0x2c9a <u8x8_byte_arduino_4wire_sw_spi+0x1e2>
    2c1e:	ae 2f       	mov	r26, r30
    2c20:	b0 e0       	ldi	r27, 0x00	; 0
    2c22:	a1 54       	subi	r26, 0x41	; 65
    2c24:	b7 44       	sbci	r27, 0x47	; 71
    2c26:	8c 91       	ld	r24, X
    2c28:	86 30       	cpi	r24, 0x06	; 6
    2c2a:	b8 f5       	brcc	.+110    	; 0x2c9a <u8x8_byte_arduino_4wire_sw_spi+0x1e2>
    2c2c:	f0 e2       	ldi	r31, 0x20	; 32
    2c2e:	8f 9f       	mul	r24, r31
    2c30:	c0 01       	movw	r24, r0
    2c32:	11 24       	eor	r1, r1
    2c34:	9c 5f       	subi	r25, 0xFC	; 252
    2c36:	04 96       	adiw	r24, 0x04	; 4
    2c38:	80 93 d9 28 	sts	0x28D9, r24	; 0x8028d9 <u8x8_byte_arduino_4wire_sw_spi::arduino_clock_port>
    2c3c:	90 93 da 28 	sts	0x28DA, r25	; 0x8028da <u8x8_byte_arduino_4wire_sw_spi::arduino_clock_port+0x1>
    2c40:	8f ef       	ldi	r24, 0xFF	; 255
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:521
      arduino_clock_mask = digitalPinToBitMask(u8x8->pins[U8X8_PIN_SPI_CLOCK]);
    2c42:	eb 31       	cpi	r30, 0x1B	; 27
    2c44:	20 f4       	brcc	.+8      	; 0x2c4e <u8x8_byte_arduino_4wire_sw_spi+0x196>
    2c46:	f0 e0       	ldi	r31, 0x00	; 0
    2c48:	e6 52       	subi	r30, 0x26	; 38
    2c4a:	f7 44       	sbci	r31, 0x47	; 71
    2c4c:	80 81       	ld	r24, Z
    2c4e:	80 93 d8 28 	sts	0x28D8, r24	; 0x8028d8 <u8x8_byte_arduino_4wire_sw_spi::arduino_clock_mask>
    2c52:	80 95       	com	r24
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:522
      arduino_clock_n_mask = ~arduino_clock_mask;
    2c54:	80 93 d7 28 	sts	0x28D7, r24	; 0x8028d7 <u8x8_byte_arduino_4wire_sw_spi::arduino_clock_n_mask>
    2c58:	ef 8d       	ldd	r30, Y+31	; 0x1f
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:528
    
      

      /* there is no consistency checking for u8x8->pins[U8X8_PIN_SPI_DATA] */

      arduino_data_port = portOutputRegister(digitalPinToPort(u8x8->pins[U8X8_PIN_SPI_DATA]));
    2c5a:	eb 31       	cpi	r30, 0x1B	; 27
    2c5c:	08 f5       	brcc	.+66     	; 0x2ca0 <u8x8_byte_arduino_4wire_sw_spi+0x1e8>
    2c5e:	ae 2f       	mov	r26, r30
    2c60:	b0 e0       	ldi	r27, 0x00	; 0
    2c62:	a1 54       	subi	r26, 0x41	; 65
    2c64:	b7 44       	sbci	r27, 0x47	; 71
    2c66:	8c 91       	ld	r24, X
    2c68:	86 30       	cpi	r24, 0x06	; 6
    2c6a:	d0 f4       	brcc	.+52     	; 0x2ca0 <u8x8_byte_arduino_4wire_sw_spi+0x1e8>
    2c6c:	20 e2       	ldi	r18, 0x20	; 32
    2c6e:	82 9f       	mul	r24, r18
    2c70:	c0 01       	movw	r24, r0
    2c72:	11 24       	eor	r1, r1
    2c74:	9c 5f       	subi	r25, 0xFC	; 252
    2c76:	04 96       	adiw	r24, 0x04	; 4
    2c78:	80 93 dc 28 	sts	0x28DC, r24	; 0x8028dc <u8x8_byte_arduino_4wire_sw_spi::arduino_data_port>
    2c7c:	90 93 dd 28 	sts	0x28DD, r25	; 0x8028dd <u8x8_byte_arduino_4wire_sw_spi::arduino_data_port+0x1>
    2c80:	8f ef       	ldi	r24, 0xFF	; 255
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:529
      arduino_data_mask = digitalPinToBitMask(u8x8->pins[U8X8_PIN_SPI_DATA]);
    2c82:	eb 31       	cpi	r30, 0x1B	; 27
    2c84:	20 f4       	brcc	.+8      	; 0x2c8e <u8x8_byte_arduino_4wire_sw_spi+0x1d6>
    2c86:	f0 e0       	ldi	r31, 0x00	; 0
    2c88:	e6 52       	subi	r30, 0x26	; 38
    2c8a:	f7 44       	sbci	r31, 0x47	; 71
    2c8c:	80 81       	ld	r24, Z
    2c8e:	80 93 d6 28 	sts	0x28D6, r24	; 0x8028d6 <u8x8_byte_arduino_4wire_sw_spi::arduino_data_mask>
    2c92:	80 95       	com	r24
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:530
      arduino_data_n_mask = ~arduino_data_mask;
    2c94:	80 93 db 28 	sts	0x28DB, r24	; 0x8028db <u8x8_byte_arduino_4wire_sw_spi::arduino_data_n_mask>
    2c98:	2d cf       	rjmp	.-422    	; 0x2af4 <u8x8_byte_arduino_4wire_sw_spi+0x3c>
    2c9a:	90 e0       	ldi	r25, 0x00	; 0
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:520
      u8x8_gpio_SetCS(u8x8, u8x8->display_info->chip_enable_level);  
      u8x8->gpio_and_delay_cb(u8x8, U8X8_MSG_DELAY_NANO, u8x8->display_info->post_chip_enable_wait_ns, NULL);

      /* there is no consistency checking for u8x8->pins[U8X8_PIN_SPI_CLOCK] */
    
      arduino_clock_port = portOutputRegister(digitalPinToPort(u8x8->pins[U8X8_PIN_SPI_CLOCK]));
    2c9c:	80 e0       	ldi	r24, 0x00	; 0
    2c9e:	cb cf       	rjmp	.-106    	; 0x2c36 <u8x8_byte_arduino_4wire_sw_spi+0x17e>
    2ca0:	90 e0       	ldi	r25, 0x00	; 0
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:528
    
      

      /* there is no consistency checking for u8x8->pins[U8X8_PIN_SPI_DATA] */

      arduino_data_port = portOutputRegister(digitalPinToPort(u8x8->pins[U8X8_PIN_SPI_DATA]));
    2ca2:	80 e0       	ldi	r24, 0x00	; 0
    2ca4:	e8 cf       	rjmp	.-48     	; 0x2c76 <u8x8_byte_arduino_4wire_sw_spi+0x1be>
    2ca6:	ea 85       	ldd	r30, Y+10	; 0x0a
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:534
      arduino_data_mask = digitalPinToBitMask(u8x8->pins[U8X8_PIN_SPI_DATA]);
      arduino_data_n_mask = ~arduino_data_mask;
      
      break;
    case U8X8_MSG_BYTE_END_TRANSFER:
      u8x8->gpio_and_delay_cb(u8x8, U8X8_MSG_DELAY_NANO, u8x8->display_info->pre_chip_disable_wait_ns, NULL);
    2ca8:	fb 85       	ldd	r31, Y+11	; 0x0b
    2caa:	30 e0       	ldi	r19, 0x00	; 0
    2cac:	20 e0       	ldi	r18, 0x00	; 0
    2cae:	13 96       	adiw	r26, 0x03	; 3
    2cb0:	4c 91       	ld	r20, X
    2cb2:	6c e2       	ldi	r22, 0x2C	; 44
    2cb4:	09 95       	icall
    2cb6:	e8 81       	ld	r30, Y
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:535
      u8x8_gpio_SetCS(u8x8, u8x8->display_info->chip_disable_level);
    2cb8:	f9 81       	ldd	r31, Y+1	; 0x01
    2cba:	41 81       	ldd	r20, Z+1	; 0x01
    2cbc:	69 e4       	ldi	r22, 0x49	; 73
    2cbe:	9b cf       	rjmp	.-202    	; 0x2bf6 <u8x8_byte_arduino_4wire_sw_spi+0x13e>

00002cc0 <u8x8_RefreshDisplay>:
u8x8_RefreshDisplay():
    2cc0:	dc 01       	movw	r26, r24
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_display.c:158
  u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_SET_CONTRAST, value, NULL);  
}

void u8x8_RefreshDisplay(u8x8_t *u8x8)
{
  u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_REFRESH, 0, NULL);  
    2cc2:	14 96       	adiw	r26, 0x04	; 4
    2cc4:	ed 91       	ld	r30, X+
    2cc6:	fc 91       	ld	r31, X
    2cc8:	30 e0       	ldi	r19, 0x00	; 0
    2cca:	20 e0       	ldi	r18, 0x00	; 0
    2ccc:	40 e0       	ldi	r20, 0x00	; 0
    2cce:	60 e1       	ldi	r22, 0x10	; 16
    2cd0:	09 94       	ijmp

00002cd2 <u8x8_cad_EndTransfer>:
u8x8_cad_EndTransfer():
    2cd2:	dc 01       	movw	r26, r24
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_cad.c:120
  return u8x8->cad_cb(u8x8, U8X8_MSG_CAD_START_TRANSFER, 0, NULL);
}

uint8_t u8x8_cad_EndTransfer(u8x8_t *u8x8)
{
  return u8x8->cad_cb(u8x8, U8X8_MSG_CAD_END_TRANSFER, 0, NULL);
    2cd4:	16 96       	adiw	r26, 0x06	; 6
    2cd6:	ed 91       	ld	r30, X+
    2cd8:	fc 91       	ld	r31, X
    2cda:	30 e0       	ldi	r19, 0x00	; 0
    2cdc:	20 e0       	ldi	r18, 0x00	; 0
    2cde:	40 e0       	ldi	r20, 0x00	; 0
    2ce0:	69 e1       	ldi	r22, 0x19	; 25
    2ce2:	09 94       	ijmp

00002ce4 <u8x8_cad_StartTransfer>:
u8x8_cad_StartTransfer():
    2ce4:	dc 01       	movw	r26, r24
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_cad.c:115
  return u8x8->cad_cb(u8x8, U8X8_MSG_CAD_SEND_DATA, cnt, data);
}

uint8_t u8x8_cad_StartTransfer(u8x8_t *u8x8)
{
  return u8x8->cad_cb(u8x8, U8X8_MSG_CAD_START_TRANSFER, 0, NULL);
    2ce6:	16 96       	adiw	r26, 0x06	; 6
    2ce8:	ed 91       	ld	r30, X+
    2cea:	fc 91       	ld	r31, X
    2cec:	30 e0       	ldi	r19, 0x00	; 0
    2cee:	20 e0       	ldi	r18, 0x00	; 0
    2cf0:	40 e0       	ldi	r20, 0x00	; 0
    2cf2:	68 e1       	ldi	r22, 0x18	; 24
    2cf4:	09 94       	ijmp

00002cf6 <u8x8_cad_SendData>:
u8x8_cad_SendData():
    2cf6:	9a 01       	movw	r18, r20
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_cad.c:109
  }
  return 1;
}

uint8_t u8x8_cad_SendData(u8x8_t *u8x8, uint8_t cnt, uint8_t *data)
{
    2cf8:	dc 01       	movw	r26, r24
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_cad.c:110
  return u8x8->cad_cb(u8x8, U8X8_MSG_CAD_SEND_DATA, cnt, data);
    2cfa:	16 96       	adiw	r26, 0x06	; 6
    2cfc:	ed 91       	ld	r30, X+
    2cfe:	fc 91       	ld	r31, X
    2d00:	46 2f       	mov	r20, r22
    2d02:	67 e1       	ldi	r22, 0x17	; 23
    2d04:	09 94       	ijmp

00002d06 <u8x8_cad_SendSequence>:
u8x8_cad_SendSequence():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_cad.c:160
  254 milli	delay by milliseconds
  255		end of sequence
*/

void u8x8_cad_SendSequence(u8x8_t *u8x8, uint8_t const *data)
{
    2d06:	ef 92       	push	r14
    2d08:	ff 92       	push	r15
    2d0a:	0f 93       	push	r16
    2d0c:	1f 93       	push	r17
    2d0e:	cf 93       	push	r28
    2d10:	df 93       	push	r29
    2d12:	1f 92       	push	r1
    2d14:	cd b7       	in	r28, 0x3d	; 61
    2d16:	de b7       	in	r29, 0x3e	; 62
    2d18:	7c 01       	movw	r14, r24
    2d1a:	8b 01       	movw	r16, r22
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_cad.c:166
  uint8_t cmd;
  uint8_t v;

  for(;;)
  {
    cmd = *data;
    2d1c:	d8 01       	movw	r26, r16
    2d1e:	6c 91       	ld	r22, X
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_cad.c:168
    data++;
    switch( cmd )
    2d20:	67 31       	cpi	r22, 0x17	; 23
    2d22:	21 f1       	breq	.+72     	; 0x2d6c <u8x8_cad_SendSequence+0x66>
    2d24:	50 f4       	brcc	.+20     	; 0x2d3a <u8x8_cad_SendSequence+0x34>
    2d26:	65 31       	cpi	r22, 0x15	; 21
    2d28:	98 f4       	brcc	.+38     	; 0x2d50 <u8x8_cad_SendSequence+0x4a>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_cad.c:194
	  break;
      default:
	return;
    }
  }
}
    2d2a:	0f 90       	pop	r0
    2d2c:	df 91       	pop	r29
    2d2e:	cf 91       	pop	r28
    2d30:	1f 91       	pop	r17
    2d32:	0f 91       	pop	r16
    2d34:	ff 90       	pop	r15
    2d36:	ef 90       	pop	r14
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_cad.c:168

  for(;;)
  {
    cmd = *data;
    data++;
    switch( cmd )
    2d38:	08 95       	ret
    2d3a:	6a 31       	cpi	r22, 0x1A	; 26
    2d3c:	08 f1       	brcs	.+66     	; 0x2d80 <u8x8_cad_SendSequence+0x7a>
    2d3e:	6e 3f       	cpi	r22, 0xFE	; 254
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_cad.c:186
      case U8X8_MSG_CAD_START_TRANSFER:
      case U8X8_MSG_CAD_END_TRANSFER:
	  u8x8->cad_cb(u8x8, cmd, 0, NULL);
	  break;
      case 0x0fe:
	  v = *data;
    2d40:	a1 f7       	brne	.-24     	; 0x2d2a <u8x8_cad_SendSequence+0x24>
    2d42:	f8 01       	movw	r30, r16
    2d44:	41 81       	ldd	r20, Z+1	; 0x01
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_cad.c:187
	  u8x8_gpio_Delay(u8x8, U8X8_MSG_DELAY_MILLI, v);	    
    2d46:	49 83       	std	Y+1, r20	; 0x01
    2d48:	69 e2       	ldi	r22, 0x29	; 41
    2d4a:	c7 01       	movw	r24, r14
    2d4c:	ae de       	rcall	.-676    	; 0x2aaa <u8x8_gpio_call>
    2d4e:	0b c0       	rjmp	.+22     	; 0x2d66 <u8x8_cad_SendSequence+0x60>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_cad.c:172
    data++;
    switch( cmd )
    {
      case U8X8_MSG_CAD_SEND_CMD:
      case U8X8_MSG_CAD_SEND_ARG:
	  v = *data;
    2d50:	f8 01       	movw	r30, r16
    2d52:	41 81       	ldd	r20, Z+1	; 0x01
    2d54:	49 83       	std	Y+1, r20	; 0x01
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_cad.c:173
	  u8x8->cad_cb(u8x8, cmd, v, NULL);
    2d56:	d7 01       	movw	r26, r14
    2d58:	16 96       	adiw	r26, 0x06	; 6
    2d5a:	ed 91       	ld	r30, X+
    2d5c:	fc 91       	ld	r31, X
    2d5e:	30 e0       	ldi	r19, 0x00	; 0
    2d60:	20 e0       	ldi	r18, 0x00	; 0
    2d62:	c7 01       	movw	r24, r14
    2d64:	09 95       	icall
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_cad.c:188
	  u8x8->cad_cb(u8x8, cmd, 0, NULL);
	  break;
      case 0x0fe:
	  v = *data;
	  u8x8_gpio_Delay(u8x8, U8X8_MSG_DELAY_MILLI, v);	    
	  data++;
    2d66:	0e 5f       	subi	r16, 0xFE	; 254
    2d68:	1f 4f       	sbci	r17, 0xFF	; 255
    2d6a:	d8 cf       	rjmp	.-80     	; 0x2d1c <u8x8_cad_SendSequence+0x16>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_cad.c:177
	  v = *data;
	  u8x8->cad_cb(u8x8, cmd, v, NULL);
	  data++;
	  break;
      case U8X8_MSG_CAD_SEND_DATA:
	  v = *data;
    2d6c:	f8 01       	movw	r30, r16
    2d6e:	81 81       	ldd	r24, Z+1	; 0x01
    2d70:	89 83       	std	Y+1, r24	; 0x01
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_cad.c:178
	  u8x8_cad_SendData(u8x8, 1, &v);
    2d72:	ae 01       	movw	r20, r28
    2d74:	4f 5f       	subi	r20, 0xFF	; 255
    2d76:	5f 4f       	sbci	r21, 0xFF	; 255
    2d78:	61 e0       	ldi	r22, 0x01	; 1
    2d7a:	c7 01       	movw	r24, r14
    2d7c:	bc df       	rcall	.-136    	; 0x2cf6 <u8x8_cad_SendData>
    2d7e:	f3 cf       	rjmp	.-26     	; 0x2d66 <u8x8_cad_SendSequence+0x60>
    2d80:	0f 5f       	subi	r16, 0xFF	; 255
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_cad.c:167
  uint8_t v;

  for(;;)
  {
    cmd = *data;
    data++;
    2d82:	1f 4f       	sbci	r17, 0xFF	; 255
    2d84:	d7 01       	movw	r26, r14
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_cad.c:183
	  u8x8_cad_SendData(u8x8, 1, &v);
	  data++;
	  break;
      case U8X8_MSG_CAD_START_TRANSFER:
      case U8X8_MSG_CAD_END_TRANSFER:
	  u8x8->cad_cb(u8x8, cmd, 0, NULL);
    2d86:	16 96       	adiw	r26, 0x06	; 6
    2d88:	ed 91       	ld	r30, X+
    2d8a:	fc 91       	ld	r31, X
    2d8c:	30 e0       	ldi	r19, 0x00	; 0
    2d8e:	20 e0       	ldi	r18, 0x00	; 0
    2d90:	40 e0       	ldi	r20, 0x00	; 0
    2d92:	c7 01       	movw	r24, r14
    2d94:	09 95       	icall
    2d96:	c2 cf       	rjmp	.-124    	; 0x2d1c <u8x8_cad_SendSequence+0x16>

00002d98 <u8x8_cad_SendArg>:
u8x8_cad_SendArg():
    2d98:	46 2f       	mov	r20, r22
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_cad.c:94
{
  return u8x8->cad_cb(u8x8, U8X8_MSG_CAD_SEND_CMD, cmd, NULL);
}

uint8_t u8x8_cad_SendArg(u8x8_t *u8x8, uint8_t arg)
{
    2d9a:	dc 01       	movw	r26, r24
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_cad.c:95
  return u8x8->cad_cb(u8x8, U8X8_MSG_CAD_SEND_ARG, arg, NULL);
    2d9c:	16 96       	adiw	r26, 0x06	; 6
    2d9e:	ed 91       	ld	r30, X+
    2da0:	fc 91       	ld	r31, X
    2da2:	30 e0       	ldi	r19, 0x00	; 0
    2da4:	20 e0       	ldi	r18, 0x00	; 0
    2da6:	66 e1       	ldi	r22, 0x16	; 22
    2da8:	09 94       	ijmp

00002daa <u8x8_cad_SendCmd>:
u8x8_cad_SendCmd():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_cad.c:89
*/

#include "u8x8.h"

uint8_t u8x8_cad_SendCmd(u8x8_t *u8x8, uint8_t cmd)
{
    2daa:	46 2f       	mov	r20, r22
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_cad.c:90
  return u8x8->cad_cb(u8x8, U8X8_MSG_CAD_SEND_CMD, cmd, NULL);
    2dac:	dc 01       	movw	r26, r24
    2dae:	16 96       	adiw	r26, 0x06	; 6
    2db0:	ed 91       	ld	r30, X+
    2db2:	fc 91       	ld	r31, X
    2db4:	30 e0       	ldi	r19, 0x00	; 0
    2db6:	20 e0       	ldi	r18, 0x00	; 0
    2db8:	65 e1       	ldi	r22, 0x15	; 21
    2dba:	09 94       	ijmp

00002dbc <u8x8_d_ssd1309_128x64_noname2>:
u8x8_d_ssd1309_128x64_noname2():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_d_ssd1309.c:196
  U8X8_END()             			/* end of sequence */
};


uint8_t u8x8_d_ssd1309_128x64_noname2(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
{
    2dbc:	ef 92       	push	r14
    2dbe:	ff 92       	push	r15
    2dc0:	0f 93       	push	r16
    2dc2:	1f 93       	push	r17
    2dc4:	cf 93       	push	r28
    2dc6:	df 93       	push	r29
    2dc8:	ec 01       	movw	r28, r24
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_d_ssd1309.c:78

static uint8_t u8x8_d_ssd1309_generic(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
{
  uint8_t x, c;
  uint8_t *ptr;
  switch(msg)
    2dca:	04 2f       	mov	r16, r20
    2dcc:	79 01       	movw	r14, r18
u8x8_d_ssd1309_generic():
    2dce:	6e 30       	cpi	r22, 0x0E	; 14
    2dd0:	09 f4       	brne	.+2      	; 0x2dd4 <u8x8_d_ssd1309_128x64_noname2+0x18>
    2dd2:	49 c0       	rjmp	.+146    	; 0x2e66 <u8x8_d_ssd1309_128x64_noname2+0xaa>
    2dd4:	6f 30       	cpi	r22, 0x0F	; 15
    2dd6:	91 f0       	breq	.+36     	; 0x2dfc <u8x8_d_ssd1309_128x64_noname2+0x40>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_d_ssd1309.c:201
{
    
  if ( u8x8_d_ssd1309_generic(u8x8, msg, arg_int, arg_ptr) != 0 )
    return 1;
  
  switch(msg)
    2dd8:	6b 30       	cpi	r22, 0x0B	; 11
    2dda:	09 f4       	brne	.+2      	; 0x2dde <u8x8_d_ssd1309_128x64_noname2+0x22>
    2ddc:	3b c0       	rjmp	.+118    	; 0x2e54 <u8x8_d_ssd1309_128x64_noname2+0x98>
u8x8_d_ssd1309_128x64_noname2():
    2dde:	6a 30       	cpi	r22, 0x0A	; 10
    2de0:	09 f4       	brne	.+2      	; 0x2de4 <u8x8_d_ssd1309_128x64_noname2+0x28>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_d_ssd1309.c:223
      break;
    case U8X8_MSG_DISPLAY_SETUP_MEMORY:
      u8x8_d_helper_display_setup_memory(u8x8, &u8x8_ssd1309_128x64_noname2_display_info);
      break;
    default:
      return 0;
    2de2:	5a c0       	rjmp	.+180    	; 0x2e98 <u8x8_d_ssd1309_128x64_noname2+0xdc>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_d_ssd1309.c:201
{
    
  if ( u8x8_d_ssd1309_generic(u8x8, msg, arg_int, arg_ptr) != 0 )
    return 1;
  
  switch(msg)
    2de4:	6d 30       	cpi	r22, 0x0D	; 13
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_display.c:55
  
*/
void u8x8_d_helper_display_setup_memory(u8x8_t *u8x8, const u8x8_display_info_t *display_info)
{
      /* 1) set display info struct */
      u8x8->display_info = display_info;
    2de6:	09 f4       	brne	.+2      	; 0x2dea <u8x8_d_ssd1309_128x64_noname2+0x2e>
    2de8:	46 c0       	rjmp	.+140    	; 0x2e76 <u8x8_d_ssd1309_128x64_noname2+0xba>
    2dea:	80 e0       	ldi	r24, 0x00	; 0
    2dec:	69 30       	cpi	r22, 0x09	; 9
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_display.c:56
      u8x8->x_offset = u8x8->display_info->default_x_offset;
    2dee:	59 f5       	brne	.+86     	; 0x2e46 <u8x8_d_ssd1309_128x64_noname2+0x8a>
u8x8_d_helper_display_setup_memory():
    2df0:	87 ee       	ldi	r24, 0xE7	; 231
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_d_ssd1309.c:81
  uint8_t x, c;
  uint8_t *ptr;
  switch(msg)
  {
    case U8X8_MSG_DISPLAY_DRAW_TILE:
      u8x8_cad_StartTransfer(u8x8);
    2df2:	97 eb       	ldi	r25, 0xB7	; 183
    2df4:	88 83       	st	Y, r24
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_d_ssd1309.c:82
      x = ((u8x8_tile_t *)arg_ptr)->x_pos;    
    2df6:	99 83       	std	Y+1, r25	; 0x01
    2df8:	82 e0       	ldi	r24, 0x02	; 2
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_d_ssd1309.c:83
      x *= 8;
    2dfa:	45 c0       	rjmp	.+138    	; 0x2e86 <u8x8_d_ssd1309_128x64_noname2+0xca>
u8x8_d_ssd1309_generic():
    2dfc:	73 df       	rcall	.-282    	; 0x2ce4 <u8x8_cad_StartTransfer>
    2dfe:	f7 01       	movw	r30, r14
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_d_ssd1309.c:84
      x += u8x8->x_offset;
    2e00:	13 81       	ldd	r17, Z+3	; 0x03
    2e02:	11 0f       	add	r17, r17
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_d_ssd1309.c:86
    
      u8x8_cad_SendCmd(u8x8, 0x010 | (x>>4) );
    2e04:	11 0f       	add	r17, r17
    2e06:	11 0f       	add	r17, r17
    2e08:	6c 89       	ldd	r22, Y+20	; 0x14
    2e0a:	16 0f       	add	r17, r22
    2e0c:	61 2f       	mov	r22, r17
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_d_ssd1309.c:87
      u8x8_cad_SendCmd(u8x8, 0x000 | ((x&15)));
    2e0e:	62 95       	swap	r22
    2e10:	6f 70       	andi	r22, 0x0F	; 15
    2e12:	60 61       	ori	r22, 0x10	; 16
    2e14:	ce 01       	movw	r24, r28
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_d_ssd1309.c:88
      u8x8_cad_SendCmd(u8x8, 0x0b0 | (((u8x8_tile_t *)arg_ptr)->y_pos)   );
    2e16:	c9 df       	rcall	.-110    	; 0x2daa <u8x8_cad_SendCmd>
    2e18:	61 2f       	mov	r22, r17
    2e1a:	6f 70       	andi	r22, 0x0F	; 15
    2e1c:	ce 01       	movw	r24, r28
    2e1e:	c5 df       	rcall	.-118    	; 0x2daa <u8x8_cad_SendCmd>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_d_ssd1309.c:95
    
      do
      {
	c = ((u8x8_tile_t *)arg_ptr)->cnt;
	ptr = ((u8x8_tile_t *)arg_ptr)->tile_ptr;
	u8x8_cad_SendData(u8x8, c*8, ptr); 	/* note: SendData can not handle more than 255 bytes */
    2e20:	f7 01       	movw	r30, r14
    2e22:	64 81       	ldd	r22, Z+4	; 0x04
    2e24:	60 6b       	ori	r22, 0xB0	; 176
    2e26:	ce 01       	movw	r24, r28
    2e28:	c0 df       	rcall	.-128    	; 0x2daa <u8x8_cad_SendCmd>
    2e2a:	f7 01       	movw	r30, r14
    2e2c:	40 81       	ld	r20, Z
    2e2e:	51 81       	ldd	r21, Z+1	; 0x01
    2e30:	62 81       	ldd	r22, Z+2	; 0x02
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_d_ssd1309.c:104
	  u8x8_cad_SendData(u8x8, 8, ptr);
	  ptr += 8;
	  c--;
	} while( c > 0 );
	*/
	arg_int--;
    2e32:	66 0f       	add	r22, r22
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_d_ssd1309.c:105
      } while( arg_int > 0 );
    2e34:	66 0f       	add	r22, r22
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_d_ssd1309.c:120
#ifdef U8X8_WITH_SET_CONTRAST
    case U8X8_MSG_DISPLAY_SET_CONTRAST:
      u8x8_cad_StartTransfer(u8x8);
      u8x8_cad_SendCmd(u8x8, 0x081 );
      u8x8_cad_SendArg(u8x8, arg_int );	/* ssd1309 has range from 0 to 255 */
      u8x8_cad_EndTransfer(u8x8);
    2e36:	66 0f       	add	r22, r22
    2e38:	ce 01       	movw	r24, r28
    2e3a:	5d df       	rcall	.-326    	; 0x2cf6 <u8x8_cad_SendData>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_d_ssd1309.c:225
      u8x8_d_helper_display_setup_memory(u8x8, &u8x8_ssd1309_128x64_noname2_display_info);
      break;
    default:
      return 0;
  }
  return 1;
    2e3c:	01 50       	subi	r16, 0x01	; 1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_d_ssd1309.c:226
}
    2e3e:	a9 f7       	brne	.-22     	; 0x2e2a <u8x8_d_ssd1309_128x64_noname2+0x6e>
    2e40:	ce 01       	movw	r24, r28
    2e42:	47 df       	rcall	.-370    	; 0x2cd2 <u8x8_cad_EndTransfer>
u8x8_d_ssd1309_128x64_noname2():
    2e44:	81 e0       	ldi	r24, 0x01	; 1
    2e46:	df 91       	pop	r29
    2e48:	cf 91       	pop	r28
    2e4a:	1f 91       	pop	r17
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_d_ssd1309.c:111
      
      u8x8_cad_EndTransfer(u8x8);
      break;
    case U8X8_MSG_DISPLAY_SET_POWER_SAVE:
      if ( arg_int == 0 )
	u8x8_cad_SendSequence(u8x8, u8x8_d_ssd1309_powersave0_seq);
    2e4c:	0f 91       	pop	r16
    2e4e:	ff 90       	pop	r15
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_d_ssd1309.c:110
      } while( arg_int > 0 );
      
      u8x8_cad_EndTransfer(u8x8);
      break;
    case U8X8_MSG_DISPLAY_SET_POWER_SAVE:
      if ( arg_int == 0 )
    2e50:	ef 90       	pop	r14
    2e52:	08 95       	ret
u8x8_d_ssd1309_generic():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_d_ssd1309.c:113
	u8x8_cad_SendSequence(u8x8, u8x8_d_ssd1309_powersave0_seq);
      else
	u8x8_cad_SendSequence(u8x8, u8x8_d_ssd1309_powersave1_seq);
    2e54:	6b ed       	ldi	r22, 0xDB	; 219
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_d_ssd1309.c:217
	u8x8->x_offset = u8x8->display_info->flipmode_x_offset;
      }
      break;
    case U8X8_MSG_DISPLAY_INIT:
      u8x8_d_helper_display_init(u8x8);
      u8x8_cad_SendSequence(u8x8, u8x8_d_ssd1309_128x64_noname_init_seq);    
    2e56:	77 eb       	ldi	r23, 0xB7	; 183
    2e58:	44 23       	and	r20, r20
    2e5a:	11 f0       	breq	.+4      	; 0x2e60 <u8x8_d_ssd1309_128x64_noname2+0xa4>
    2e5c:	66 ed       	ldi	r22, 0xD6	; 214
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_d_ssd1309.c:117
      else
	u8x8_cad_SendSequence(u8x8, u8x8_d_ssd1309_powersave1_seq);
      break;
#ifdef U8X8_WITH_SET_CONTRAST
    case U8X8_MSG_DISPLAY_SET_CONTRAST:
      u8x8_cad_StartTransfer(u8x8);
    2e5e:	77 eb       	ldi	r23, 0xB7	; 183
u8x8_d_ssd1309_128x64_noname2():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_d_ssd1309.c:118
      u8x8_cad_SendCmd(u8x8, 0x081 );
    2e60:	ce 01       	movw	r24, r28
    2e62:	51 df       	rcall	.-350    	; 0x2d06 <u8x8_cad_SendSequence>
    2e64:	ef cf       	rjmp	.-34     	; 0x2e44 <u8x8_d_ssd1309_128x64_noname2+0x88>
u8x8_d_ssd1309_generic():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_d_ssd1309.c:119
      u8x8_cad_SendArg(u8x8, arg_int );	/* ssd1309 has range from 0 to 255 */
    2e66:	3e df       	rcall	.-388    	; 0x2ce4 <u8x8_cad_StartTransfer>
    2e68:	61 e8       	ldi	r22, 0x81	; 129
    2e6a:	ce 01       	movw	r24, r28
    2e6c:	9e df       	rcall	.-196    	; 0x2daa <u8x8_cad_SendCmd>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_d_ssd1309.c:204
    return 1;
  
  switch(msg)
  {
    case U8X8_MSG_DISPLAY_SET_FLIP_MODE:
      if ( arg_int == 0 )
    2e6e:	60 2f       	mov	r22, r16
    2e70:	ce 01       	movw	r24, r28
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_d_ssd1309.c:206
      {
	u8x8_cad_SendSequence(u8x8, u8x8_d_ssd1309_128x64_flip0_seq);
    2e72:	92 df       	rcall	.-220    	; 0x2d98 <u8x8_cad_SendArg>
    2e74:	e5 cf       	rjmp	.-54     	; 0x2e40 <u8x8_d_ssd1309_128x64_noname2+0x84>
u8x8_d_ssd1309_128x64_noname2():
    2e76:	41 11       	cpse	r20, r1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_d_ssd1309.c:207
	u8x8->x_offset = u8x8->display_info->default_x_offset;
    2e78:	08 c0       	rjmp	.+16     	; 0x2e8a <u8x8_d_ssd1309_128x64_noname2+0xce>
    2e7a:	60 ee       	ldi	r22, 0xE0	; 224
    2e7c:	77 eb       	ldi	r23, 0xB7	; 183
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_display.c:56
    2e7e:	43 df       	rcall	.-378    	; 0x2d06 <u8x8_cad_SendSequence>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_d_ssd1309.c:211
      }
      else
      {
	u8x8_cad_SendSequence(u8x8, u8x8_d_ssd1309_128x64_flip1_seq);
    2e80:	e8 81       	ld	r30, Y
    2e82:	f9 81       	ldd	r31, Y+1	; 0x01
    2e84:	82 89       	ldd	r24, Z+18	; 0x12
u8x8_d_helper_display_setup_memory():
    2e86:	8c 8b       	std	Y+20, r24	; 0x14
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_d_ssd1309.c:212
	u8x8->x_offset = u8x8->display_info->flipmode_x_offset;
    2e88:	dd cf       	rjmp	.-70     	; 0x2e44 <u8x8_d_ssd1309_128x64_noname2+0x88>
u8x8_d_ssd1309_128x64_noname2():
    2e8a:	68 e2       	ldi	r22, 0x28	; 40
    2e8c:	78 eb       	ldi	r23, 0xB8	; 184
    2e8e:	3b df       	rcall	.-394    	; 0x2d06 <u8x8_cad_SendSequence>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_display.c:67
  
*/
void u8x8_d_helper_display_init(u8x8_t *u8x8)
{
      /* 2) apply port directions to the GPIO lines and apply default values for the IO lines*/
      u8x8_gpio_Init(u8x8);
    2e90:	e8 81       	ld	r30, Y
    2e92:	f9 81       	ldd	r31, Y+1	; 0x01
    2e94:	83 89       	ldd	r24, Z+19	; 0x13
    2e96:	f7 cf       	rjmp	.-18     	; 0x2e86 <u8x8_d_ssd1309_128x64_noname2+0xca>
u8x8_d_helper_display_init():
    2e98:	ea 85       	ldd	r30, Y+10	; 0x0a
    2e9a:	fb 85       	ldd	r31, Y+11	; 0x0b
    2e9c:	30 e0       	ldi	r19, 0x00	; 0
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_display.c:68
      u8x8_cad_Init(u8x8);              /* this will also call U8X8_MSG_BYTE_INIT, byte init will NOT call GPIO_INIT */
    2e9e:	20 e0       	ldi	r18, 0x00	; 0
    2ea0:	40 e0       	ldi	r20, 0x00	; 0
    2ea2:	68 e2       	ldi	r22, 0x28	; 40
    2ea4:	09 95       	icall
    2ea6:	ee 81       	ldd	r30, Y+6	; 0x06
    2ea8:	ff 81       	ldd	r31, Y+7	; 0x07
    2eaa:	30 e0       	ldi	r19, 0x00	; 0
    2eac:	20 e0       	ldi	r18, 0x00	; 0
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_display.c:71

      /* 3) do reset */
      u8x8_gpio_SetReset(u8x8, 1);
    2eae:	40 e0       	ldi	r20, 0x00	; 0
    2eb0:	64 e1       	ldi	r22, 0x14	; 20
    2eb2:	ce 01       	movw	r24, r28
    2eb4:	09 95       	icall
    2eb6:	41 e0       	ldi	r20, 0x01	; 1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_display.c:72
      u8x8_gpio_Delay(u8x8, U8X8_MSG_DELAY_MILLI, u8x8->display_info->reset_pulse_width_ms);
    2eb8:	6b e4       	ldi	r22, 0x4B	; 75
    2eba:	ce 01       	movw	r24, r28
    2ebc:	f6 dd       	rcall	.-1044   	; 0x2aaa <u8x8_gpio_call>
    2ebe:	e8 81       	ld	r30, Y
    2ec0:	f9 81       	ldd	r31, Y+1	; 0x01
    2ec2:	44 81       	ldd	r20, Z+4	; 0x04
    2ec4:	69 e2       	ldi	r22, 0x29	; 41
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_display.c:73
      u8x8_gpio_SetReset(u8x8, 0);
    2ec6:	ce 01       	movw	r24, r28
    2ec8:	f0 dd       	rcall	.-1056   	; 0x2aaa <u8x8_gpio_call>
    2eca:	40 e0       	ldi	r20, 0x00	; 0
    2ecc:	6b e4       	ldi	r22, 0x4B	; 75
    2ece:	ce 01       	movw	r24, r28
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_display.c:74
      u8x8_gpio_Delay(u8x8, U8X8_MSG_DELAY_MILLI, u8x8->display_info->reset_pulse_width_ms);
    2ed0:	ec dd       	rcall	.-1064   	; 0x2aaa <u8x8_gpio_call>
    2ed2:	e8 81       	ld	r30, Y
    2ed4:	f9 81       	ldd	r31, Y+1	; 0x01
    2ed6:	44 81       	ldd	r20, Z+4	; 0x04
    2ed8:	69 e2       	ldi	r22, 0x29	; 41
    2eda:	ce 01       	movw	r24, r28
    2edc:	e6 dd       	rcall	.-1076   	; 0x2aaa <u8x8_gpio_call>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_display.c:75
      u8x8_gpio_SetReset(u8x8, 1);
    2ede:	41 e0       	ldi	r20, 0x01	; 1
    2ee0:	6b e4       	ldi	r22, 0x4B	; 75
    2ee2:	ce 01       	movw	r24, r28
    2ee4:	e2 dd       	rcall	.-1084   	; 0x2aaa <u8x8_gpio_call>
    2ee6:	e8 81       	ld	r30, Y
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_display.c:76
      u8x8_gpio_Delay(u8x8, U8X8_MSG_DELAY_MILLI, u8x8->display_info->post_reset_wait_ms);
    2ee8:	f9 81       	ldd	r31, Y+1	; 0x01
    2eea:	45 81       	ldd	r20, Z+5	; 0x05
    2eec:	69 e2       	ldi	r22, 0x29	; 41
    2eee:	ce 01       	movw	r24, r28
    2ef0:	dc dd       	rcall	.-1096   	; 0x2aaa <u8x8_gpio_call>
u8x8_d_ssd1309_128x64_noname2():
    2ef2:	6f ef       	ldi	r22, 0xFF	; 255
    2ef4:	77 eb       	ldi	r23, 0xB7	; 183
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_d_ssd1309.c:217
      }
      break;
    case U8X8_MSG_DISPLAY_INIT:
      u8x8_d_helper_display_init(u8x8);
      u8x8_cad_SendSequence(u8x8, u8x8_d_ssd1309_128x64_noname_init_seq);    
    2ef6:	b4 cf       	rjmp	.-152    	; 0x2e60 <u8x8_d_ssd1309_128x64_noname2+0xa4>

00002ef8 <u8x8_byte_SendByte>:
u8x8_byte_SendByte():
    2ef8:	cf 93       	push	r28
    2efa:	df 93       	push	r29
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_byte.c:50
}

uint8_t u8x8_byte_SendByte(u8x8_t *u8x8, uint8_t byte)
{
    2efc:	1f 92       	push	r1
    2efe:	cd b7       	in	r28, 0x3d	; 61
    2f00:	de b7       	in	r29, 0x3e	; 62
    2f02:	69 83       	std	Y+1, r22	; 0x01
    2f04:	be 01       	movw	r22, r28
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_byte.c:51
  return u8x8_byte_SendBytes(u8x8, 1, &byte);
    2f06:	6f 5f       	subi	r22, 0xFF	; 255
    2f08:	7f 4f       	sbci	r23, 0xFF	; 255
    2f0a:	0e 94 62 0e 	call	0x1cc4	; 0x1cc4 <u8x8_byte_SendBytes.constprop.4>
    2f0e:	0f 90       	pop	r0
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_byte.c:52
}
    2f10:	df 91       	pop	r29
    2f12:	cf 91       	pop	r28
    2f14:	08 95       	ret

00002f16 <u8x8_byte_SetDC>:
u8x8_byte_SetDC():
    2f16:	46 2f       	mov	r20, r22
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_byte.c:41

#include "u8x8.h"

uint8_t u8x8_byte_SetDC(u8x8_t *u8x8, uint8_t dc)
{
  return u8x8->byte_cb(u8x8, U8X8_MSG_BYTE_SET_DC, dc, NULL);
    2f18:	dc 01       	movw	r26, r24
    2f1a:	18 96       	adiw	r26, 0x08	; 8
    2f1c:	ed 91       	ld	r30, X+
    2f1e:	fc 91       	ld	r31, X
    2f20:	30 e0       	ldi	r19, 0x00	; 0
    2f22:	20 e0       	ldi	r18, 0x00	; 0
    2f24:	60 e2       	ldi	r22, 0x20	; 32
    2f26:	09 94       	ijmp

00002f28 <u8x8_cad_001>:
u8x8_cad_001():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_cad.c:336
  convert to bytes by using 
    dc = 0 for commands and args and
    dc = 1 for data
*/
uint8_t u8x8_cad_001(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
{
    2f28:	ef 92       	push	r14
    2f2a:	ff 92       	push	r15
    2f2c:	0f 93       	push	r16
    2f2e:	1f 93       	push	r17
    2f30:	cf 93       	push	r28
    2f32:	df 93       	push	r29
    2f34:	8c 01       	movw	r16, r24
    2f36:	c6 2f       	mov	r28, r22
    2f38:	d4 2f       	mov	r29, r20
    2f3a:	79 01       	movw	r14, r18
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_cad.c:337
  switch(msg)
    2f3c:	67 31       	cpi	r22, 0x17	; 23
    2f3e:	30 f4       	brcc	.+12     	; 0x2f4c <u8x8_cad_001+0x24>
    2f40:	65 31       	cpi	r22, 0x15	; 21
    2f42:	b8 f4       	brcc	.+46     	; 0x2f72 <u8x8_cad_001+0x4a>
    2f44:	64 31       	cpi	r22, 0x14	; 20
    2f46:	31 f0       	breq	.+12     	; 0x2f54 <u8x8_cad_001+0x2c>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_cad.c:357
    case U8X8_MSG_CAD_INIT:
    case U8X8_MSG_CAD_START_TRANSFER:
    case U8X8_MSG_CAD_END_TRANSFER:
      return u8x8->byte_cb(u8x8, msg, arg_int, arg_ptr);
    default:
      return 0;
    2f48:	80 e0       	ldi	r24, 0x00	; 0
    2f4a:	19 c0       	rjmp	.+50     	; 0x2f7e <u8x8_cad_001+0x56>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_cad.c:337
    dc = 0 for commands and args and
    dc = 1 for data
*/
uint8_t u8x8_cad_001(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
{
  switch(msg)
    2f4c:	67 31       	cpi	r22, 0x17	; 23
    2f4e:	f1 f0       	breq	.+60     	; 0x2f8c <u8x8_cad_001+0x64>
    2f50:	6a 31       	cpi	r22, 0x1A	; 26
    2f52:	d0 f7       	brcc	.-12     	; 0x2f48 <u8x8_cad_001+0x20>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_cad.c:355
      //break;
      /* fall through */
    case U8X8_MSG_CAD_INIT:
    case U8X8_MSG_CAD_START_TRANSFER:
    case U8X8_MSG_CAD_END_TRANSFER:
      return u8x8->byte_cb(u8x8, msg, arg_int, arg_ptr);
    2f54:	d8 01       	movw	r26, r16
    2f56:	18 96       	adiw	r26, 0x08	; 8
    2f58:	ed 91       	ld	r30, X+
    2f5a:	fc 91       	ld	r31, X
    2f5c:	97 01       	movw	r18, r14
    2f5e:	4d 2f       	mov	r20, r29
    2f60:	6c 2f       	mov	r22, r28
    2f62:	c8 01       	movw	r24, r16
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_cad.c:360
    default:
      return 0;
  }
  return 1;
}
    2f64:	df 91       	pop	r29
    2f66:	cf 91       	pop	r28
    2f68:	1f 91       	pop	r17
    2f6a:	0f 91       	pop	r16
    2f6c:	ff 90       	pop	r15
    2f6e:	ef 90       	pop	r14
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_cad.c:355
      //break;
      /* fall through */
    case U8X8_MSG_CAD_INIT:
    case U8X8_MSG_CAD_START_TRANSFER:
    case U8X8_MSG_CAD_END_TRANSFER:
      return u8x8->byte_cb(u8x8, msg, arg_int, arg_ptr);
    2f70:	09 94       	ijmp
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_cad.c:340
uint8_t u8x8_cad_001(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
{
  switch(msg)
  {
    case U8X8_MSG_CAD_SEND_CMD:
      u8x8_byte_SetDC(u8x8, 0);
    2f72:	60 e0       	ldi	r22, 0x00	; 0
    2f74:	d0 df       	rcall	.-96     	; 0x2f16 <u8x8_byte_SetDC>
    2f76:	6d 2f       	mov	r22, r29
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_cad.c:341
      u8x8_byte_SendByte(u8x8, arg_int);
    2f78:	c8 01       	movw	r24, r16
    2f7a:	be df       	rcall	.-132    	; 0x2ef8 <u8x8_byte_SendByte>
    2f7c:	81 e0       	ldi	r24, 0x01	; 1
    2f7e:	df 91       	pop	r29
    2f80:	cf 91       	pop	r28
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_cad.c:360
      return u8x8->byte_cb(u8x8, msg, arg_int, arg_ptr);
    default:
      return 0;
  }
  return 1;
}
    2f82:	1f 91       	pop	r17
    2f84:	0f 91       	pop	r16
    2f86:	ff 90       	pop	r15
    2f88:	ef 90       	pop	r14
    2f8a:	08 95       	ret
    2f8c:	61 e0       	ldi	r22, 0x01	; 1
    2f8e:	c3 df       	rcall	.-122    	; 0x2f16 <u8x8_byte_SetDC>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_cad.c:348
    case U8X8_MSG_CAD_SEND_ARG:
      u8x8_byte_SetDC(u8x8, 0);
      u8x8_byte_SendByte(u8x8, arg_int);
      break;
    case U8X8_MSG_CAD_SEND_DATA:
      u8x8_byte_SetDC(u8x8, 1);
    2f90:	e1 cf       	rjmp	.-62     	; 0x2f54 <u8x8_cad_001+0x2c>

00002f92 <u8g2_draw_l90_r0>:
u8g2_draw_l90_r0():
    2f92:	0f 93       	push	r16
u8g2_draw_hv_line_2dir():
    2f94:	dc 01       	movw	r26, r24
    2f96:	de 96       	adiw	r26, 0x3e	; 62
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_setup.c:308
/*============================================*/
extern void u8g2_draw_hv_line_2dir(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len, uint8_t dir);


void u8g2_draw_l90_r0(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len, uint8_t dir)
{
    2f98:	3c 91       	ld	r19, X
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_hvline.c:138
{

  /* clipping happens before the display rotation */

  /* transform to pixel buffer coordinates */
  y -= u8g2->pixel_curr_row;
    2f9a:	de 97       	sbiw	r26, 0x3e	; 62
    2f9c:	43 1b       	sub	r20, r19
    2f9e:	d4 96       	adiw	r26, 0x34	; 52
    2fa0:	ed 91       	ld	r30, X+
    2fa2:	fc 91       	ld	r31, X
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_hvline.c:140
  
  u8g2->ll_hvline(u8g2, x, y, len, dir);
    2fa4:	09 95       	icall
u8g2_draw_l90_r0():
    2fa6:	0f 91       	pop	r16
    2fa8:	08 95       	ret

00002faa <u8g2_update_dimension_r0>:
u8g2_update_dimension_r0():
    2faa:	cf 93       	push	r28
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_setup.c:313
#ifdef __unix
  assert( dir <= 1 );
#endif
  u8g2_draw_hv_line_2dir(u8g2, x, y, len, dir);
}
    2fac:	df 93       	push	r29
    2fae:	fc 01       	movw	r30, r24
u8g2_update_dimension_common():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_setup.c:213

/*==========================================================*/


void u8g2_update_dimension_r0(u8g2_t *u8g2)
{
    2fb0:	a0 81       	ld	r26, Z
    2fb2:	b1 81       	ldd	r27, Z+1	; 0x01
    2fb4:	82 ad       	ldd	r24, Z+58	; 0x3a
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_setup.c:140
    u8g2_uint_t buf_y1; 	
*/

static void u8g2_update_dimension_common(u8g2_t *u8g2)
{
  const u8x8_display_info_t *display_info = u8g2_GetU8x8(u8g2)->display_info;
    2fb6:	98 2f       	mov	r25, r24
    2fb8:	99 0f       	add	r25, r25
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_setup.c:143
  u8g2_uint_t t;
  
  t = u8g2->tile_buf_height;
    2fba:	99 0f       	add	r25, r25
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_setup.c:144
  t *= 8;
    2fbc:	99 0f       	add	r25, r25
    2fbe:	95 af       	std	Z+61, r25	; 0x3d
    2fc0:	50 96       	adiw	r26, 0x10	; 16
    2fc2:	9c 91       	ld	r25, X
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_setup.c:145
  u8g2->pixel_buf_height = t;
    2fc4:	50 97       	sbiw	r26, 0x10	; 16
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_setup.c:147
  
  t = display_info->tile_width;
    2fc6:	90 32       	cpi	r25, 0x20	; 32
    2fc8:	08 f0       	brcs	.+2      	; 0x2fcc <u8g2_update_dimension_r0+0x22>
    2fca:	9f e1       	ldi	r25, 0x1F	; 31
    2fcc:	99 0f       	add	r25, r25
    2fce:	99 0f       	add	r25, r25
    2fd0:	99 0f       	add	r25, r25
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_setup.c:152
#ifndef U8G2_16BIT
  if ( t >= 32 )
    t = 31;
#endif
  t *= 8;
    2fd2:	94 af       	std	Z+60, r25	; 0x3c
    2fd4:	23 ad       	ldd	r18, Z+59	; 0x3b
    2fd6:	92 2f       	mov	r25, r18
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_setup.c:153
  u8g2->pixel_buf_width = t;
    2fd8:	99 0f       	add	r25, r25
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_setup.c:155
  
  t = u8g2->tile_curr_row;
    2fda:	99 0f       	add	r25, r25
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_setup.c:156
  t *= 8;
    2fdc:	99 0f       	add	r25, r25
    2fde:	96 af       	std	Z+62, r25	; 0x3e
    2fe0:	51 96       	adiw	r26, 0x11	; 17
    2fe2:	3c 91       	ld	r19, X
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_setup.c:157
  u8g2->pixel_curr_row = t;
    2fe4:	51 97       	sbiw	r26, 0x11	; 17
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_setup.c:161
  
  t = u8g2->tile_buf_height;
  /* handle the case, where the buffer is larger than the (remaining) part of the display */
  if ( t + u8g2->tile_curr_row > display_info->tile_height )
    2fe6:	68 2f       	mov	r22, r24
    2fe8:	62 0f       	add	r22, r18
    2fea:	77 27       	eor	r23, r23
    2fec:	77 1f       	adc	r23, r23
    2fee:	36 17       	cp	r19, r22
    2ff0:	17 06       	cpc	r1, r23
    2ff2:	14 f4       	brge	.+4      	; 0x2ff8 <u8g2_update_dimension_r0+0x4e>
    2ff4:	83 2f       	mov	r24, r19
    2ff6:	82 1b       	sub	r24, r18
    2ff8:	97 af       	std	Z+63, r25	; 0x3f
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_setup.c:162
    t = display_info->tile_height - u8g2->tile_curr_row;
    2ffa:	ef 01       	movw	r28, r30
    2ffc:	c0 5c       	subi	r28, 0xC0	; 192
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_setup.c:165
  t *= 8;
  
  u8g2->buf_y0 = u8g2->pixel_curr_row;   
    2ffe:	df 4f       	sbci	r29, 0xFF	; 255
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_setup.c:167
  u8g2->buf_y1 = u8g2->buf_y0;
  u8g2->buf_y1 += t;
    3000:	88 0f       	add	r24, r24
    3002:	88 0f       	add	r24, r24
    3004:	88 0f       	add	r24, r24
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_setup.c:163
  
  t = u8g2->tile_buf_height;
  /* handle the case, where the buffer is larger than the (remaining) part of the display */
  if ( t + u8g2->tile_curr_row > display_info->tile_height )
    t = display_info->tile_height - u8g2->tile_curr_row;
  t *= 8;
    3006:	89 0f       	add	r24, r25
    3008:	88 83       	st	Y, r24
    300a:	21 96       	adiw	r28, 0x01	; 1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_setup.c:167
  
  u8g2->buf_y0 = u8g2->pixel_curr_row;   
  u8g2->buf_y1 = u8g2->buf_y0;
  u8g2->buf_y1 += t;
    300c:	80 ef       	ldi	r24, 0xF0	; 240
    300e:	88 83       	st	Y, r24
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_setup.c:174
  
#ifdef U8G2_16BIT
  u8g2->width = display_info->pixel_width;
  u8g2->height = display_info->pixel_height;
#else
  u8g2->width = 240;
    3010:	54 96       	adiw	r26, 0x14	; 20
    3012:	8d 91       	ld	r24, X+
    3014:	9c 91       	ld	r25, X
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_setup.c:175
  if ( display_info->pixel_width <= 240 )
    3016:	55 97       	sbiw	r26, 0x15	; 21
    3018:	81 3f       	cpi	r24, 0xF1	; 241
    301a:	91 05       	cpc	r25, r1
    301c:	08 f4       	brcc	.+2      	; 0x3020 <u8g2_update_dimension_r0+0x76>
    301e:	88 83       	st	Y, r24
    3020:	ee 5b       	subi	r30, 0xBE	; 190
    3022:	ff 4f       	sbci	r31, 0xFF	; 255
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_setup.c:176
    u8g2->width = display_info->pixel_width;
    3024:	56 96       	adiw	r26, 0x16	; 22
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_setup.c:177
  u8g2->height = display_info->pixel_height;
    3026:	8c 91       	ld	r24, X
    3028:	80 83       	st	Z, r24
u8g2_update_dimension_r0():
    302a:	df 91       	pop	r29
    302c:	cf 91       	pop	r28
    302e:	08 95       	ret

00003030 <u8g2_IsIntersection>:
u8g2_IsIntersection():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_setup.c:215


void u8g2_update_dimension_r0(u8g2_t *u8g2)
{
  u8g2_update_dimension_common(u8g2);  
}
    3030:	0f 93       	push	r16
    3032:	fc 01       	movw	r30, r24
    3034:	eb 5b       	subi	r30, 0xBB	; 187
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_intersection.c:167



/* upper limits are not included (asymetric boundaries) */
uint8_t u8g2_IsIntersection(u8g2_t *u8g2, u8g2_uint_t x0, u8g2_uint_t y0, u8g2_uint_t x1, u8g2_uint_t y1)
{
    3036:	ff 4f       	sbci	r31, 0xFF	; 255
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_intersection.c:168
  if ( u8g2_is_intersection_decision_tree(u8g2->user_y0, u8g2->user_y1, y0, y1) == 0 )
    3038:	30 81       	ld	r19, Z
    303a:	31 96       	adiw	r30, 0x01	; 1
u8g2_is_intersection_decision_tree():
    303c:	50 81       	ld	r21, Z
    303e:	45 17       	cp	r20, r21
    3040:	30 f4       	brcc	.+12     	; 0x304e <u8g2_IsIntersection+0x1e>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_intersection.c:125
  a1 and v1 are excluded
  v0 == v1 is not support end return 1
*/
uint8_t u8g2_is_intersection_decision_tree(u8g2_uint_t a0, u8g2_uint_t a1, u8g2_uint_t v0, u8g2_uint_t v1)
{
  if ( v0 < a1 )		// v0 <= a1
    3042:	30 17       	cp	r19, r16
    3044:	38 f0       	brcs	.+14     	; 0x3054 <u8g2_IsIntersection+0x24>
    3046:	04 17       	cp	r16, r20
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_intersection.c:127
  {
    if ( v1 > a0 )	// v1 >= a0
    3048:	28 f0       	brcs	.+10     	; 0x3054 <u8g2_IsIntersection+0x24>
u8g2_IsIntersection():
    304a:	80 e0       	ldi	r24, 0x00	; 0
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_intersection.c:133
    {
      return 1;
    }
    else
    {
      if ( v0 > v1 )	// v0 > v1
    304c:	13 c0       	rjmp	.+38     	; 0x3074 <u8g2_IsIntersection+0x44>
u8g2_is_intersection_decision_tree():
    304e:	30 17       	cp	r19, r16
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_intersection.c:169

/* upper limits are not included (asymetric boundaries) */
uint8_t u8g2_IsIntersection(u8g2_t *u8g2, u8g2_uint_t x0, u8g2_uint_t y0, u8g2_uint_t x1, u8g2_uint_t y1)
{
  if ( u8g2_is_intersection_decision_tree(u8g2->user_y0, u8g2->user_y1, y0, y1) == 0 )
    return 0; 
    3050:	d0 f3       	brcs	.-12     	; 0x3046 <u8g2_IsIntersection+0x16>
    3052:	fb cf       	rjmp	.-10     	; 0x304a <u8g2_IsIntersection+0x1a>
u8g2_IsIntersection():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_intersection.c:145
      }
    }
  }
  else
  {
    if ( v1 > a0 )	// v1 >= a0
    3054:	fc 01       	movw	r30, r24
    3056:	ed 5b       	subi	r30, 0xBD	; 189
    3058:	ff 4f       	sbci	r31, 0xFF	; 255
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_intersection.c:171
uint8_t u8g2_IsIntersection(u8g2_t *u8g2, u8g2_uint_t x0, u8g2_uint_t y0, u8g2_uint_t x1, u8g2_uint_t y1)
{
  if ( u8g2_is_intersection_decision_tree(u8g2->user_y0, u8g2->user_y1, y0, y1) == 0 )
    return 0; 
  
  return u8g2_is_intersection_decision_tree(u8g2->user_x0, u8g2->user_x1, x0, x1);
    305a:	30 81       	ld	r19, Z
    305c:	8c 5b       	subi	r24, 0xBC	; 188
    305e:	9f 4f       	sbci	r25, 0xFF	; 255
u8g2_is_intersection_decision_tree():
    3060:	fc 01       	movw	r30, r24
    3062:	80 81       	ld	r24, Z
    3064:	68 17       	cp	r22, r24
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_intersection.c:125
  a1 and v1 are excluded
  v0 == v1 is not support end return 1
*/
uint8_t u8g2_is_intersection_decision_tree(u8g2_uint_t a0, u8g2_uint_t a1, u8g2_uint_t v0, u8g2_uint_t v1)
{
  if ( v0 < a1 )		// v0 <= a1
    3066:	40 f4       	brcc	.+16     	; 0x3078 <u8g2_IsIntersection+0x48>
u8g2_IsIntersection():
    3068:	81 e0       	ldi	r24, 0x01	; 1
u8g2_is_intersection_decision_tree():
    306a:	32 17       	cp	r19, r18
    306c:	18 f0       	brcs	.+6      	; 0x3074 <u8g2_IsIntersection+0x44>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_intersection.c:129
  {
    if ( v1 > a0 )	// v1 >= a0
    {
      return 1;
    306e:	81 e0       	ldi	r24, 0x01	; 1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_intersection.c:127
*/
uint8_t u8g2_is_intersection_decision_tree(u8g2_uint_t a0, u8g2_uint_t a1, u8g2_uint_t v0, u8g2_uint_t v1)
{
  if ( v0 < a1 )		// v0 <= a1
  {
    if ( v1 > a0 )	// v1 >= a0
    3070:	26 17       	cp	r18, r22
    3072:	58 f7       	brcc	.-42     	; 0x304a <u8g2_IsIntersection+0x1a>
u8g2_IsIntersection():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_intersection.c:133
    {
      return 1;
    }
    else
    {
      if ( v0 > v1 )	// v0 > v1
    3074:	0f 91       	pop	r16
    3076:	08 95       	ret
u8g2_is_intersection_decision_tree():
    3078:	32 17       	cp	r19, r18
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_intersection.c:172
{
  if ( u8g2_is_intersection_decision_tree(u8g2->user_y0, u8g2->user_y1, y0, y1) == 0 )
    return 0; 
  
  return u8g2_is_intersection_decision_tree(u8g2->user_x0, u8g2->user_x1, x0, x1);
}
    307a:	c8 f3       	brcs	.-14     	; 0x306e <u8g2_IsIntersection+0x3e>
    307c:	e6 cf       	rjmp	.-52     	; 0x304a <u8g2_IsIntersection+0x1a>

0000307e <u8g2_update_page_win_r0>:
u8g2_update_page_win_r0():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_intersection.c:145
      }
    }
  }
  else
  {
    if ( v1 > a0 )	// v1 >= a0
    307e:	2f 92       	push	r2
    3080:	3f 92       	push	r3
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_setup.c:218

void u8g2_update_page_win_r0(u8g2_t *u8g2)
{
    3082:	4f 92       	push	r4
    3084:	5f 92       	push	r5
    3086:	6f 92       	push	r6
    3088:	7f 92       	push	r7
    308a:	8f 92       	push	r8
    308c:	9f 92       	push	r9
    308e:	af 92       	push	r10
    3090:	bf 92       	push	r11
    3092:	cf 92       	push	r12
    3094:	df 92       	push	r13
    3096:	ef 92       	push	r14
    3098:	ff 92       	push	r15
    309a:	0f 93       	push	r16
    309c:	1f 93       	push	r17
    309e:	cf 93       	push	r28
    30a0:	df 93       	push	r29
    30a2:	ec 01       	movw	r28, r24
    30a4:	4c 01       	movw	r8, r24
    30a6:	83 e4       	ldi	r24, 0x43	; 67
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_setup.c:219
  u8g2->user_x0 = 0;
    30a8:	88 0e       	add	r8, r24
    30aa:	91 1c       	adc	r9, r1
    30ac:	f4 01       	movw	r30, r8
    30ae:	10 82       	st	Z, r1
    30b0:	32 97       	sbiw	r30, 0x02	; 2
    30b2:	20 80       	ld	r2, Z
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_setup.c:220
  u8g2->user_x1 = u8g2->width;			/* pixel_buf_width replaced with width */
    30b4:	5e 01       	movw	r10, r28
    30b6:	f4 e4       	ldi	r31, 0x44	; 68
    30b8:	af 0e       	add	r10, r31
    30ba:	b1 1c       	adc	r11, r1
    30bc:	f5 01       	movw	r30, r10
    30be:	20 82       	st	Z, r2
    30c0:	3f ac       	ldd	r3, Y+63	; 0x3f
    30c2:	6e 01       	movw	r12, r28
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_setup.c:222
  
  u8g2->user_y0 = u8g2->buf_y0;
    30c4:	f5 e4       	ldi	r31, 0x45	; 69
    30c6:	cf 0e       	add	r12, r31
    30c8:	d1 1c       	adc	r13, r1
    30ca:	f6 01       	movw	r30, r12
    30cc:	30 82       	st	Z, r3
    30ce:	35 97       	sbiw	r30, 0x05	; 5
    30d0:	40 80       	ld	r4, Z
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_setup.c:223
  u8g2->user_y1 = u8g2->buf_y1;
    30d2:	7e 01       	movw	r14, r28
    30d4:	f6 e4       	ldi	r31, 0x46	; 70
    30d6:	ef 0e       	add	r14, r31
    30d8:	f1 1c       	adc	r15, r1
    30da:	f7 01       	movw	r30, r14
    30dc:	40 82       	st	Z, r4
u8g2_apply_clip_window():
    30de:	34 96       	adiw	r30, 0x04	; 4
    30e0:	10 81       	ld	r17, Z
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_setup.c:189

#ifdef U8G2_WITH_CLIP_WINDOW_SUPPORT
static void u8g2_apply_clip_window(u8g2_t *u8g2)
{
  /* check aganst the current user_??? window */
  if ( u8g2_IsIntersection(u8g2, u8g2->clip_x0, u8g2->clip_y0, u8g2->clip_x1, u8g2->clip_y1) == 0 ) 
    30e2:	32 97       	sbiw	r30, 0x02	; 2
    30e4:	60 80       	ld	r6, Z
    30e6:	31 96       	adiw	r30, 0x01	; 1
    30e8:	70 80       	ld	r7, Z
    30ea:	32 97       	sbiw	r30, 0x02	; 2
    30ec:	50 80       	ld	r5, Z
    30ee:	01 2f       	mov	r16, r17
    30f0:	26 2d       	mov	r18, r6
    30f2:	47 2d       	mov	r20, r7
    30f4:	65 2d       	mov	r22, r5
    30f6:	ce 01       	movw	r24, r28
    30f8:	9b df       	rcall	.-202    	; 0x3030 <u8g2_IsIntersection>
    30fa:	cd 58       	subi	r28, 0x8D	; 141
    30fc:	df 4f       	sbci	r29, 0xFF	; 255
    30fe:	81 11       	cpse	r24, r1
    3100:	14 c0       	rjmp	.+40     	; 0x312a <u8g2_update_page_win_r0+0xac>
    3102:	18 82       	st	Y, r1
u8g2_update_page_win_r0():
    3104:	df 91       	pop	r29
    3106:	cf 91       	pop	r28
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_setup.c:191
  {
    u8g2->is_page_clip_window_intersection = 0;
    3108:	1f 91       	pop	r17
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_setup.c:228
  u8g2->user_y1 = u8g2->buf_y1;
  
#ifdef U8G2_WITH_CLIP_WINDOW_SUPPORT
  u8g2_apply_clip_window(u8g2);
#endif /* U8G2_WITH_CLIP_WINDOW_SUPPORT */
}
    310a:	0f 91       	pop	r16
    310c:	ff 90       	pop	r15
    310e:	ef 90       	pop	r14
    3110:	df 90       	pop	r13
    3112:	cf 90       	pop	r12
    3114:	bf 90       	pop	r11
    3116:	af 90       	pop	r10
    3118:	9f 90       	pop	r9
    311a:	8f 90       	pop	r8
    311c:	7f 90       	pop	r7
    311e:	6f 90       	pop	r6
    3120:	5f 90       	pop	r5
    3122:	4f 90       	pop	r4
    3124:	3f 90       	pop	r3
    3126:	2f 90       	pop	r2
    3128:	08 95       	ret
u8g2_apply_clip_window():
    312a:	81 e0       	ldi	r24, 0x01	; 1
    312c:	88 83       	st	Y, r24
    312e:	55 20       	and	r5, r5
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_setup.c:195
  {
    u8g2->is_page_clip_window_intersection = 0;
  }
  else
  {
    u8g2->is_page_clip_window_intersection = 1;
    3130:	11 f0       	breq	.+4      	; 0x3136 <u8g2_update_page_win_r0+0xb8>
    3132:	f4 01       	movw	r30, r8
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_setup.c:197

    if ( u8g2->user_x0 < u8g2->clip_x0 )
    3134:	50 82       	st	Z, r5
    3136:	62 14       	cp	r6, r2
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_setup.c:198
      u8g2->user_x0 = u8g2->clip_x0;
    3138:	10 f4       	brcc	.+4      	; 0x313e <u8g2_update_page_win_r0+0xc0>
    313a:	f5 01       	movw	r30, r10
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_setup.c:199
    if ( u8g2->user_x1 > u8g2->clip_x1 )
    313c:	60 82       	st	Z, r6
    313e:	37 14       	cp	r3, r7
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_setup.c:200
      u8g2->user_x1 = u8g2->clip_x1;
    3140:	10 f4       	brcc	.+4      	; 0x3146 <u8g2_update_page_win_r0+0xc8>
    3142:	f6 01       	movw	r30, r12
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_setup.c:201
    if ( u8g2->user_y0 < u8g2->clip_y0 )
    3144:	70 82       	st	Z, r7
    3146:	14 15       	cp	r17, r4
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_setup.c:202
      u8g2->user_y0 = u8g2->clip_y0;
    3148:	e8 f6       	brcc	.-70     	; 0x3104 <u8g2_update_page_win_r0+0x86>
    314a:	f7 01       	movw	r30, r14
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_setup.c:203
    if ( u8g2->user_y1 > u8g2->clip_y1 )
    314c:	10 83       	st	Z, r17
    314e:	da cf       	rjmp	.-76     	; 0x3104 <u8g2_update_page_win_r0+0x86>

00003150 <u8g2_DrawHVLine>:
u8g2_DrawHVLine():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_setup.c:204
      u8g2->user_y1 = u8g2->clip_y1;
    3150:	0f 93       	push	r16
    3152:	dc 01       	movw	r26, r24
    3154:	80 2f       	mov	r24, r16
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_hvline.c:151
  This function should be called by the user.
  
  "dir" may have 4 directions: 0 (left to right), 1, 2, 3 (down up)
*/
void u8g2_DrawHVLine(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len, uint8_t dir)
{
    3156:	fd 01       	movw	r30, r26
    3158:	ed 58       	subi	r30, 0x8D	; 141
    315a:	ff 4f       	sbci	r31, 0xFF	; 255
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_hvline.c:157
  /* Make a call to the callback function (e.g. u8g2_draw_l90_r0). */
  /* The callback may rotate the hv line */
  /* after rotation this will call u8g2_draw_hv_line_4dir() */
  
#ifdef U8G2_WITH_CLIP_WINDOW_SUPPORT
  if ( u8g2->is_page_clip_window_intersection != 0 )
    315c:	90 81       	ld	r25, Z
    315e:	99 23       	and	r25, r25
    3160:	e9 f1       	breq	.+122    	; 0x31dc <u8g2_DrawHVLine+0x8c>
    3162:	22 23       	and	r18, r18
    3164:	d9 f1       	breq	.+118    	; 0x31dc <u8g2_DrawHVLine+0x8c>
    3166:	22 30       	cpi	r18, 0x02	; 2
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_hvline.c:159
#endif /* U8G2_WITH_CLIP_WINDOW_SUPPORT */
    if ( len != 0 )
    3168:	20 f0       	brcs	.+8      	; 0x3172 <u8g2_DrawHVLine+0x22>
    316a:	02 30       	cpi	r16, 0x02	; 2
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_hvline.c:163
    {
    
      /* convert to two directions */    
      if ( len > 1 )
    316c:	79 f5       	brne	.+94     	; 0x31cc <u8g2_DrawHVLine+0x7c>
    316e:	6f 5f       	subi	r22, 0xFF	; 255
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_hvline.c:165
      {
	if ( dir == 2 )
    3170:	62 1b       	sub	r22, r18
    3172:	08 2f       	mov	r16, r24
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_hvline.c:168
	{
	  x -= len;
	  x++;
    3174:	01 70       	andi	r16, 0x01	; 1
    3176:	fd 01       	movw	r30, r26
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_hvline.c:179
	}
      }
      dir &= 1;  
      
      /* clip against the user window */
      if ( dir == 0 )
    3178:	80 fd       	sbrc	r24, 0
    317a:	32 c0       	rjmp	.+100    	; 0x31e0 <u8g2_DrawHVLine+0x90>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_hvline.c:181
      {
	if ( y < u8g2->user_y0 )
    317c:	eb 5b       	subi	r30, 0xBB	; 187
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_hvline.c:179
	}
      }
      dir &= 1;  
      
      /* clip against the user window */
      if ( dir == 0 )
    317e:	ff 4f       	sbci	r31, 0xFF	; 255
    3180:	80 81       	ld	r24, Z
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_hvline.c:181
      {
	if ( y < u8g2->user_y0 )
    3182:	48 17       	cp	r20, r24
    3184:	58 f1       	brcs	.+86     	; 0x31dc <u8g2_DrawHVLine+0x8c>
    3186:	31 96       	adiw	r30, 0x01	; 1
    3188:	80 81       	ld	r24, Z
    318a:	48 17       	cp	r20, r24
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_hvline.c:183
	  return;
	if ( y >= u8g2->user_y1 )
    318c:	38 f5       	brcc	.+78     	; 0x31dc <u8g2_DrawHVLine+0x8c>
    318e:	32 97       	sbiw	r30, 0x02	; 2
    3190:	90 81       	ld	r25, Z
    3192:	31 97       	sbiw	r30, 0x01	; 1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_hvline.c:185
	  return;
	if ( u8g2_clip_intersection2(&x, &len, u8g2->user_x0, u8g2->user_x1) == 0 )
    3194:	80 81       	ld	r24, Z
u8g2_clip_intersection2():
    3196:	26 0f       	add	r18, r22
    3198:	26 17       	cp	r18, r22
    319a:	f0 f4       	brcc	.+60     	; 0x31d8 <u8g2_DrawHVLine+0x88>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_hvline.c:66
static uint8_t u8g2_clip_intersection2(u8g2_uint_t *ap, u8g2_uint_t *len, u8g2_uint_t c, u8g2_uint_t d)
{
  u8g2_uint_t a = *ap;
  u8g2_uint_t b;
  b  = a;
  b += *len;
    319c:	69 17       	cp	r22, r25
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_hvline.c:87
  /* be removed completly (be aware about memory curruption for wrong */
  /* arguments) or return 0 for a>b (will lead to skipped lines for wrong */
  /* arguments) */  
  
  /* removing the following if clause completly may lead to memory corruption of a>b */
  if ( a > b )
    319e:	d8 f4       	brcc	.+54     	; 0x31d6 <u8g2_DrawHVLine+0x86>
    31a0:	2f ef       	ldi	r18, 0xFF	; 255
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_hvline.c:90
  {    
    /* replacing this if with a simple "return 0;" will not handle the case with negative a */    
    if ( a < d )
    31a2:	29 0f       	add	r18, r25
    31a4:	82 17       	cp	r24, r18
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_hvline.c:93
    {
      b = d;
      b--;
    31a6:	d0 f4       	brcc	.+52     	; 0x31dc <u8g2_DrawHVLine+0x8c>
    31a8:	68 17       	cp	r22, r24
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_hvline.c:105
  
  /* from now on, the asumption a <= b is ok */
  
  if ( a >= d )
    return 0;
  if ( b <= c )
    31aa:	08 f4       	brcc	.+2      	; 0x31ae <u8g2_DrawHVLine+0x5e>
    31ac:	68 2f       	mov	r22, r24
    31ae:	29 17       	cp	r18, r25
    31b0:	08 f4       	brcc	.+2      	; 0x31b4 <u8g2_DrawHVLine+0x64>
    31b2:	92 2f       	mov	r25, r18
    31b4:	96 1b       	sub	r25, r22
u8g2_DrawHVLine():
    31b6:	d6 96       	adiw	r26, 0x36	; 54
    31b8:	ed 91       	ld	r30, X+
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_hvline.c:113
    a = c;
  if ( b > d )
    b = d;
  
  *ap = a;
  b -= a;
    31ba:	fc 91       	ld	r31, X
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_hvline.c:199
	if ( u8g2_clip_intersection2(&y, &len, u8g2->user_y0, u8g2->user_y1) == 0 )
	  return;
      }
      
      
      u8g2->cb->draw_l90(u8g2, x, y, len, dir);
    31bc:	d7 97       	sbiw	r26, 0x37	; 55
    31be:	04 80       	ldd	r0, Z+4	; 0x04
    31c0:	f5 81       	ldd	r31, Z+5	; 0x05
    31c2:	e0 2d       	mov	r30, r0
    31c4:	29 2f       	mov	r18, r25
    31c6:	cd 01       	movw	r24, r26
    31c8:	09 95       	icall
    31ca:	08 c0       	rjmp	.+16     	; 0x31dc <u8g2_DrawHVLine+0x8c>
    31cc:	03 30       	cpi	r16, 0x03	; 3
    31ce:	89 f6       	brne	.-94     	; 0x3172 <u8g2_DrawHVLine+0x22>
    31d0:	4f 5f       	subi	r20, 0xFF	; 255
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_hvline.c:170
	if ( dir == 2 )
	{
	  x -= len;
	  x++;
	}
	else if ( dir == 3 )
    31d2:	42 1b       	sub	r20, r18
    31d4:	ce cf       	rjmp	.-100    	; 0x3172 <u8g2_DrawHVLine+0x22>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_hvline.c:173
	{
	  y -= len;
	  y++;
    31d6:	68 2f       	mov	r22, r24
u8g2_clip_intersection2():
    31d8:	69 17       	cp	r22, r25
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_hvline.c:185
      {
	if ( y < u8g2->user_y0 )
	  return;
	if ( y >= u8g2->user_y1 )
	  return;
	if ( u8g2_clip_intersection2(&x, &len, u8g2->user_x0, u8g2->user_x1) == 0 )
    31da:	20 f3       	brcs	.-56     	; 0x31a4 <u8g2_DrawHVLine+0x54>
u8g2_DrawHVLine():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_hvline.c:103
    }
  }
  
  /* from now on, the asumption a <= b is ok */
  
  if ( a >= d )
    31dc:	0f 91       	pop	r16
    31de:	08 95       	ret
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_hvline.c:201
      }
      
      
      u8g2->cb->draw_l90(u8g2, x, y, len, dir);
    }
}
    31e0:	ed 5b       	subi	r30, 0xBD	; 189
    31e2:	ff 4f       	sbci	r31, 0xFF	; 255
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_hvline.c:190
	if ( u8g2_clip_intersection2(&x, &len, u8g2->user_x0, u8g2->user_x1) == 0 )
	  return;
      }
      else
      {
	if ( x < u8g2->user_x0 )
    31e4:	80 81       	ld	r24, Z
    31e6:	68 17       	cp	r22, r24
    31e8:	c8 f3       	brcs	.-14     	; 0x31dc <u8g2_DrawHVLine+0x8c>
    31ea:	31 96       	adiw	r30, 0x01	; 1
    31ec:	80 81       	ld	r24, Z
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_hvline.c:192
	  return;
	if ( x >= u8g2->user_x1 )
    31ee:	68 17       	cp	r22, r24
    31f0:	a8 f7       	brcc	.-22     	; 0x31dc <u8g2_DrawHVLine+0x8c>
    31f2:	32 96       	adiw	r30, 0x02	; 2
    31f4:	90 81       	ld	r25, Z
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_hvline.c:194
	  return;
	if ( u8g2_clip_intersection2(&y, &len, u8g2->user_y0, u8g2->user_y1) == 0 )
    31f6:	31 97       	sbiw	r30, 0x01	; 1
    31f8:	80 81       	ld	r24, Z
u8g2_clip_intersection2():
    31fa:	24 0f       	add	r18, r20
    31fc:	24 17       	cp	r18, r20
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_hvline.c:66
static uint8_t u8g2_clip_intersection2(u8g2_uint_t *ap, u8g2_uint_t *len, u8g2_uint_t c, u8g2_uint_t d)
{
  u8g2_uint_t a = *ap;
  u8g2_uint_t b;
  b  = a;
  b += *len;
    31fe:	78 f4       	brcc	.+30     	; 0x321e <u8g2_DrawHVLine+0xce>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_hvline.c:87
  /* be removed completly (be aware about memory curruption for wrong */
  /* arguments) or return 0 for a>b (will lead to skipped lines for wrong */
  /* arguments) */  
  
  /* removing the following if clause completly may lead to memory corruption of a>b */
  if ( a > b )
    3200:	49 17       	cp	r20, r25
    3202:	60 f4       	brcc	.+24     	; 0x321c <u8g2_DrawHVLine+0xcc>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_hvline.c:90
  {    
    /* replacing this if with a simple "return 0;" will not handle the case with negative a */    
    if ( a < d )
    3204:	2f ef       	ldi	r18, 0xFF	; 255
    3206:	29 0f       	add	r18, r25
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_hvline.c:93
    {
      b = d;
      b--;
    3208:	82 17       	cp	r24, r18
    320a:	40 f7       	brcc	.-48     	; 0x31dc <u8g2_DrawHVLine+0x8c>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_hvline.c:105
  
  /* from now on, the asumption a <= b is ok */
  
  if ( a >= d )
    return 0;
  if ( b <= c )
    320c:	48 17       	cp	r20, r24
    320e:	08 f4       	brcc	.+2      	; 0x3212 <u8g2_DrawHVLine+0xc2>
    3210:	48 2f       	mov	r20, r24
    3212:	29 17       	cp	r18, r25
    3214:	08 f4       	brcc	.+2      	; 0x3218 <u8g2_DrawHVLine+0xc8>
    3216:	92 2f       	mov	r25, r18
    3218:	94 1b       	sub	r25, r20
    321a:	cd cf       	rjmp	.-102    	; 0x31b6 <u8g2_DrawHVLine+0x66>
u8g2_DrawHVLine():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_hvline.c:113
    a = c;
  if ( b > d )
    b = d;
  
  *ap = a;
  b -= a;
    321c:	48 2f       	mov	r20, r24
u8g2_clip_intersection2():
    321e:	49 17       	cp	r20, r25
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_hvline.c:194
      {
	if ( x < u8g2->user_x0 )
	  return;
	if ( x >= u8g2->user_x1 )
	  return;
	if ( u8g2_clip_intersection2(&y, &len, u8g2->user_y0, u8g2->user_y1) == 0 )
    3220:	e8 f6       	brcc	.-70     	; 0x31dc <u8g2_DrawHVLine+0x8c>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_hvline.c:103
    }
  }
  
  /* from now on, the asumption a <= b is ok */
  
  if ( a >= d )
    3222:	f2 cf       	rjmp	.-28     	; 0x3208 <u8g2_DrawHVLine+0xb8>

00003224 <u8g2_DrawPixel.constprop.84>:
u8g2_DrawPixel():
    3224:	0f 93       	push	r16
    3226:	90 91 37 30 	lds	r25, 0x3037	; 0x803037 <u8g2+0x49>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_hvline.c:224
}

void u8g2_DrawPixel(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y)
{
#ifdef U8G2_WITH_INTERSECTION
  if ( y < u8g2->user_y0 )
    322a:	69 17       	cp	r22, r25
    322c:	98 f0       	brcs	.+38     	; 0x3254 <u8g2_DrawPixel.constprop.84+0x30>
    322e:	90 91 38 30 	lds	r25, 0x3038	; 0x803038 <u8g2+0x4a>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_hvline.c:226
    return;
  if ( y >= u8g2->user_y1 )
    3232:	69 17       	cp	r22, r25
    3234:	78 f4       	brcc	.+30     	; 0x3254 <u8g2_DrawPixel.constprop.84+0x30>
    3236:	90 91 35 30 	lds	r25, 0x3035	; 0x803035 <u8g2+0x47>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_hvline.c:228
    return;
  if ( x < u8g2->user_x0 )
    323a:	89 17       	cp	r24, r25
    323c:	58 f0       	brcs	.+22     	; 0x3254 <u8g2_DrawPixel.constprop.84+0x30>
    323e:	90 91 36 30 	lds	r25, 0x3036	; 0x803036 <u8g2+0x48>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_hvline.c:230
    return;
  if ( x >= u8g2->user_x1 )
    3242:	89 17       	cp	r24, r25
    3244:	38 f4       	brcc	.+14     	; 0x3254 <u8g2_DrawPixel.constprop.84+0x30>
    3246:	46 2f       	mov	r20, r22
    3248:	68 2f       	mov	r22, r24
    324a:	00 e0       	ldi	r16, 0x00	; 0
    324c:	21 e0       	ldi	r18, 0x01	; 1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_hvline.c:233
    return;
#endif /* U8G2_WITH_INTERSECTION */
  u8g2_DrawHVLine(u8g2, x, y, 1, 0);
    324e:	82 ef       	ldi	r24, 0xF2	; 242
    3250:	9f e2       	ldi	r25, 0x2F	; 47
    3252:	7e df       	rcall	.-260    	; 0x3150 <u8g2_DrawHVLine>
    3254:	0f 91       	pop	r16
    3256:	08 95       	ret

00003258 <u8g2_DrawLine.constprop.83>:
u8g2_DrawLine():
    3258:	cf 92       	push	r12
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_hvline.c:234
}
    325a:	df 92       	push	r13
    325c:	ef 92       	push	r14
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_line.c:39
*/

#include "u8g2.h"


void u8g2_DrawLine(u8g2_t *u8g2, u8g2_uint_t x1, u8g2_uint_t y1, u8g2_uint_t x2, u8g2_uint_t y2)
    325e:	ff 92       	push	r15
    3260:	0f 93       	push	r16
    3262:	1f 93       	push	r17
    3264:	cf 93       	push	r28
    3266:	df 93       	push	r29
    3268:	c8 2f       	mov	r28, r24
    326a:	d6 2f       	mov	r29, r22
    326c:	68 17       	cp	r22, r24
    326e:	f0 f4       	brcc	.+60     	; 0x32ac <u8g2_DrawLine.constprop.83+0x54>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_line.c:52
  uint8_t swapxy = 0;
  
  /* no intersection check at the moment, should be added... */

  if ( x1 > x2 ) dx = x1-x2; else dx = x2-x1;
  if ( y1 > y2 ) dy = y1-y2; else dy = y2-y1;
    3270:	18 2f       	mov	r17, r24
    3272:	16 1b       	sub	r17, r22
    3274:	13 38       	cpi	r17, 0x83	; 131
    3276:	30 f5       	brcc	.+76     	; 0x32c4 <u8g2_DrawLine.constprop.83+0x6c>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_line.c:54

  if ( dy > dx ) 
    3278:	d1 2e       	mov	r13, r17
    327a:	8c 2f       	mov	r24, r28
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_line.c:52
  uint8_t swapxy = 0;
  
  /* no intersection check at the moment, should be added... */

  if ( x1 > x2 ) dx = x1-x2; else dx = x2-x1;
  if ( y1 > y2 ) dy = y1-y2; else dy = y2-y1;
    327c:	e1 2c       	mov	r14, r1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_line.c:54

  if ( dy > dx ) 
    327e:	12 e8       	ldi	r17, 0x82	; 130
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_line.c:47
  u8g2_uint_t x,y;
  u8g2_uint_t dx, dy;
  u8g2_int_t err;
  u8g2_int_t ystep;

  uint8_t swapxy = 0;
    3280:	22 e8       	ldi	r18, 0x82	; 130
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_line.c:54
  /* no intersection check at the moment, should be added... */

  if ( x1 > x2 ) dx = x1-x2; else dx = x2-x1;
  if ( y1 > y2 ) dy = y1-y2; else dy = y2-y1;

  if ( dy > dx ) 
    3282:	f2 2e       	mov	r15, r18
    3284:	c0 e0       	ldi	r28, 0x00	; 0
    3286:	01 2f       	mov	r16, r17
    3288:	06 95       	lsr	r16
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_line.c:66
  if ( x1 > x2 ) 
  {
    tmp = x1; x1 =x2; x2 = tmp;
    tmp = y1; y1 =y2; y2 = tmp;
  }
  err = dx >> 1;
    328a:	cc 24       	eor	r12, r12
    328c:	ca 94       	dec	r12
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_line.c:67
  if ( y2 > y1 ) ystep = 1; else ystep = -1;
    328e:	d8 17       	cp	r29, r24
    3290:	10 f4       	brcc	.+4      	; 0x3296 <u8g2_DrawLine.constprop.83+0x3e>
    3292:	cc 24       	eor	r12, r12
    3294:	c3 94       	inc	r12
    3296:	fc 16       	cp	r15, r28
    3298:	f0 f4       	brcc	.+60     	; 0x32d6 <u8g2_DrawLine.constprop.83+0x7e>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_line.c:78
#else
  if ( x2 == 0xffff )
    x2--;
#endif

  for( x = x1; x <= x2; x++ )
    329a:	df 91       	pop	r29
    329c:	cf 91       	pop	r28
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_line.c:91
    {
      y += (u8g2_uint_t)ystep;
      err += (u8g2_uint_t)dx;
    }
  }
}
    329e:	1f 91       	pop	r17
    32a0:	0f 91       	pop	r16
    32a2:	ff 90       	pop	r15
    32a4:	ef 90       	pop	r14
    32a6:	df 90       	pop	r13
    32a8:	cf 90       	pop	r12
    32aa:	08 95       	ret
    32ac:	16 2f       	mov	r17, r22
    32ae:	18 1b       	sub	r17, r24
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_line.c:52
  uint8_t swapxy = 0;
  
  /* no intersection check at the moment, should be added... */

  if ( x1 > x2 ) dx = x1-x2; else dx = x2-x1;
  if ( y1 > y2 ) dy = y1-y2; else dy = y2-y1;
    32b0:	13 38       	cpi	r17, 0x83	; 131
    32b2:	10 f3       	brcs	.-60     	; 0x3278 <u8g2_DrawLine.constprop.83+0x20>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_line.c:54

  if ( dy > dx ) 
    32b4:	f6 2e       	mov	r15, r22
    32b6:	82 e8       	ldi	r24, 0x82	; 130
    32b8:	d8 2e       	mov	r13, r24
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_line.c:57
  {
    swapxy = 1;
    tmp = dx; dx =dy; dy = tmp;
    32ba:	ee 24       	eor	r14, r14
    32bc:	e3 94       	inc	r14
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_line.c:56
  if ( x1 > x2 ) dx = x1-x2; else dx = x2-x1;
  if ( y1 > y2 ) dy = y1-y2; else dy = y2-y1;

  if ( dy > dx ) 
  {
    swapxy = 1;
    32be:	80 e0       	ldi	r24, 0x00	; 0
    32c0:	d2 e8       	ldi	r29, 0x82	; 130
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_line.c:59
    tmp = dx; dx =dy; dy = tmp;
    tmp = x1; x1 =y1; y1 = tmp;
    tmp = x2; x2 =y2; y2 = tmp;
    32c2:	e1 cf       	rjmp	.-62     	; 0x3286 <u8g2_DrawLine.constprop.83+0x2e>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_line.c:58

  if ( dy > dx ) 
  {
    swapxy = 1;
    tmp = dx; dx =dy; dy = tmp;
    tmp = x1; x1 =y1; y1 = tmp;
    32c4:	f8 2e       	mov	r15, r24
    32c6:	c6 2f       	mov	r28, r22
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_line.c:54
  /* no intersection check at the moment, should be added... */

  if ( x1 > x2 ) dx = x1-x2; else dx = x2-x1;
  if ( y1 > y2 ) dy = y1-y2; else dy = y2-y1;

  if ( dy > dx ) 
    32c8:	92 e8       	ldi	r25, 0x82	; 130
    32ca:	d9 2e       	mov	r13, r25
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_line.c:57
  {
    swapxy = 1;
    tmp = dx; dx =dy; dy = tmp;
    32cc:	ee 24       	eor	r14, r14
    32ce:	e3 94       	inc	r14
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_line.c:56
  if ( x1 > x2 ) dx = x1-x2; else dx = x2-x1;
  if ( y1 > y2 ) dy = y1-y2; else dy = y2-y1;

  if ( dy > dx ) 
  {
    swapxy = 1;
    32d0:	82 e8       	ldi	r24, 0x82	; 130
    32d2:	d0 e0       	ldi	r29, 0x00	; 0
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_line.c:58
    tmp = dx; dx =dy; dy = tmp;
    tmp = x1; x1 =y1; y1 = tmp;
    32d4:	d8 cf       	rjmp	.-80     	; 0x3286 <u8g2_DrawLine.constprop.83+0x2e>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_line.c:59
    tmp = x2; x2 =y2; y2 = tmp;
    32d6:	6d 2f       	mov	r22, r29
    32d8:	8c 2f       	mov	r24, r28
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_line.c:81
#endif

  for( x = x1; x <= x2; x++ )
  {
    if ( swapxy == 0 ) 
      u8g2_DrawPixel(u8g2, x, y); 
    32da:	ee 20       	and	r14, r14
    32dc:	11 f0       	breq	.+4      	; 0x32e2 <u8g2_DrawLine.constprop.83+0x8a>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_line.c:80
    x2--;
#endif

  for( x = x1; x <= x2; x++ )
  {
    if ( swapxy == 0 ) 
    32de:	6c 2f       	mov	r22, r28
    32e0:	8d 2f       	mov	r24, r29
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_line.c:83
      u8g2_DrawPixel(u8g2, x, y); 
    else 
      u8g2_DrawPixel(u8g2, y, x); 
    32e2:	a0 df       	rcall	.-192    	; 0x3224 <u8g2_DrawPixel.constprop.84>
    32e4:	0d 19       	sub	r16, r13
    32e6:	07 ff       	sbrs	r16, 7
    32e8:	02 c0       	rjmp	.+4      	; 0x32ee <u8g2_DrawLine.constprop.83+0x96>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_line.c:84
    err -= (uint8_t)dy;
    32ea:	dc 0d       	add	r29, r12
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_line.c:85
    if ( err < 0 ) 
    32ec:	01 0f       	add	r16, r17
    32ee:	cf 5f       	subi	r28, 0xFF	; 255
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_line.c:87
    {
      y += (u8g2_uint_t)ystep;
    32f0:	d2 cf       	rjmp	.-92     	; 0x3296 <u8g2_DrawLine.constprop.83+0x3e>

000032f2 <u8g2_add_vector_x>:
u8g2_add_vector_x():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_line.c:88
      err += (u8g2_uint_t)dx;
    32f2:	21 30       	cpi	r18, 0x01	; 1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_line.c:78
#else
  if ( x2 == 0xffff )
    x2--;
#endif

  for( x = x1; x <= x2; x++ )
    32f4:	39 f0       	breq	.+14     	; 0x3304 <u8g2_add_vector_x+0x12>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:318
  return dy;
}

u8g2_uint_t u8g2_add_vector_x(u8g2_uint_t dx, int8_t x, int8_t y, uint8_t dir)
{
  switch(dir)
    32f6:	20 f0       	brcs	.+8      	; 0x3300 <u8g2_add_vector_x+0xe>
    32f8:	22 30       	cpi	r18, 0x02	; 2
    32fa:	31 f0       	breq	.+12     	; 0x3308 <u8g2_add_vector_x+0x16>
    32fc:	84 0f       	add	r24, r20
    32fe:	08 95       	ret
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:334
    default:
      dx += y;
      break;      
  }
  return dx;
}
    3300:	86 0f       	add	r24, r22
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:321
u8g2_uint_t u8g2_add_vector_x(u8g2_uint_t dx, int8_t x, int8_t y, uint8_t dir)
{
  switch(dir)
  {
    case 0:
      dx += x;
    3302:	08 95       	ret
    3304:	84 1b       	sub	r24, r20
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:324
      break;
    case 1:
      dx -= y;
    3306:	08 95       	ret
    3308:	86 1b       	sub	r24, r22
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:327
      break;
    case 2:
      dx -= x;
    330a:	08 95       	ret

0000330c <u8g2_add_vector_y>:
u8g2_add_vector_y():
    330c:	21 30       	cpi	r18, 0x01	; 1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:298


#ifdef U8G2_WITH_FONT_ROTATION
u8g2_uint_t u8g2_add_vector_y(u8g2_uint_t dy, int8_t x, int8_t y, uint8_t dir)
{
  switch(dir)
    330e:	39 f0       	breq	.+14     	; 0x331e <u8g2_add_vector_y+0x12>
    3310:	20 f0       	brcs	.+8      	; 0x331a <u8g2_add_vector_y+0xe>
    3312:	22 30       	cpi	r18, 0x02	; 2
    3314:	31 f0       	breq	.+12     	; 0x3322 <u8g2_add_vector_y+0x16>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:310
      break;
    case 2:
      dy -= y;
      break;
    default:
      dy -= x;
    3316:	86 1b       	sub	r24, r22
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:314
      break;      
  }
  return dy;
}
    3318:	08 95       	ret
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:301
u8g2_uint_t u8g2_add_vector_y(u8g2_uint_t dy, int8_t x, int8_t y, uint8_t dir)
{
  switch(dir)
  {
    case 0:
      dy += y;
    331a:	84 0f       	add	r24, r20
    331c:	08 95       	ret
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:304
      break;
    case 1:
      dy += x;
    331e:	86 0f       	add	r24, r22
    3320:	08 95       	ret
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:307
      break;
    case 2:
      dy -= y;
    3322:	84 1b       	sub	r24, r20
    3324:	08 95       	ret

00003326 <u8g2_font_decode_len>:
u8g2_font_decode_len():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:388
  Called by:
    u8g2_font_decode_glyph()
*/
/* optimized */
void u8g2_font_decode_len(u8g2_t *u8g2, uint8_t len, uint8_t is_foreground)
{
    3326:	5f 92       	push	r5
    3328:	6f 92       	push	r6
    332a:	7f 92       	push	r7
    332c:	8f 92       	push	r8
    332e:	9f 92       	push	r9
    3330:	af 92       	push	r10
    3332:	bf 92       	push	r11
    3334:	cf 92       	push	r12
    3336:	df 92       	push	r13
    3338:	ef 92       	push	r14
    333a:	ff 92       	push	r15
    333c:	0f 93       	push	r16
    333e:	1f 93       	push	r17
    3340:	cf 93       	push	r28
    3342:	df 93       	push	r29
    3344:	5c 01       	movw	r10, r24
    3346:	16 2f       	mov	r17, r22
    3348:	64 2e       	mov	r6, r20
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:405
  u8g2_font_decode_t *decode = &(u8g2->font_decode);
  
  cnt = len;
  
  /* get the local position */
  lx = decode->x;
    334a:	ec 01       	movw	r28, r24
    334c:	c1 5b       	subi	r28, 0xB1	; 177
    334e:	df 4f       	sbci	r29, 0xFF	; 255
    3350:	dc 80       	ldd	r13, Y+4	; 0x04
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:406
  ly = decode->y;
    3352:	ed 80       	ldd	r14, Y+5	; 0x05
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:458
#endif
      );
    }
    else if ( decode->is_transparent == 0 )    
    {
      u8g2->draw_color = decode->bg_color;			/* draw_color will be restored later */
    3354:	4c 01       	movw	r8, r24
    3356:	89 e7       	ldi	r24, 0x79	; 121
    3358:	88 0e       	add	r8, r24
    335a:	91 1c       	adc	r9, r1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:411
  ly = decode->y;
  
  for(;;)
  {
    /* calculate the number of pixel to the right edge of the glyph */
    rem = decode->glyph_width;
    335c:	fe 80       	ldd	r15, Y+6	; 0x06
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:412
    rem -= lx;
    335e:	fd 18       	sub	r15, r13
    3360:	c1 2e       	mov	r12, r17
    3362:	f1 16       	cp	r15, r17
    3364:	08 f4       	brcc	.+2      	; 0x3368 <u8g2_font_decode_len+0x42>
    3366:	cf 2c       	mov	r12, r15
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:426
    /* now draw the line, but apply the rotation around the glyph target position */
    //u8g2_font_decode_draw_pixel(u8g2, lx,ly,current, is_foreground);

    /* get target position */
    x = decode->target_x;
    y = decode->target_y;
    3368:	5b 80       	ldd	r5, Y+3	; 0x03
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:431

    /* apply rotation */
#ifdef U8G2_WITH_FONT_ROTATION
    
    x = u8g2_add_vector_x(x, lx, ly, decode->dir);
    336a:	0c 85       	ldd	r16, Y+12	; 0x0c
    336c:	20 2f       	mov	r18, r16
    336e:	4e 2d       	mov	r20, r14
    3370:	6d 2d       	mov	r22, r13
    3372:	8a 81       	ldd	r24, Y+2	; 0x02
    3374:	be df       	rcall	.-132    	; 0x32f2 <u8g2_add_vector_x>
    3376:	78 2e       	mov	r7, r24
    3378:	20 2f       	mov	r18, r16
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:432
    y = u8g2_add_vector_y(y, lx, ly, decode->dir);
    337a:	4e 2d       	mov	r20, r14
    337c:	6d 2d       	mov	r22, r13
    337e:	85 2d       	mov	r24, r5
    3380:	c5 df       	rcall	.-118    	; 0x330c <u8g2_add_vector_y>
    3382:	48 2f       	mov	r20, r24
    3384:	66 20       	and	r6, r6
    3386:	69 f0       	breq	.+26     	; 0x33a2 <u8g2_font_decode_len+0x7c>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:442
    x += lx;
    y += ly;
#endif
    
    /* draw foreground and background (if required) */
    if ( is_foreground )
    3388:	8a 85       	ldd	r24, Y+10	; 0x0a
    338a:	f4 01       	movw	r30, r8
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:444
    {
      u8g2->draw_color = decode->fg_color;			/* draw_color will be restored later */
    338c:	80 83       	st	Z, r24
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:458
#endif
      );
    }
    else if ( decode->is_transparent == 0 )    
    {
      u8g2->draw_color = decode->bg_color;			/* draw_color will be restored later */
    338e:	2c 2d       	mov	r18, r12
    3390:	67 2d       	mov	r22, r7
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:459
      u8g2_DrawHVLine(u8g2, 
    3392:	c5 01       	movw	r24, r10
    3394:	dd de       	rcall	.-582    	; 0x3150 <u8g2_DrawHVLine>
    3396:	1f 15       	cp	r17, r15
    3398:	48 f0       	brcs	.+18     	; 0x33ac <u8g2_font_decode_len+0x86>
    339a:	1f 19       	sub	r17, r15
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:472
#endif
      );   
    }
    
    /* check, whether the end of the run length code has been reached */
    if ( cnt < rem )
    339c:	e3 94       	inc	r14
    339e:	d1 2c       	mov	r13, r1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:474
      break;
    cnt -= rem;
    33a0:	dd cf       	rjmp	.-70     	; 0x335c <u8g2_font_decode_len+0x36>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:476
    lx = 0;
    ly++;
    33a2:	89 85       	ldd	r24, Y+9	; 0x09
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:475
    
    /* check, whether the end of the run length code has been reached */
    if ( cnt < rem )
      break;
    cnt -= rem;
    lx = 0;
    33a4:	81 11       	cpse	r24, r1
    33a6:	f7 cf       	rjmp	.-18     	; 0x3396 <u8g2_font_decode_len+0x70>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:456
#else
	0
#endif
      );
    }
    else if ( decode->is_transparent == 0 )    
    33a8:	8b 85       	ldd	r24, Y+11	; 0x0b
    33aa:	ef cf       	rjmp	.-34     	; 0x338a <u8g2_font_decode_len+0x64>
    33ac:	1d 0d       	add	r17, r13
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:458
    {
      u8g2->draw_color = decode->bg_color;			/* draw_color will be restored later */
    33ae:	1c 83       	std	Y+4, r17	; 0x04
    33b0:	ed 82       	std	Y+5, r14	; 0x05
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:478
      break;
    cnt -= rem;
    lx = 0;
    ly++;
  }
  lx += cnt;
    33b2:	df 91       	pop	r29
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:480
  
  decode->x = lx;
    33b4:	cf 91       	pop	r28
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:481
  decode->y = ly;  
    33b6:	1f 91       	pop	r17
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:482
}
    33b8:	0f 91       	pop	r16
    33ba:	ff 90       	pop	r15
    33bc:	ef 90       	pop	r14
    33be:	df 90       	pop	r13
    33c0:	cf 90       	pop	r12
    33c2:	bf 90       	pop	r11
    33c4:	af 90       	pop	r10
    33c6:	9f 90       	pop	r9
    33c8:	8f 90       	pop	r8
    33ca:	7f 90       	pop	r7
    33cc:	6f 90       	pop	r6
    33ce:	5f 90       	pop	r5
    33d0:	08 95       	ret

000033d2 <u8g2_font_decode_get_unsigned_bits>:
u8g2_font_decode_get_unsigned_bits():
    33d2:	dc 01       	movw	r26, r24
    33d4:	18 96       	adiw	r26, 0x08	; 8
    33d6:	4c 91       	ld	r20, X
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:238
/*========================================================================*/
/* glyph handling */

/* optimized */
uint8_t u8g2_font_decode_get_unsigned_bits(u8g2_font_decode_t *f, uint8_t cnt) 
{
    33d8:	18 97       	sbiw	r26, 0x08	; 8
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:240
  uint8_t val;
  uint8_t bit_pos = f->decode_bit_pos;
    33da:	ed 91       	ld	r30, X+
    33dc:	fc 91       	ld	r31, X
    33de:	11 97       	sbiw	r26, 0x01	; 1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:244
  uint8_t bit_pos_plus_cnt;
  
  //val = *(f->decode_ptr);
  val = u8x8_pgm_read( f->decode_ptr );  
    33e0:	24 91       	lpm	r18, Z
    33e2:	30 e0       	ldi	r19, 0x00	; 0
    33e4:	04 2e       	mov	r0, r20
    33e6:	02 c0       	rjmp	.+4      	; 0x33ec <u8g2_font_decode_get_unsigned_bits+0x1a>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:246
  
  val >>= bit_pos;
    33e8:	35 95       	asr	r19
    33ea:	27 95       	ror	r18
    33ec:	0a 94       	dec	r0
    33ee:	e2 f7       	brpl	.-8      	; 0x33e8 <u8g2_font_decode_get_unsigned_bits+0x16>
    33f0:	84 2f       	mov	r24, r20
    33f2:	86 0f       	add	r24, r22
    33f4:	88 30       	cpi	r24, 0x08	; 8
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:248
  bit_pos_plus_cnt = bit_pos;
  bit_pos_plus_cnt += cnt;
    33f6:	68 f0       	brcs	.+26     	; 0x3412 <u8g2_font_decode_get_unsigned_bits+0x40>
    33f8:	31 96       	adiw	r30, 0x01	; 1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:249
  if ( bit_pos_plus_cnt >= 8 )
    33fa:	ed 93       	st	X+, r30
    33fc:	fc 93       	st	X, r31
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:253
  {
    uint8_t s = 8;
    s -= bit_pos;
    f->decode_ptr++;
    33fe:	11 97       	sbiw	r26, 0x01	; 1
    3400:	e4 91       	lpm	r30, Z
    3402:	98 e0       	ldi	r25, 0x08	; 8
    3404:	94 1b       	sub	r25, r20
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:255
    //val |= *(f->decode_ptr) << (8-bit_pos);
    val |= u8x8_pgm_read( f->decode_ptr ) << (s);
    3406:	01 c0       	rjmp	.+2      	; 0x340a <u8g2_font_decode_get_unsigned_bits+0x38>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:252
  bit_pos_plus_cnt = bit_pos;
  bit_pos_plus_cnt += cnt;
  if ( bit_pos_plus_cnt >= 8 )
  {
    uint8_t s = 8;
    s -= bit_pos;
    3408:	ee 0f       	add	r30, r30
    340a:	9a 95       	dec	r25
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:255
    f->decode_ptr++;
    //val |= *(f->decode_ptr) << (8-bit_pos);
    val |= u8x8_pgm_read( f->decode_ptr ) << (s);
    340c:	ea f7       	brpl	.-6      	; 0x3408 <u8g2_font_decode_get_unsigned_bits+0x36>
    340e:	2e 2b       	or	r18, r30
    3410:	88 50       	subi	r24, 0x08	; 8
    3412:	18 96       	adiw	r26, 0x08	; 8
    3414:	8c 93       	st	X, r24
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:257
    //bit_pos -= 8;
    bit_pos_plus_cnt -= 8;
    3416:	8f ef       	ldi	r24, 0xFF	; 255
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:262
  }
  val &= (1U<<cnt)-1;
  //bit_pos += cnt;
  
  f->decode_bit_pos = bit_pos_plus_cnt;
    3418:	9f ef       	ldi	r25, 0xFF	; 255
    341a:	01 c0       	rjmp	.+2      	; 0x341e <u8g2_font_decode_get_unsigned_bits+0x4c>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:259
    //val |= *(f->decode_ptr) << (8-bit_pos);
    val |= u8x8_pgm_read( f->decode_ptr ) << (s);
    //bit_pos -= 8;
    bit_pos_plus_cnt -= 8;
  }
  val &= (1U<<cnt)-1;
    341c:	88 0f       	add	r24, r24
    341e:	6a 95       	dec	r22
    3420:	ea f7       	brpl	.-6      	; 0x341c <u8g2_font_decode_get_unsigned_bits+0x4a>
    3422:	80 95       	com	r24
    3424:	82 23       	and	r24, r18
    3426:	08 95       	ret

00003428 <u8g2_font_get_word>:
u8g2_font_get_word():
    3428:	fc 01       	movw	r30, r24
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:264
  //bit_pos += cnt;
  
  f->decode_bit_pos = bit_pos_plus_cnt;
  return val;
}
    342a:	e6 0f       	add	r30, r22
    342c:	f1 1d       	adc	r31, r1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:121

static uint16_t u8g2_font_get_word(const uint8_t *font, uint8_t offset) U8G2_NOINLINE; 
static uint16_t u8g2_font_get_word(const uint8_t *font, uint8_t offset)
{
    uint16_t pos;
    font += offset;
    342e:	84 91       	lpm	r24, Z
    3430:	90 e0       	ldi	r25, 0x00	; 0
    3432:	98 2f       	mov	r25, r24
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:122
    pos = u8x8_pgm_read( font );
    3434:	88 27       	eor	r24, r24
    3436:	31 96       	adiw	r30, 0x01	; 1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:124
    font++;
    pos <<= 8;
    3438:	e4 91       	lpm	r30, Z
    343a:	8e 0f       	add	r24, r30
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:123
static uint16_t u8g2_font_get_word(const uint8_t *font, uint8_t offset)
{
    uint16_t pos;
    font += offset;
    pos = u8x8_pgm_read( font );
    font++;
    343c:	91 1d       	adc	r25, r1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:125
    pos <<= 8;
    pos += u8x8_pgm_read( font);
    343e:	08 95       	ret

00003440 <u8g2_SetFont.constprop.86>:
u8g2_SetFont():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:127
    return pos;
}
    3440:	cf 93       	push	r28
    3442:	df 93       	push	r29
    3444:	20 91 3d 30 	lds	r18, 0x303D	; 0x80303d <u8g2+0x4f>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:1279
  u8g2->font_calc_vref = u8g2_font_calc_vref_center;
}

/*===============================================*/

void u8g2_SetFont(u8g2_t *u8g2, const uint8_t  *font)
    3448:	30 91 3e 30 	lds	r19, 0x303E	; 0x80303e <u8g2+0x50>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:1281
{
  if ( u8g2->font != font )
    344c:	28 17       	cp	r18, r24
    344e:	39 07       	cpc	r19, r25
    3450:	09 f4       	brne	.+2      	; 0x3454 <u8g2_SetFont.constprop.86+0x14>
    3452:	8d c0       	rjmp	.+282    	; 0x356e <u8g2_SetFont.constprop.86+0x12e>
    3454:	ec 01       	movw	r28, r24
    3456:	80 93 3d 30 	sts	0x303D, r24	; 0x80303d <u8g2+0x4f>
    345a:	90 93 3e 30 	sts	0x303E, r25	; 0x80303e <u8g2+0x50>
u8g2_font_get_byte():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:1287
  {
//#ifdef  __unix__
//	u8g2->last_font_data = NULL;
//	u8g2->last_unicode = 0x0ffff;
//#endif 
    u8g2->font = font;
    345e:	fc 01       	movw	r30, r24
    3460:	84 91       	lpm	r24, Z
u8g2_read_font_info():
    3462:	80 93 4e 30 	sts	0x304E, r24	; 0x80304e <u8g2+0x60>
u8g2_font_get_byte():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:114
/* removed NOINLINE, because it leads to smaller code, might also be faster */
//static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset) U8G2_NOINLINE;
static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset)
{
  font += offset;
  return u8x8_pgm_read( font );  
    3466:	31 96       	adiw	r30, 0x01	; 1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:134
/*========================================================================*/
/* new font format */
void u8g2_read_font_info(u8g2_font_info_t *font_info, const uint8_t *font)
{
  /* offset 0 */
  font_info->glyph_cnt = u8g2_font_get_byte(font, 0);
    3468:	e4 91       	lpm	r30, Z
u8g2_read_font_info():
    346a:	e0 93 4f 30 	sts	0x304F, r30	; 0x80304f <u8g2+0x61>
u8g2_font_get_byte():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:114
/* removed NOINLINE, because it leads to smaller code, might also be faster */
//static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset) U8G2_NOINLINE;
static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset)
{
  font += offset;
  return u8x8_pgm_read( font );  
    346e:	fe 01       	movw	r30, r28
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:135
/* new font format */
void u8g2_read_font_info(u8g2_font_info_t *font_info, const uint8_t *font)
{
  /* offset 0 */
  font_info->glyph_cnt = u8g2_font_get_byte(font, 0);
  font_info->bbx_mode = u8g2_font_get_byte(font, 1);
    3470:	32 96       	adiw	r30, 0x02	; 2
    3472:	e4 91       	lpm	r30, Z
u8g2_read_font_info():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:113

/* removed NOINLINE, because it leads to smaller code, might also be faster */
//static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset) U8G2_NOINLINE;
static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset)
{
  font += offset;
    3474:	e0 93 50 30 	sts	0x3050, r30	; 0x803050 <u8g2+0x62>
u8g2_font_get_byte():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:114
  return u8x8_pgm_read( font );  
    3478:	fe 01       	movw	r30, r28
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:136
void u8g2_read_font_info(u8g2_font_info_t *font_info, const uint8_t *font)
{
  /* offset 0 */
  font_info->glyph_cnt = u8g2_font_get_byte(font, 0);
  font_info->bbx_mode = u8g2_font_get_byte(font, 1);
  font_info->bits_per_0 = u8g2_font_get_byte(font, 2);
    347a:	33 96       	adiw	r30, 0x03	; 3
    347c:	e4 91       	lpm	r30, Z
u8g2_read_font_info():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:113

/* removed NOINLINE, because it leads to smaller code, might also be faster */
//static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset) U8G2_NOINLINE;
static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset)
{
  font += offset;
    347e:	e0 93 51 30 	sts	0x3051, r30	; 0x803051 <u8g2+0x63>
u8g2_font_get_byte():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:114
  return u8x8_pgm_read( font );  
    3482:	fe 01       	movw	r30, r28
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:137
{
  /* offset 0 */
  font_info->glyph_cnt = u8g2_font_get_byte(font, 0);
  font_info->bbx_mode = u8g2_font_get_byte(font, 1);
  font_info->bits_per_0 = u8g2_font_get_byte(font, 2);
  font_info->bits_per_1 = u8g2_font_get_byte(font, 3);
    3484:	34 96       	adiw	r30, 0x04	; 4
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:113

/* removed NOINLINE, because it leads to smaller code, might also be faster */
//static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset) U8G2_NOINLINE;
static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset)
{
  font += offset;
    3486:	e4 91       	lpm	r30, Z
u8g2_read_font_info():
    3488:	e0 93 52 30 	sts	0x3052, r30	; 0x803052 <u8g2+0x64>
u8g2_font_get_byte():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:140
  font_info->bbx_mode = u8g2_font_get_byte(font, 1);
  font_info->bits_per_0 = u8g2_font_get_byte(font, 2);
  font_info->bits_per_1 = u8g2_font_get_byte(font, 3);
  
  /* offset 4 */
  font_info->bits_per_char_width = u8g2_font_get_byte(font, 4);
    348c:	fe 01       	movw	r30, r28
    348e:	35 96       	adiw	r30, 0x05	; 5
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:113

/* removed NOINLINE, because it leads to smaller code, might also be faster */
//static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset) U8G2_NOINLINE;
static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset)
{
  font += offset;
    3490:	e4 91       	lpm	r30, Z
u8g2_read_font_info():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:114
  return u8x8_pgm_read( font );  
    3492:	e0 93 53 30 	sts	0x3053, r30	; 0x803053 <u8g2+0x65>
u8g2_font_get_byte():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:141
  font_info->bits_per_0 = u8g2_font_get_byte(font, 2);
  font_info->bits_per_1 = u8g2_font_get_byte(font, 3);
  
  /* offset 4 */
  font_info->bits_per_char_width = u8g2_font_get_byte(font, 4);
  font_info->bits_per_char_height = u8g2_font_get_byte(font, 5);
    3496:	fe 01       	movw	r30, r28
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:113

/* removed NOINLINE, because it leads to smaller code, might also be faster */
//static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset) U8G2_NOINLINE;
static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset)
{
  font += offset;
    3498:	36 96       	adiw	r30, 0x06	; 6
    349a:	e4 91       	lpm	r30, Z
u8g2_read_font_info():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:142
  font_info->bits_per_1 = u8g2_font_get_byte(font, 3);
  
  /* offset 4 */
  font_info->bits_per_char_width = u8g2_font_get_byte(font, 4);
  font_info->bits_per_char_height = u8g2_font_get_byte(font, 5);
  font_info->bits_per_char_x = u8g2_font_get_byte(font, 6);
    349c:	e0 93 54 30 	sts	0x3054, r30	; 0x803054 <u8g2+0x66>
u8g2_font_get_byte():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:113

/* removed NOINLINE, because it leads to smaller code, might also be faster */
//static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset) U8G2_NOINLINE;
static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset)
{
  font += offset;
    34a0:	fe 01       	movw	r30, r28
    34a2:	37 96       	adiw	r30, 0x07	; 7
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:114
  return u8x8_pgm_read( font );  
    34a4:	e4 91       	lpm	r30, Z
u8g2_read_font_info():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:143
  
  /* offset 4 */
  font_info->bits_per_char_width = u8g2_font_get_byte(font, 4);
  font_info->bits_per_char_height = u8g2_font_get_byte(font, 5);
  font_info->bits_per_char_x = u8g2_font_get_byte(font, 6);
  font_info->bits_per_char_y = u8g2_font_get_byte(font, 7);
    34a6:	e0 93 55 30 	sts	0x3055, r30	; 0x803055 <u8g2+0x67>
u8g2_font_get_byte():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:113

/* removed NOINLINE, because it leads to smaller code, might also be faster */
//static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset) U8G2_NOINLINE;
static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset)
{
  font += offset;
    34aa:	fe 01       	movw	r30, r28
    34ac:	38 96       	adiw	r30, 0x08	; 8
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:114
  return u8x8_pgm_read( font );  
    34ae:	e4 91       	lpm	r30, Z
u8g2_read_font_info():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:144
  /* offset 4 */
  font_info->bits_per_char_width = u8g2_font_get_byte(font, 4);
  font_info->bits_per_char_height = u8g2_font_get_byte(font, 5);
  font_info->bits_per_char_x = u8g2_font_get_byte(font, 6);
  font_info->bits_per_char_y = u8g2_font_get_byte(font, 7);
  font_info->bits_per_delta_x = u8g2_font_get_byte(font, 8);
    34b0:	e0 93 56 30 	sts	0x3056, r30	; 0x803056 <u8g2+0x68>
u8g2_font_get_byte():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:113

/* removed NOINLINE, because it leads to smaller code, might also be faster */
//static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset) U8G2_NOINLINE;
static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset)
{
  font += offset;
    34b4:	fe 01       	movw	r30, r28
    34b6:	39 96       	adiw	r30, 0x09	; 9
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:114
  return u8x8_pgm_read( font );  
    34b8:	e4 91       	lpm	r30, Z
u8g2_read_font_info():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:147
  font_info->bits_per_char_x = u8g2_font_get_byte(font, 6);
  font_info->bits_per_char_y = u8g2_font_get_byte(font, 7);
  font_info->bits_per_delta_x = u8g2_font_get_byte(font, 8);
  
  /* offset 9 */
  font_info->max_char_width = u8g2_font_get_byte(font, 9);
    34ba:	e0 93 57 30 	sts	0x3057, r30	; 0x803057 <u8g2+0x69>
u8g2_font_get_byte():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:113

/* removed NOINLINE, because it leads to smaller code, might also be faster */
//static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset) U8G2_NOINLINE;
static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset)
{
  font += offset;
    34be:	fe 01       	movw	r30, r28
    34c0:	3a 96       	adiw	r30, 0x0a	; 10
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:114
  return u8x8_pgm_read( font );  
    34c2:	e4 91       	lpm	r30, Z
u8g2_read_font_info():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:148
  font_info->bits_per_char_y = u8g2_font_get_byte(font, 7);
  font_info->bits_per_delta_x = u8g2_font_get_byte(font, 8);
  
  /* offset 9 */
  font_info->max_char_width = u8g2_font_get_byte(font, 9);
  font_info->max_char_height = u8g2_font_get_byte(font, 10);
    34c4:	e0 93 58 30 	sts	0x3058, r30	; 0x803058 <u8g2+0x6a>
u8g2_font_get_byte():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:113

/* removed NOINLINE, because it leads to smaller code, might also be faster */
//static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset) U8G2_NOINLINE;
static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset)
{
  font += offset;
    34c8:	fe 01       	movw	r30, r28
    34ca:	3b 96       	adiw	r30, 0x0b	; 11
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:114
  return u8x8_pgm_read( font );  
    34cc:	e4 91       	lpm	r30, Z
u8g2_read_font_info():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:149
  font_info->bits_per_delta_x = u8g2_font_get_byte(font, 8);
  
  /* offset 9 */
  font_info->max_char_width = u8g2_font_get_byte(font, 9);
  font_info->max_char_height = u8g2_font_get_byte(font, 10);
  font_info->x_offset = u8g2_font_get_byte(font, 11);
    34ce:	e0 93 59 30 	sts	0x3059, r30	; 0x803059 <u8g2+0x6b>
u8g2_font_get_byte():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:113

/* removed NOINLINE, because it leads to smaller code, might also be faster */
//static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset) U8G2_NOINLINE;
static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset)
{
  font += offset;
    34d2:	fe 01       	movw	r30, r28
    34d4:	3c 96       	adiw	r30, 0x0c	; 12
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:114
  return u8x8_pgm_read( font );  
    34d6:	e4 91       	lpm	r30, Z
u8g2_read_font_info():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:150
  
  /* offset 9 */
  font_info->max_char_width = u8g2_font_get_byte(font, 9);
  font_info->max_char_height = u8g2_font_get_byte(font, 10);
  font_info->x_offset = u8g2_font_get_byte(font, 11);
  font_info->y_offset = u8g2_font_get_byte(font, 12);
    34d8:	e0 93 5a 30 	sts	0x305A, r30	; 0x80305a <u8g2+0x6c>
u8g2_font_get_byte():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:113

/* removed NOINLINE, because it leads to smaller code, might also be faster */
//static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset) U8G2_NOINLINE;
static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset)
{
  font += offset;
    34dc:	fe 01       	movw	r30, r28
    34de:	3d 96       	adiw	r30, 0x0d	; 13
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:114
  return u8x8_pgm_read( font );  
    34e0:	e4 91       	lpm	r30, Z
u8g2_read_font_info():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:153
  font_info->max_char_height = u8g2_font_get_byte(font, 10);
  font_info->x_offset = u8g2_font_get_byte(font, 11);
  font_info->y_offset = u8g2_font_get_byte(font, 12);
  
  /* offset 13 */
  font_info->ascent_A = u8g2_font_get_byte(font, 13);
    34e2:	e0 93 5b 30 	sts	0x305B, r30	; 0x80305b <u8g2+0x6d>
u8g2_font_get_byte():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:113

/* removed NOINLINE, because it leads to smaller code, might also be faster */
//static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset) U8G2_NOINLINE;
static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset)
{
  font += offset;
    34e6:	fe 01       	movw	r30, r28
    34e8:	3e 96       	adiw	r30, 0x0e	; 14
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:114
  return u8x8_pgm_read( font );  
    34ea:	e4 91       	lpm	r30, Z
u8g2_read_font_info():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:154
  font_info->x_offset = u8g2_font_get_byte(font, 11);
  font_info->y_offset = u8g2_font_get_byte(font, 12);
  
  /* offset 13 */
  font_info->ascent_A = u8g2_font_get_byte(font, 13);
  font_info->descent_g = u8g2_font_get_byte(font, 14);
    34ec:	e0 93 5c 30 	sts	0x305C, r30	; 0x80305c <u8g2+0x6e>
u8g2_font_get_byte():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:113

/* removed NOINLINE, because it leads to smaller code, might also be faster */
//static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset) U8G2_NOINLINE;
static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset)
{
  font += offset;
    34f0:	fe 01       	movw	r30, r28
    34f2:	3f 96       	adiw	r30, 0x0f	; 15
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:114
  return u8x8_pgm_read( font );  
    34f4:	e4 91       	lpm	r30, Z
u8g2_read_font_info():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:155
  font_info->y_offset = u8g2_font_get_byte(font, 12);
  
  /* offset 13 */
  font_info->ascent_A = u8g2_font_get_byte(font, 13);
  font_info->descent_g = u8g2_font_get_byte(font, 14);
  font_info->ascent_para = u8g2_font_get_byte(font, 15);
    34f6:	e0 93 5d 30 	sts	0x305D, r30	; 0x80305d <u8g2+0x6f>
u8g2_font_get_byte():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:113

/* removed NOINLINE, because it leads to smaller code, might also be faster */
//static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset) U8G2_NOINLINE;
static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset)
{
  font += offset;
    34fa:	fe 01       	movw	r30, r28
    34fc:	70 96       	adiw	r30, 0x10	; 16
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:114
  return u8x8_pgm_read( font );  
    34fe:	e4 91       	lpm	r30, Z
u8g2_read_font_info():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:156
  
  /* offset 13 */
  font_info->ascent_A = u8g2_font_get_byte(font, 13);
  font_info->descent_g = u8g2_font_get_byte(font, 14);
  font_info->ascent_para = u8g2_font_get_byte(font, 15);
  font_info->descent_para = u8g2_font_get_byte(font, 16);
    3500:	e0 93 5e 30 	sts	0x305E, r30	; 0x80305e <u8g2+0x70>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:159
  
  /* offset 17 */
  font_info->start_pos_upper_A = u8g2_font_get_word(font, 17);
    3504:	61 e1       	ldi	r22, 0x11	; 17
    3506:	ce 01       	movw	r24, r28
    3508:	8f df       	rcall	.-226    	; 0x3428 <u8g2_font_get_word>
    350a:	80 93 5f 30 	sts	0x305F, r24	; 0x80305f <u8g2+0x71>
    350e:	90 93 60 30 	sts	0x3060, r25	; 0x803060 <u8g2+0x72>
    3512:	63 e1       	ldi	r22, 0x13	; 19
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:160
  font_info->start_pos_lower_a = u8g2_font_get_word(font, 19); 
    3514:	ce 01       	movw	r24, r28
    3516:	88 df       	rcall	.-240    	; 0x3428 <u8g2_font_get_word>
    3518:	80 93 61 30 	sts	0x3061, r24	; 0x803061 <u8g2+0x73>
    351c:	90 93 62 30 	sts	0x3062, r25	; 0x803062 <u8g2+0x74>
    3520:	65 e1       	ldi	r22, 0x15	; 21
    3522:	ce 01       	movw	r24, r28
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:164
  
  /* offset 21 */
#ifdef U8G2_WITH_UNICODE
  font_info->start_pos_unicode = u8g2_font_get_word(font, 21); 
    3524:	81 df       	rcall	.-254    	; 0x3428 <u8g2_font_get_word>
    3526:	80 93 63 30 	sts	0x3063, r24	; 0x803063 <u8g2+0x75>
    352a:	90 93 64 30 	sts	0x3064, r25	; 0x803064 <u8g2+0x76>
u8g2_UpdateRefHeight():
    352e:	80 91 3d 30 	lds	r24, 0x303D	; 0x80303d <u8g2+0x4f>
    3532:	90 91 3e 30 	lds	r25, 0x303E	; 0x80303e <u8g2+0x50>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:1183

/* set ascent/descent for reference point calculation */

void u8g2_UpdateRefHeight(u8g2_t *u8g2)
{
  if ( u8g2->font == NULL )
    3536:	89 2b       	or	r24, r25
    3538:	d1 f0       	breq	.+52     	; 0x356e <u8g2_SetFont.constprop.86+0x12e>
    353a:	80 91 5b 30 	lds	r24, 0x305B	; 0x80305b <u8g2+0x6d>
    353e:	80 93 67 30 	sts	0x3067, r24	; 0x803067 <u8g2+0x79>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:1185
    return;
  u8g2->font_ref_ascent = u8g2->font_info.ascent_A;
    3542:	40 91 5c 30 	lds	r20, 0x305C	; 0x80305c <u8g2+0x6e>
    3546:	40 93 68 30 	sts	0x3068, r20	; 0x803068 <u8g2+0x7a>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:1186
  u8g2->font_ref_descent = u8g2->font_info.descent_g;
    354a:	90 91 66 30 	lds	r25, 0x3066	; 0x803066 <u8g2+0x78>
    354e:	99 23       	and	r25, r25
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:1187
  if ( u8g2->font_height_mode == U8G2_FONT_HEIGHT_MODE_TEXT )
    3550:	71 f0       	breq	.+28     	; 0x356e <u8g2_SetFont.constprop.86+0x12e>
    3552:	91 30       	cpi	r25, 0x01	; 1
    3554:	79 f4       	brne	.+30     	; 0x3574 <u8g2_SetFont.constprop.86+0x134>
    3556:	90 91 5d 30 	lds	r25, 0x305D	; 0x80305d <u8g2+0x6f>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:1190
  {
  }
  else if ( u8g2->font_height_mode == U8G2_FONT_HEIGHT_MODE_XTEXT )
    355a:	89 17       	cp	r24, r25
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:1192
  {
    if ( u8g2->font_ref_ascent < u8g2->font_info.ascent_para )
    355c:	14 f4       	brge	.+4      	; 0x3562 <u8g2_SetFont.constprop.86+0x122>
    355e:	90 93 67 30 	sts	0x3067, r25	; 0x803067 <u8g2+0x79>
    3562:	80 91 5e 30 	lds	r24, 0x305E	; 0x80305e <u8g2+0x70>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:1193
      u8g2->font_ref_ascent = u8g2->font_info.ascent_para;
    3566:	84 17       	cp	r24, r20
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:1194
    if ( u8g2->font_ref_descent > u8g2->font_info.descent_para )
    3568:	14 f4       	brge	.+4      	; 0x356e <u8g2_SetFont.constprop.86+0x12e>
    356a:	80 93 68 30 	sts	0x3068, r24	; 0x803068 <u8g2+0x7a>
u8g2_SetFont():
    356e:	df 91       	pop	r29
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:1195
      u8g2->font_ref_descent = u8g2->font_info.descent_para;
    3570:	cf 91       	pop	r28
    3572:	08 95       	ret
u8g2_UpdateRefHeight():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:1292
    u8g2->font = font;
    u8g2_read_font_info(&(u8g2->font_info), font);
    u8g2_UpdateRefHeight(u8g2);
    /* u8g2_SetFontPosBaseline(u8g2); */ /* removed with issue 195 */
  }
}
    3574:	30 91 58 30 	lds	r19, 0x3058	; 0x803058 <u8g2+0x6a>
    3578:	20 91 5a 30 	lds	r18, 0x305A	; 0x80305a <u8g2+0x6c>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:1199
    if ( u8g2->font_ref_descent > u8g2->font_info.descent_para )
      u8g2->font_ref_descent = u8g2->font_info.descent_para;
  }
  else
  {
    if ( u8g2->font_ref_ascent < u8g2->font_info.max_char_height+u8g2->font_info.y_offset )
    357c:	08 2e       	mov	r0, r24
    357e:	00 0c       	add	r0, r0
    3580:	99 0b       	sbc	r25, r25
    3582:	62 2f       	mov	r22, r18
    3584:	02 2e       	mov	r0, r18
    3586:	00 0c       	add	r0, r0
    3588:	77 0b       	sbc	r23, r23
    358a:	63 0f       	add	r22, r19
    358c:	71 1d       	adc	r23, r1
    358e:	37 fd       	sbrc	r19, 7
    3590:	7a 95       	dec	r23
    3592:	86 17       	cp	r24, r22
    3594:	97 07       	cpc	r25, r23
    3596:	1c f4       	brge	.+6      	; 0x359e <u8g2_SetFont.constprop.86+0x15e>
    3598:	32 0f       	add	r19, r18
    359a:	30 93 67 30 	sts	0x3067, r19	; 0x803067 <u8g2+0x79>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:1200
      u8g2->font_ref_ascent = u8g2->font_info.max_char_height+u8g2->font_info.y_offset;
    359e:	24 17       	cp	r18, r20
    35a0:	34 f7       	brge	.-52     	; 0x356e <u8g2_SetFont.constprop.86+0x12e>
    35a2:	20 93 68 30 	sts	0x3068, r18	; 0x803068 <u8g2+0x7a>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:1201
    if ( u8g2->font_ref_descent > u8g2->font_info.y_offset )
    35a6:	e3 cf       	rjmp	.-58     	; 0x356e <u8g2_SetFont.constprop.86+0x12e>

000035a8 <u8g2_DrawGlyph>:
u8g2_DrawGlyph():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:1202
      u8g2->font_ref_descent = u8g2->font_info.y_offset;
    35a8:	6f 92       	push	r6
    35aa:	7f 92       	push	r7
    35ac:	8f 92       	push	r8
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:937
{
  u8g2->font_decode.is_transparent = is_transparent;		// new font procedures
}

u8g2_uint_t u8g2_DrawGlyph(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, uint16_t encoding)
{
    35ae:	9f 92       	push	r9
    35b0:	af 92       	push	r10
    35b2:	bf 92       	push	r11
    35b4:	cf 92       	push	r12
    35b6:	df 92       	push	r13
    35b8:	ef 92       	push	r14
    35ba:	ff 92       	push	r15
    35bc:	0f 93       	push	r16
    35be:	1f 93       	push	r17
    35c0:	cf 93       	push	r28
    35c2:	df 93       	push	r29
    35c4:	ec 01       	movw	r28, r24
    35c6:	06 2f       	mov	r16, r22
    35c8:	14 2f       	mov	r17, r20
    35ca:	79 01       	movw	r14, r18
    35cc:	fc 01       	movw	r30, r24
    35ce:	e5 5a       	subi	r30, 0xA5	; 165
    35d0:	ff 4f       	sbci	r31, 0xFF	; 255
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:939
#ifdef U8G2_WITH_FONT_ROTATION
  switch(u8g2->font_decode.dir)
    35d2:	80 81       	ld	r24, Z
    35d4:	81 30       	cpi	r24, 0x01	; 1
    35d6:	09 f4       	brne	.+2      	; 0x35da <u8g2_DrawGlyph+0x32>
    35d8:	45 c0       	rjmp	.+138    	; 0x3664 <u8g2_DrawGlyph+0xbc>
    35da:	d0 f1       	brcs	.+116    	; 0x3650 <u8g2_DrawGlyph+0xa8>
    35dc:	82 30       	cpi	r24, 0x02	; 2
    35de:	09 f4       	brne	.+2      	; 0x35e2 <u8g2_DrawGlyph+0x3a>
    35e0:	4b c0       	rjmp	.+150    	; 0x3678 <u8g2_DrawGlyph+0xd0>
    35e2:	83 30       	cpi	r24, 0x03	; 3
    35e4:	09 f4       	brne	.+2      	; 0x35e8 <u8g2_DrawGlyph+0x40>
    35e6:	52 c0       	rjmp	.+164    	; 0x368c <u8g2_DrawGlyph+0xe4>
u8g2_font_draw_glyph():
    35e8:	fe 01       	movw	r30, r28
    35ea:	ef 5a       	subi	r30, 0xAF	; 175
    35ec:	ff 4f       	sbci	r31, 0xFF	; 255
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:872
}

static u8g2_uint_t u8g2_font_draw_glyph(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, uint16_t encoding)
{
  u8g2_uint_t dx = 0;
  u8g2->font_decode.target_x = x;
    35ee:	00 83       	st	Z, r16
    35f0:	31 96       	adiw	r30, 0x01	; 1
    35f2:	10 83       	st	Z, r17
u8g2_font_get_glyph_data():
    35f4:	37 97       	sbiw	r30, 0x07	; 7
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:873
  u8g2->font_decode.target_y = y;
    35f6:	80 81       	ld	r24, Z
    35f8:	91 81       	ldd	r25, Z+1	; 0x01
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:784
  Return:
    Address of the glyph data or NULL, if the encoding is not avialable in the font.
*/
const uint8_t *u8g2_font_get_glyph_data(u8g2_t *u8g2, uint16_t encoding)
{
  const uint8_t *font = u8g2->font;
    35fa:	47 96       	adiw	r24, 0x17	; 23
    35fc:	2f ef       	ldi	r18, 0xFF	; 255
    35fe:	e2 16       	cp	r14, r18
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:785
  font += U8G2_FONT_DATA_STRUCT_SIZE;
    3600:	f1 04       	cpc	r15, r1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:788

  
  if ( encoding <= 255 )
    3602:	11 f0       	breq	.+4      	; 0x3608 <u8g2_DrawGlyph+0x60>
    3604:	08 f0       	brcs	.+2      	; 0x3608 <u8g2_DrawGlyph+0x60>
    3606:	df c0       	rjmp	.+446    	; 0x37c6 <u8g2_DrawGlyph+0x21e>
    3608:	e1 e6       	ldi	r30, 0x61	; 97
    360a:	ee 16       	cp	r14, r30
    360c:	f1 04       	cpc	r15, r1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:790
  {
    if ( encoding >= 'a' )
    360e:	08 f4       	brcc	.+2      	; 0x3612 <u8g2_DrawGlyph+0x6a>
    3610:	47 c0       	rjmp	.+142    	; 0x36a0 <u8g2_DrawGlyph+0xf8>
    3612:	fe 01       	movw	r30, r28
    3614:	e1 59       	subi	r30, 0x91	; 145
    3616:	ff 4f       	sbci	r31, 0xFF	; 255
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:792
    {
      font += u8g2->font_info.start_pos_lower_a;
    3618:	20 81       	ld	r18, Z
    361a:	31 81       	ldd	r19, Z+1	; 0x01
    361c:	82 0f       	add	r24, r18
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:796
    }
    else if ( encoding >= 'A' )
    {
      font += u8g2->font_info.start_pos_upper_A;
    361e:	93 1f       	adc	r25, r19
    3620:	9c 01       	movw	r18, r24
    3622:	2f 5f       	subi	r18, 0xFF	; 255
    3624:	3f 4f       	sbci	r19, 0xFF	; 255
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:801
    }
    
    for(;;)
    {
      if ( u8x8_pgm_read( font + 1 ) == 0 )
    3626:	f9 01       	movw	r30, r18
    3628:	44 91       	lpm	r20, Z
    362a:	41 11       	cpse	r20, r1
    362c:	42 c0       	rjmp	.+132    	; 0x36b2 <u8g2_DrawGlyph+0x10a>
u8g2_DrawGlyph():
    362e:	71 2c       	mov	r7, r1
    3630:	87 2d       	mov	r24, r7
    3632:	df 91       	pop	r29
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:871
  return NULL;
}

static u8g2_uint_t u8g2_font_draw_glyph(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, uint16_t encoding)
{
  u8g2_uint_t dx = 0;
    3634:	cf 91       	pop	r28
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:958
  }
#else
  y += u8g2->font_calc_vref(u8g2);
#endif
  return u8g2_font_draw_glyph(u8g2, x, y, encoding);
}
    3636:	1f 91       	pop	r17
    3638:	0f 91       	pop	r16
    363a:	ff 90       	pop	r15
    363c:	ef 90       	pop	r14
    363e:	df 90       	pop	r13
    3640:	cf 90       	pop	r12
    3642:	bf 90       	pop	r11
    3644:	af 90       	pop	r10
    3646:	9f 90       	pop	r9
    3648:	8f 90       	pop	r8
    364a:	7f 90       	pop	r7
    364c:	6f 90       	pop	r6
    364e:	08 95       	ret
    3650:	fe 01       	movw	r30, r28
    3652:	e3 5b       	subi	r30, 0xB3	; 179
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:942
{
#ifdef U8G2_WITH_FONT_ROTATION
  switch(u8g2->font_decode.dir)
  {
    case 0:
      y += u8g2->font_calc_vref(u8g2);
    3654:	ff 4f       	sbci	r31, 0xFF	; 255
    3656:	01 90       	ld	r0, Z+
    3658:	f0 81       	ld	r31, Z
    365a:	e0 2d       	mov	r30, r0
    365c:	ce 01       	movw	r24, r28
    365e:	09 95       	icall
    3660:	18 0f       	add	r17, r24
    3662:	c2 cf       	rjmp	.-124    	; 0x35e8 <u8g2_DrawGlyph+0x40>
    3664:	fe 01       	movw	r30, r28
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:945
      break;
    case 1:
      x -= u8g2->font_calc_vref(u8g2);
    3666:	e3 5b       	subi	r30, 0xB3	; 179
    3668:	ff 4f       	sbci	r31, 0xFF	; 255
    366a:	01 90       	ld	r0, Z+
    366c:	f0 81       	ld	r31, Z
    366e:	e0 2d       	mov	r30, r0
    3670:	ce 01       	movw	r24, r28
    3672:	09 95       	icall
    3674:	08 1b       	sub	r16, r24
    3676:	b8 cf       	rjmp	.-144    	; 0x35e8 <u8g2_DrawGlyph+0x40>
    3678:	fe 01       	movw	r30, r28
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:948
      break;
    case 2:
      y -= u8g2->font_calc_vref(u8g2);
    367a:	e3 5b       	subi	r30, 0xB3	; 179
    367c:	ff 4f       	sbci	r31, 0xFF	; 255
    367e:	01 90       	ld	r0, Z+
    3680:	f0 81       	ld	r31, Z
    3682:	e0 2d       	mov	r30, r0
    3684:	ce 01       	movw	r24, r28
    3686:	09 95       	icall
    3688:	18 1b       	sub	r17, r24
    368a:	ae cf       	rjmp	.-164    	; 0x35e8 <u8g2_DrawGlyph+0x40>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:951
      break;
    case 3:
      x += u8g2->font_calc_vref(u8g2);
    368c:	fe 01       	movw	r30, r28
    368e:	e3 5b       	subi	r30, 0xB3	; 179
    3690:	ff 4f       	sbci	r31, 0xFF	; 255
    3692:	01 90       	ld	r0, Z+
    3694:	f0 81       	ld	r31, Z
    3696:	e0 2d       	mov	r30, r0
    3698:	ce 01       	movw	r24, r28
    369a:	09 95       	icall
    369c:	08 0f       	add	r16, r24
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:794
  {
    if ( encoding >= 'a' )
    {
      font += u8g2->font_info.start_pos_lower_a;
    }
    else if ( encoding >= 'A' )
    369e:	a4 cf       	rjmp	.-184    	; 0x35e8 <u8g2_DrawGlyph+0x40>
u8g2_font_get_glyph_data():
    36a0:	f1 e4       	ldi	r31, 0x41	; 65
    36a2:	ef 16       	cp	r14, r31
    36a4:	f1 04       	cpc	r15, r1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:796
    {
      font += u8g2->font_info.start_pos_upper_A;
    36a6:	08 f4       	brcc	.+2      	; 0x36aa <u8g2_DrawGlyph+0x102>
    36a8:	bb cf       	rjmp	.-138    	; 0x3620 <u8g2_DrawGlyph+0x78>
    36aa:	fe 01       	movw	r30, r28
    36ac:	e3 59       	subi	r30, 0x93	; 147
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:803
    
    for(;;)
    {
      if ( u8x8_pgm_read( font + 1 ) == 0 )
	break;
      if ( u8x8_pgm_read( font ) == encoding )
    36ae:	ff 4f       	sbci	r31, 0xFF	; 255
    36b0:	b3 cf       	rjmp	.-154    	; 0x3618 <u8g2_DrawGlyph+0x70>
    36b2:	fc 01       	movw	r30, r24
    36b4:	44 91       	lpm	r20, Z
    36b6:	4e 15       	cp	r20, r14
    36b8:	1f 04       	cpc	r1, r15
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:805
      {
	return font+2;	/* skip encoding and glyph size */
    36ba:	09 f0       	breq	.+2      	; 0x36be <u8g2_DrawGlyph+0x116>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:877
  u8g2->font_decode.target_x = x;
  u8g2->font_decode.target_y = y;
  //u8g2->font_decode.is_transparent = is_transparent; this is already set
  //u8g2->font_decode.dir = dir;
  const uint8_t *glyph_data = u8g2_font_get_glyph_data(u8g2, encoding);
  if ( glyph_data != NULL )
    36bc:	7f c0       	rjmp	.+254    	; 0x37bc <u8g2_DrawGlyph+0x214>
    36be:	02 96       	adiw	r24, 0x02	; 2
u8g2_font_draw_glyph():
    36c0:	00 97       	sbiw	r24, 0x00	; 0
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:618
{
  uint8_t a, b;
  int8_t x, y;
  int8_t d;
  int8_t h;
  u8g2_font_decode_t *decode = &(u8g2->font_decode);
    36c2:	09 f4       	brne	.+2      	; 0x36c6 <u8g2_DrawGlyph+0x11e>
    36c4:	b4 cf       	rjmp	.-152    	; 0x362e <u8g2_DrawGlyph+0x86>
u8g2_font_decode_glyph():
    36c6:	7e 01       	movw	r14, r28
    36c8:	ff e4       	ldi	r31, 0x4F	; 79
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:581


static void u8g2_font_setup_decode(u8g2_t *u8g2, const uint8_t *glyph_data)
{
  u8g2_font_decode_t *decode = &(u8g2->font_decode);
  decode->decode_ptr = glyph_data;
    36ca:	ef 0e       	add	r14, r31
    36cc:	f1 1c       	adc	r15, r1
u8g2_font_setup_decode():
    36ce:	f7 01       	movw	r30, r14
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:582
  decode->decode_bit_pos = 0;
    36d0:	80 83       	st	Z, r24
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:590
  /*
  decode->decode_ptr += 1;
  decode->decode_ptr += 1;
  */
  
  decode->glyph_width = u8g2_font_decode_get_unsigned_bits(decode, u8g2->font_info.bits_per_char_width);
    36d2:	91 83       	std	Z+1, r25	; 0x01
    36d4:	10 86       	std	Z+8, r1	; 0x08
    36d6:	71 96       	adiw	r30, 0x11	; 17
    36d8:	60 81       	ld	r22, Z
    36da:	c7 01       	movw	r24, r14
    36dc:	7a de       	rcall	.-780    	; 0x33d2 <u8g2_font_decode_get_unsigned_bits>
    36de:	f7 01       	movw	r30, r14
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:591
  decode->glyph_height = u8g2_font_decode_get_unsigned_bits(decode,u8g2->font_info.bits_per_char_height);
    36e0:	86 83       	std	Z+6, r24	; 0x06
    36e2:	72 96       	adiw	r30, 0x12	; 18
    36e4:	60 81       	ld	r22, Z
    36e6:	c7 01       	movw	r24, r14
    36e8:	74 de       	rcall	.-792    	; 0x33d2 <u8g2_font_decode_get_unsigned_bits>
    36ea:	a8 2e       	mov	r10, r24
    36ec:	f7 01       	movw	r30, r14
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:593
  
  decode->fg_color = u8g2->draw_color;
    36ee:	87 83       	std	Z+7, r24	; 0x07
    36f0:	6e 01       	movw	r12, r28
    36f2:	f9 e7       	ldi	r31, 0x79	; 121
    36f4:	cf 0e       	add	r12, r31
    36f6:	d1 1c       	adc	r13, r1
    36f8:	f6 01       	movw	r30, r12
    36fa:	90 81       	ld	r25, Z
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:594
  decode->bg_color = (decode->fg_color == 0 ? 1 : 0);
    36fc:	f7 01       	movw	r30, r14
    36fe:	92 87       	std	Z+10, r25	; 0x0a
    3700:	81 e0       	ldi	r24, 0x01	; 1
    3702:	91 11       	cpse	r25, r1
    3704:	80 e0       	ldi	r24, 0x00	; 0
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:623
  u8g2_font_decode_t *decode = &(u8g2->font_decode);
    
  u8g2_font_setup_decode(u8g2, glyph_data);     /* set values in u8g2->font_decode data structure */
  h = u8g2->font_decode.glyph_height;
  
  x = u8g2_font_decode_get_signed_bits(decode, u8g2->font_info.bits_per_char_x);
    3706:	f7 01       	movw	r30, r14
    3708:	83 87       	std	Z+11, r24	; 0x0b
u8g2_font_decode_glyph():
    370a:	fe 01       	movw	r30, r28
    370c:	ee 59       	subi	r30, 0x9E	; 158
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:285
*/
/* optimized */
int8_t u8g2_font_decode_get_signed_bits(u8g2_font_decode_t *f, uint8_t cnt)
{
  int8_t v, d;
  v = (int8_t)u8g2_font_decode_get_unsigned_bits(f, cnt);
    370e:	ff 4f       	sbci	r31, 0xFF	; 255
    3710:	b0 80       	ld	r11, Z
u8g2_font_decode_get_signed_bits():
    3712:	6b 2d       	mov	r22, r11
    3714:	c7 01       	movw	r24, r14
    3716:	5d de       	rcall	.-838    	; 0x33d2 <u8g2_font_decode_get_unsigned_bits>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:624
    
  u8g2_font_setup_decode(u8g2, glyph_data);     /* set values in u8g2->font_decode data structure */
  h = u8g2->font_decode.glyph_height;
  
  x = u8g2_font_decode_get_signed_bits(decode, u8g2->font_info.bits_per_char_x);
  y = u8g2_font_decode_get_signed_bits(decode, u8g2->font_info.bits_per_char_y);
    3718:	88 2e       	mov	r8, r24
u8g2_font_decode_glyph():
    371a:	fe 01       	movw	r30, r28
    371c:	ed 59       	subi	r30, 0x9D	; 157
    371e:	ff 4f       	sbci	r31, 0xFF	; 255
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:285
*/
/* optimized */
int8_t u8g2_font_decode_get_signed_bits(u8g2_font_decode_t *f, uint8_t cnt)
{
  int8_t v, d;
  v = (int8_t)u8g2_font_decode_get_unsigned_bits(f, cnt);
    3720:	10 81       	ld	r17, Z
u8g2_font_decode_get_signed_bits():
    3722:	61 2f       	mov	r22, r17
    3724:	c7 01       	movw	r24, r14
    3726:	55 de       	rcall	.-854    	; 0x33d2 <u8g2_font_decode_get_unsigned_bits>
    3728:	98 2e       	mov	r9, r24
u8g2_font_decode_glyph():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:625
  u8g2_font_setup_decode(u8g2, glyph_data);     /* set values in u8g2->font_decode data structure */
  h = u8g2->font_decode.glyph_height;
  
  x = u8g2_font_decode_get_signed_bits(decode, u8g2->font_info.bits_per_char_x);
  y = u8g2_font_decode_get_signed_bits(decode, u8g2->font_info.bits_per_char_y);
  d = u8g2_font_decode_get_signed_bits(decode, u8g2->font_info.bits_per_delta_x);
    372a:	fe 01       	movw	r30, r28
    372c:	ec 59       	subi	r30, 0x9C	; 156
    372e:	ff 4f       	sbci	r31, 0xFF	; 255
    3730:	00 81       	ld	r16, Z
u8g2_font_decode_get_signed_bits():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:285
*/
/* optimized */
int8_t u8g2_font_decode_get_signed_bits(u8g2_font_decode_t *f, uint8_t cnt)
{
  int8_t v, d;
  v = (int8_t)u8g2_font_decode_get_unsigned_bits(f, cnt);
    3732:	60 2f       	mov	r22, r16
    3734:	c7 01       	movw	r24, r14
    3736:	4d de       	rcall	.-870    	; 0x33d2 <u8g2_font_decode_get_unsigned_bits>
    3738:	01 50       	subi	r16, 0x01	; 1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:287
  d = 1;
  cnt--;
    373a:	41 e0       	ldi	r20, 0x01	; 1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:288
  d <<= cnt;
    373c:	50 e0       	ldi	r21, 0x00	; 0
    373e:	9a 01       	movw	r18, r20
    3740:	01 c0       	rjmp	.+2      	; 0x3744 <u8g2_DrawGlyph+0x19c>
    3742:	22 0f       	add	r18, r18
    3744:	0a 95       	dec	r16
    3746:	ea f7       	brpl	.-6      	; 0x3742 <u8g2_DrawGlyph+0x19a>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:289
  v -= d;
    3748:	78 2e       	mov	r7, r24
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:627
  
  x = u8g2_font_decode_get_signed_bits(decode, u8g2->font_info.bits_per_char_x);
  y = u8g2_font_decode_get_signed_bits(decode, u8g2->font_info.bits_per_char_y);
  d = u8g2_font_decode_get_signed_bits(decode, u8g2->font_info.bits_per_delta_x);
  
  if ( decode->glyph_width > 0 )
    374a:	72 1a       	sub	r7, r18
u8g2_font_decode_glyph():
    374c:	f7 01       	movw	r30, r14
    374e:	06 81       	ldd	r16, Z+6	; 0x06
    3750:	10 16       	cp	r1, r16
    3752:	0c f0       	brlt	.+2      	; 0x3756 <u8g2_DrawGlyph+0x1ae>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:287
int8_t u8g2_font_decode_get_signed_bits(u8g2_font_decode_t *f, uint8_t cnt)
{
  int8_t v, d;
  v = (int8_t)u8g2_font_decode_get_unsigned_bits(f, cnt);
  d = 1;
  cnt--;
    3754:	6d cf       	rjmp	.-294    	; 0x3630 <u8g2_DrawGlyph+0x88>
u8g2_font_decode_get_signed_bits():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:288
  d <<= cnt;
    3756:	ba 94       	dec	r11
    3758:	ca 01       	movw	r24, r20
    375a:	01 c0       	rjmp	.+2      	; 0x375e <u8g2_DrawGlyph+0x1b6>
    375c:	88 0f       	add	r24, r24
    375e:	ba 94       	dec	r11
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:289
  v -= d;
    3760:	ea f7       	brpl	.-6      	; 0x375c <u8g2_DrawGlyph+0x1b4>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:630
  d = u8g2_font_decode_get_signed_bits(decode, u8g2->font_info.bits_per_delta_x);
  
  if ( decode->glyph_width > 0 )
  {
#ifdef U8G2_WITH_FONT_ROTATION
    decode->target_x = u8g2_add_vector_x(decode->target_x, x, -(h+y), decode->dir);
    3762:	88 1a       	sub	r8, r24
u8g2_font_decode_glyph():
    3764:	b4 84       	ldd	r11, Z+12	; 0x0c
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:287
int8_t u8g2_font_decode_get_signed_bits(u8g2_font_decode_t *f, uint8_t cnt)
{
  int8_t v, d;
  v = (int8_t)u8g2_font_decode_get_unsigned_bits(f, cnt);
  d = 1;
  cnt--;
    3766:	9a 0c       	add	r9, r10
u8g2_font_decode_get_signed_bits():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:288
  d <<= cnt;
    3768:	11 50       	subi	r17, 0x01	; 1
    376a:	01 c0       	rjmp	.+2      	; 0x376e <u8g2_DrawGlyph+0x1c6>
    376c:	44 0f       	add	r20, r20
    376e:	1a 95       	dec	r17
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:630
  d = u8g2_font_decode_get_signed_bits(decode, u8g2->font_info.bits_per_delta_x);
  
  if ( decode->glyph_width > 0 )
  {
#ifdef U8G2_WITH_FONT_ROTATION
    decode->target_x = u8g2_add_vector_x(decode->target_x, x, -(h+y), decode->dir);
    3770:	ea f7       	brpl	.-6      	; 0x376c <u8g2_DrawGlyph+0x1c4>
u8g2_font_decode_glyph():
    3772:	f4 2f       	mov	r31, r20
    3774:	f9 19       	sub	r31, r9
    3776:	9f 2e       	mov	r9, r31
    3778:	2b 2d       	mov	r18, r11
    377a:	4f 2f       	mov	r20, r31
    377c:	68 2d       	mov	r22, r8
    377e:	f7 01       	movw	r30, r14
    3780:	82 81       	ldd	r24, Z+2	; 0x02
    3782:	b7 dd       	rcall	.-1170   	; 0x32f2 <u8g2_add_vector_x>
    3784:	18 2f       	mov	r17, r24
    3786:	f7 01       	movw	r30, r14
    3788:	82 83       	std	Z+2, r24	; 0x02
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:631
    decode->target_y = u8g2_add_vector_y(decode->target_y, x, -(h+y), decode->dir);
    378a:	2b 2d       	mov	r18, r11
    378c:	49 2d       	mov	r20, r9
    378e:	68 2d       	mov	r22, r8
    3790:	83 81       	ldd	r24, Z+3	; 0x03
    3792:	bc dd       	rcall	.-1160   	; 0x330c <u8g2_add_vector_y>
    3794:	f7 01       	movw	r30, r14
    3796:	83 83       	std	Z+3, r24	; 0x03
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:650
      y0 = decode->target_y;
      x1 = x0;
      y1 = y0;
      
#ifdef U8G2_WITH_FONT_ROTATION
      switch(decode->dir)
    3798:	f1 e0       	ldi	r31, 0x01	; 1
    379a:	bf 16       	cp	r11, r31
    379c:	09 f4       	brne	.+2      	; 0x37a0 <u8g2_DrawGlyph+0x1f8>
    379e:	74 c0       	rjmp	.+232    	; 0x3888 <u8g2_DrawGlyph+0x2e0>
    37a0:	bf 16       	cp	r11, r31
    37a2:	08 f4       	brcc	.+2      	; 0x37a6 <u8g2_DrawGlyph+0x1fe>
    37a4:	3d c0       	rjmp	.+122    	; 0x3820 <u8g2_DrawGlyph+0x278>
    37a6:	22 e0       	ldi	r18, 0x02	; 2
    37a8:	b2 16       	cp	r11, r18
    37aa:	09 f4       	brne	.+2      	; 0x37ae <u8g2_DrawGlyph+0x206>
    37ac:	73 c0       	rjmp	.+230    	; 0x3894 <u8g2_DrawGlyph+0x2ec>
    37ae:	93 e0       	ldi	r25, 0x03	; 3
    37b0:	b9 16       	cp	r11, r25
    37b2:	09 f4       	brne	.+2      	; 0x37b6 <u8g2_DrawGlyph+0x20e>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:647
    {
      u8g2_uint_t x0, x1, y0, y1;
      x0 = decode->target_x;
      y0 = decode->target_y;
      x1 = x0;
      y1 = y0;
    37b4:	7a c0       	rjmp	.+244    	; 0x38aa <u8g2_DrawGlyph+0x302>
u8g2_DrawGlyph():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:646
#ifdef U8G2_WITH_INTERSECTION
    {
      u8g2_uint_t x0, x1, y0, y1;
      x0 = decode->target_x;
      y0 = decode->target_y;
      x1 = x0;
    37b6:	08 2f       	mov	r16, r24
    37b8:	21 2f       	mov	r18, r17
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:807
	break;
      if ( u8x8_pgm_read( font ) == encoding )
      {
	return font+2;	/* skip encoding and glyph size */
      }
      font += u8x8_pgm_read( font + 1 );
    37ba:	36 c0       	rjmp	.+108    	; 0x3828 <u8g2_DrawGlyph+0x280>
u8g2_font_get_glyph_data():
    37bc:	f9 01       	movw	r30, r18
    37be:	24 91       	lpm	r18, Z
    37c0:	82 0f       	add	r24, r18
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:825
//	font = u8g2->last_font_data;
//    }
//    else
//#endif 

    font += u8g2->font_info.start_pos_unicode;
    37c2:	91 1d       	adc	r25, r1
    37c4:	2d cf       	rjmp	.-422    	; 0x3620 <u8g2_DrawGlyph+0x78>
    37c6:	fe 01       	movw	r30, r28
    37c8:	ef 58       	subi	r30, 0x8F	; 143
    37ca:	ff 4f       	sbci	r31, 0xFF	; 255
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:831
    unicode_lookup_table = font; 
  
    /* issue 596: search for the glyph start in the unicode lookup table */
    do
    {
      font += u8g2_font_get_word(unicode_lookup_table, 0);
    37cc:	00 81       	ld	r16, Z
    37ce:	11 81       	ldd	r17, Z+1	; 0x01
    37d0:	08 0f       	add	r16, r24
    37d2:	19 1f       	adc	r17, r25
u8g2_DrawGlyph():
    37d4:	68 01       	movw	r12, r16
u8g2_font_get_glyph_data():
    37d6:	60 e0       	ldi	r22, 0x00	; 0
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:832
      e = u8g2_font_get_word(unicode_lookup_table, 2);
    37d8:	c6 01       	movw	r24, r12
    37da:	26 de       	rcall	.-948    	; 0x3428 <u8g2_font_get_word>
    37dc:	08 0f       	add	r16, r24
    37de:	19 1f       	adc	r17, r25
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:833
      unicode_lookup_table+=4;
    37e0:	62 e0       	ldi	r22, 0x02	; 2
    37e2:	c6 01       	movw	r24, r12
    37e4:	21 de       	rcall	.-958    	; 0x3428 <u8g2_font_get_word>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:834
    } while( e < encoding );
    37e6:	f4 e0       	ldi	r31, 0x04	; 4
    37e8:	cf 0e       	add	r12, r31
    37ea:	d1 1c       	adc	r13, r1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:839
    
  
    for(;;)
    {
      e = u8x8_pgm_read( font );
    37ec:	8e 15       	cp	r24, r14
    37ee:	9f 05       	cpc	r25, r15
    37f0:	90 f3       	brcs	.-28     	; 0x37d6 <u8g2_DrawGlyph+0x22e>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:840
      e <<= 8;
    37f2:	f8 01       	movw	r30, r16
    37f4:	84 91       	lpm	r24, Z
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:841
      e |= u8x8_pgm_read( font + 1 );
    37f6:	90 e0       	ldi	r25, 0x00	; 0
    37f8:	98 2f       	mov	r25, r24
    37fa:	88 27       	eor	r24, r24
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:849
//#ifdef  __unix__
//      if ( encoding < e )
//        break;
//#endif 

      if ( e == 0 )
    37fc:	31 96       	adiw	r30, 0x01	; 1
    37fe:	e4 91       	lpm	r30, Z
    3800:	8e 2b       	or	r24, r30
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:852
	break;
  
      if ( e == encoding )
    3802:	00 97       	sbiw	r24, 0x00	; 0
    3804:	09 f4       	brne	.+2      	; 0x3808 <u8g2_DrawGlyph+0x260>
    3806:	13 cf       	rjmp	.-474    	; 0x362e <u8g2_DrawGlyph+0x86>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:859
// removed, there is now the new index table
//#ifdef  __unix__
//	u8g2->last_font_data = font;
//	u8g2->last_unicode = encoding;
//#endif 
	return font+3;	/* skip encoding and glyph size */
    3808:	e8 16       	cp	r14, r24
    380a:	f9 06       	cpc	r15, r25
    380c:	19 f4       	brne	.+6      	; 0x3814 <u8g2_DrawGlyph+0x26c>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:861
      }
      font += u8x8_pgm_read( font + 2 );
    380e:	c8 01       	movw	r24, r16
    3810:	03 96       	adiw	r24, 0x03	; 3
    3812:	56 cf       	rjmp	.-340    	; 0x36c0 <u8g2_DrawGlyph+0x118>
    3814:	f8 01       	movw	r30, r16
    3816:	32 96       	adiw	r30, 0x02	; 2
    3818:	e4 91       	lpm	r30, Z
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:653
      
#ifdef U8G2_WITH_FONT_ROTATION
      switch(decode->dir)
      {
	case 0:
	    x1 += decode->glyph_width;
    381a:	0e 0f       	add	r16, r30
    381c:	11 1d       	adc	r17, r1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:654
	    y1 += h;
    381e:	e9 cf       	rjmp	.-46     	; 0x37f2 <u8g2_DrawGlyph+0x24a>
u8g2_font_decode_glyph():
    3820:	20 2f       	mov	r18, r16
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:682
#else /* U8G2_WITH_FONT_ROTATION */
      x1 += decode->glyph_width;
      y1 += h;      
#endif
      
      if ( u8g2_IsIntersection(u8g2, x0, y0, x1, y1) == 0 ) 
    3822:	21 0f       	add	r18, r17
    3824:	08 2f       	mov	r16, r24
    3826:	0a 0d       	add	r16, r10
    3828:	48 2f       	mov	r20, r24
    382a:	61 2f       	mov	r22, r17
    382c:	ce 01       	movw	r24, r28
    382e:	00 dc       	rcall	.-2048   	; 0x3030 <u8g2_IsIntersection>
    3830:	88 23       	and	r24, r24
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:688
	return d;
    }
#endif /* U8G2_WITH_INTERSECTION */
   
    /* reset local x/y position */
    decode->x = 0;
    3832:	09 f4       	brne	.+2      	; 0x3836 <u8g2_DrawGlyph+0x28e>
    3834:	fd ce       	rjmp	.-518    	; 0x3630 <u8g2_DrawGlyph+0x88>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:689
    decode->y = 0;
    3836:	f7 01       	movw	r30, r14
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:694
    
    /* decode glyph */
    for(;;)
    {
      a = u8g2_font_decode_get_unsigned_bits(decode, u8g2->font_info.bits_per_0);
    3838:	14 82       	std	Z+4, r1	; 0x04
    383a:	15 82       	std	Z+5, r1	; 0x05
    383c:	8e 01       	movw	r16, r28
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:695
      b = u8g2_font_decode_get_unsigned_bits(decode, u8g2->font_info.bits_per_1);
    383e:	02 5a       	subi	r16, 0xA2	; 162
    3840:	1f 4f       	sbci	r17, 0xFF	; 255
    3842:	4e 01       	movw	r8, r28
    3844:	ff e5       	ldi	r31, 0x5F	; 95
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:694
    decode->y = 0;
    
    /* decode glyph */
    for(;;)
    {
      a = u8g2_font_decode_get_unsigned_bits(decode, u8g2->font_info.bits_per_0);
    3846:	8f 0e       	add	r8, r31
    3848:	91 1c       	adc	r9, r1
    384a:	f8 01       	movw	r30, r16
    384c:	60 81       	ld	r22, Z
    384e:	c7 01       	movw	r24, r14
    3850:	c0 dd       	rcall	.-1152   	; 0x33d2 <u8g2_font_decode_get_unsigned_bits>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:695
      b = u8g2_font_decode_get_unsigned_bits(decode, u8g2->font_info.bits_per_1);
    3852:	68 2e       	mov	r6, r24
    3854:	f4 01       	movw	r30, r8
    3856:	60 81       	ld	r22, Z
    3858:	c7 01       	movw	r24, r14
    385a:	bb dd       	rcall	.-1162   	; 0x33d2 <u8g2_font_decode_get_unsigned_bits>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:698
      do
      {
	u8g2_font_decode_len(u8g2, a, 0);
    385c:	b8 2e       	mov	r11, r24
    385e:	40 e0       	ldi	r20, 0x00	; 0
    3860:	66 2d       	mov	r22, r6
    3862:	ce 01       	movw	r24, r28
    3864:	60 dd       	rcall	.-1344   	; 0x3326 <u8g2_font_decode_len>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:699
	u8g2_font_decode_len(u8g2, b, 1);
    3866:	41 e0       	ldi	r20, 0x01	; 1
    3868:	6b 2d       	mov	r22, r11
    386a:	ce 01       	movw	r24, r28
    386c:	5c dd       	rcall	.-1352   	; 0x3326 <u8g2_font_decode_len>
    386e:	61 e0       	ldi	r22, 0x01	; 1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:700
      } while( u8g2_font_decode_get_unsigned_bits(decode, 1) != 0 );
    3870:	c7 01       	movw	r24, r14
    3872:	af dd       	rcall	.-1186   	; 0x33d2 <u8g2_font_decode_get_unsigned_bits>
    3874:	81 11       	cpse	r24, r1
    3876:	f3 cf       	rjmp	.-26     	; 0x385e <u8g2_DrawGlyph+0x2b6>
    3878:	f7 01       	movw	r30, r14
    387a:	85 81       	ldd	r24, Z+5	; 0x05
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:702

      if ( decode->y >= h )
    387c:	8a 15       	cp	r24, r10
    387e:	2c f3       	brlt	.-54     	; 0x384a <u8g2_DrawGlyph+0x2a2>
    3880:	82 85       	ldd	r24, Z+10	; 0x0a
    3882:	f6 01       	movw	r30, r12
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:707
	break;
    }
    
    /* restore the u8g2 draw color, because this is modified by the decode algo */
    u8g2->draw_color = decode->fg_color;
    3884:	80 83       	st	Z, r24
    3886:	d4 ce       	rjmp	.-600    	; 0x3630 <u8g2_DrawGlyph+0x88>
    3888:	ba 18       	sub	r11, r10
    388a:	21 e0       	ldi	r18, 0x01	; 1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:658
	    x1 += decode->glyph_width;
	    y1 += h;
	    break;
	case 1:
	    x0 -= h;
	    x0++;	/* shift down, because of assymetric boundaries for the interseciton test */
    388c:	21 0f       	add	r18, r17
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:659
	    x1++;
    388e:	08 0f       	add	r16, r24
u8g2_DrawGlyph():
    3890:	1b 0d       	add	r17, r11
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:660
	    y1 += decode->glyph_width;
    3892:	ca cf       	rjmp	.-108    	; 0x3828 <u8g2_DrawGlyph+0x280>
u8g2_font_decode_glyph():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:658
	    x1 += decode->glyph_width;
	    y1 += h;
	    break;
	case 1:
	    x0 -= h;
	    x0++;	/* shift down, because of assymetric boundaries for the interseciton test */
    3894:	91 e0       	ldi	r25, 0x01	; 1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:664
	    x1++;
	    y1 += decode->glyph_width;
	    break;
	case 2:
	    x0 -= decode->glyph_width;
	    x0++;	/* shift down, because of assymetric boundaries for the interseciton test */
    3896:	39 2f       	mov	r19, r25
    3898:	30 1b       	sub	r19, r16
    389a:	21 e0       	ldi	r18, 0x01	; 1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:665
	    x1++;
    389c:	21 0f       	add	r18, r17
    389e:	9a 19       	sub	r25, r10
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:667
	    y0 -= h;
	    y0++;	/* shift down, because of assymetric boundaries for the interseciton test */
    38a0:	01 e0       	ldi	r16, 0x01	; 1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:668
	    y1++;
    38a2:	08 0f       	add	r16, r24
u8g2_DrawGlyph():
    38a4:	89 0f       	add	r24, r25
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:667
	case 2:
	    x0 -= decode->glyph_width;
	    x0++;	/* shift down, because of assymetric boundaries for the interseciton test */
	    x1++;
	    y0 -= h;
	    y0++;	/* shift down, because of assymetric boundaries for the interseciton test */
    38a6:	13 0f       	add	r17, r19
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:664
	    x1++;
	    y1 += decode->glyph_width;
	    break;
	case 2:
	    x0 -= decode->glyph_width;
	    x0++;	/* shift down, because of assymetric boundaries for the interseciton test */
    38a8:	bf cf       	rjmp	.-130    	; 0x3828 <u8g2_DrawGlyph+0x280>
u8g2_font_decode_glyph():
    38aa:	21 2f       	mov	r18, r17
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:671
	    y0 -= h;
	    y0++;	/* shift down, because of assymetric boundaries for the interseciton test */
	    y1++;
	    break;	  
	case 3:
	    x1 += h;
    38ac:	2a 0d       	add	r18, r10
    38ae:	98 2f       	mov	r25, r24
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:673
	    y0 -= decode->glyph_width;
	    y0++;	/* shift down, because of assymetric boundaries for the interseciton test */
    38b0:	90 1b       	sub	r25, r16
    38b2:	01 e0       	ldi	r16, 0x01	; 1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:674
	    y1++;
    38b4:	08 0f       	add	r16, r24
u8g2_DrawGlyph():
    38b6:	81 e0       	ldi	r24, 0x01	; 1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:673
	    y1++;
	    break;	  
	case 3:
	    x1 += h;
	    y0 -= decode->glyph_width;
	    y0++;	/* shift down, because of assymetric boundaries for the interseciton test */
    38b8:	89 0f       	add	r24, r25
    38ba:	b6 cf       	rjmp	.-148    	; 0x3828 <u8g2_DrawGlyph+0x280>

000038bc <u8g2_draw_string.constprop.92>:
u8g2_draw_string():
    38bc:	ff 92       	push	r15
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:967
  y += 2*u8g2->font_calc_vref(u8g2);
  return u8g2_font_2x_draw_glyph(u8g2, x, y, encoding);
}

static u8g2_uint_t u8g2_draw_string(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, const char *str) U8G2_NOINLINE;
static u8g2_uint_t u8g2_draw_string(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, const char *str)
    38be:	0f 93       	push	r16
    38c0:	1f 93       	push	r17
    38c2:	cf 93       	push	r28
    38c4:	df 93       	push	r29
    38c6:	c8 2f       	mov	r28, r24
    38c8:	d6 2f       	mov	r29, r22
u8x8_utf8_init():
    38ca:	10 92 0a 30 	sts	0x300A, r1	; 0x80300a <u8g2+0x1c>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_8x8.c:287
*/

/* reset the internal state machine */
void u8x8_utf8_init(u8x8_t *u8x8)
{
  u8x8->utf8_state = 0;	/* also reset during u8x8_SetupDefaults() */
    38ce:	8a 01       	movw	r16, r20
u8g2_draw_string():
    38d0:	f1 2c       	mov	r15, r1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:972
{
  uint16_t e;
  u8g2_uint_t delta, sum;
  u8x8_utf8_init(u8g2_GetU8x8(u8g2));
  sum = 0;
    38d2:	f8 01       	movw	r30, r16
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:975
  for(;;)
  {
    e = u8g2->u8x8.next_cb(u8g2_GetU8x8(u8g2), (uint8_t)*str);
    38d4:	61 91       	ld	r22, Z+
    38d6:	8f 01       	movw	r16, r30
    38d8:	e0 91 f4 2f 	lds	r30, 0x2FF4	; 0x802ff4 <u8g2+0x6>
    38dc:	f0 91 f5 2f 	lds	r31, 0x2FF5	; 0x802ff5 <u8g2+0x7>
    38e0:	82 ef       	ldi	r24, 0xF2	; 242
    38e2:	9f e2       	ldi	r25, 0x2F	; 47
    38e4:	09 95       	icall
    38e6:	8f 3f       	cpi	r24, 0xFF	; 255
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:976
    if ( e == 0x0ffff )
    38e8:	98 07       	cpc	r25, r24
    38ea:	e9 f0       	breq	.+58     	; 0x3926 <u8g2_draw_string.constprop.92+0x6a>
    38ec:	8e 3f       	cpi	r24, 0xFE	; 254
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:979
      break;
    str++;
    if ( e != 0x0fffe )
    38ee:	2f ef       	ldi	r18, 0xFF	; 255
    38f0:	92 07       	cpc	r25, r18
    38f2:	79 f3       	breq	.-34     	; 0x38d2 <u8g2_draw_string.constprop.92+0x16>
    38f4:	9c 01       	movw	r18, r24
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:981
    {
      delta = u8g2_DrawGlyph(u8g2, x, y, e);
    38f6:	4d 2f       	mov	r20, r29
    38f8:	6c 2f       	mov	r22, r28
    38fa:	82 ef       	ldi	r24, 0xF2	; 242
    38fc:	9f e2       	ldi	r25, 0x2F	; 47
    38fe:	54 de       	rcall	.-856    	; 0x35a8 <u8g2_DrawGlyph>
    3900:	90 91 4d 30 	lds	r25, 0x304D	; 0x80304d <u8g2+0x5f>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:984
    
#ifdef U8G2_WITH_FONT_ROTATION
      switch(u8g2->font_decode.dir)
    3904:	91 30       	cpi	r25, 0x01	; 1
    3906:	49 f0       	breq	.+18     	; 0x391a <u8g2_draw_string.constprop.92+0x5e>
    3908:	30 f0       	brcs	.+12     	; 0x3916 <u8g2_draw_string.constprop.92+0x5a>
    390a:	92 30       	cpi	r25, 0x02	; 2
    390c:	41 f0       	breq	.+16     	; 0x391e <u8g2_draw_string.constprop.92+0x62>
    390e:	93 30       	cpi	r25, 0x03	; 3
    3910:	41 f0       	breq	.+16     	; 0x3922 <u8g2_draw_string.constprop.92+0x66>
    3912:	f8 0e       	add	r15, r24
    3914:	de cf       	rjmp	.-68     	; 0x38d2 <u8g2_draw_string.constprop.92+0x16>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:1010

#else
      x += delta;
#endif

      sum += delta;    
    3916:	c8 0f       	add	r28, r24
    3918:	fc cf       	rjmp	.-8      	; 0x3912 <u8g2_draw_string.constprop.92+0x56>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:987
    
#ifdef U8G2_WITH_FONT_ROTATION
      switch(u8g2->font_decode.dir)
      {
	case 0:
	  x += delta;
    391a:	d8 0f       	add	r29, r24
    391c:	fa cf       	rjmp	.-12     	; 0x3912 <u8g2_draw_string.constprop.92+0x56>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:990
	  break;
	case 1:
	  y += delta;
    391e:	c8 1b       	sub	r28, r24
    3920:	f8 cf       	rjmp	.-16     	; 0x3912 <u8g2_draw_string.constprop.92+0x56>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:993
	  break;
	case 2:
	  x -= delta;
    3922:	d8 1b       	sub	r29, r24
    3924:	f6 cf       	rjmp	.-20     	; 0x3912 <u8g2_draw_string.constprop.92+0x56>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:996
	  break;
	case 3:
	  y -= delta;
    3926:	8f 2d       	mov	r24, r15
    3928:	df 91       	pop	r29
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:1014

      sum += delta;    
    }
  }
  return sum;
}
    392a:	cf 91       	pop	r28
    392c:	1f 91       	pop	r17
    392e:	0f 91       	pop	r16
    3930:	ff 90       	pop	r15
    3932:	08 95       	ret

00003934 <U8G2::drawStr(unsigned char, unsigned char, char const*) [clone .constprop.90]>:
u8g2_DrawStr():
    3934:	23 ed       	ldi	r18, 0xD3	; 211
    3936:	3d e0       	ldi	r19, 0x0D	; 13
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:1041
  return sum;
}

u8g2_uint_t u8g2_DrawStr(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, const char *str)
{
  u8g2->u8x8.next_cb = u8x8_ascii_next;
    3938:	20 93 f4 2f 	sts	0x2FF4, r18	; 0x802ff4 <u8g2+0x6>
    393c:	30 93 f5 2f 	sts	0x2FF5, r19	; 0x802ff5 <u8g2+0x7>
    3940:	bd cf       	rjmp	.-134    	; 0x38bc <u8g2_draw_string.constprop.92>

00003942 <u8g2_SetBufferCurrTileRow>:
u8g2_SetBufferCurrTileRow():
    3942:	cf 93       	push	r28
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_font.c:1042
  return u8g2_draw_string(u8g2, x, y, str);
    3944:	df 93       	push	r29
    3946:	ec 01       	movw	r28, r24
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_buffer.c:101
  u8x8_RefreshDisplay( u8g2_GetU8x8(u8g2) );  
}

/*============================================*/
void u8g2_SetBufferCurrTileRow(u8g2_t *u8g2, uint8_t row)
{
    3948:	6b af       	std	Y+59, r22	; 0x3b
    394a:	ee a9       	ldd	r30, Y+54	; 0x36
    394c:	ff a9       	ldd	r31, Y+55	; 0x37
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_buffer.c:102
  u8g2->tile_curr_row = row;
    394e:	01 90       	ld	r0, Z+
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_buffer.c:103
  u8g2->cb->update_dimension(u8g2);
    3950:	f0 81       	ld	r31, Z
    3952:	e0 2d       	mov	r30, r0
    3954:	09 95       	icall
    3956:	ee a9       	ldd	r30, Y+54	; 0x36
    3958:	ff a9       	ldd	r31, Y+55	; 0x37
    395a:	02 80       	ldd	r0, Z+2	; 0x02
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_buffer.c:104
  u8g2->cb->update_page_win(u8g2);
    395c:	f3 81       	ldd	r31, Z+3	; 0x03
    395e:	e0 2d       	mov	r30, r0
    3960:	ce 01       	movw	r24, r28
    3962:	df 91       	pop	r29
    3964:	cf 91       	pop	r28
    3966:	09 94       	ijmp

00003968 <u8g2_send_buffer>:
u8g2_send_buffer():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_buffer.c:105
}
    3968:	af 92       	push	r10
    396a:	bf 92       	push	r11
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_buffer.c:104
/*============================================*/
void u8g2_SetBufferCurrTileRow(u8g2_t *u8g2, uint8_t row)
{
  u8g2->tile_curr_row = row;
  u8g2->cb->update_dimension(u8g2);
  u8g2->cb->update_page_win(u8g2);
    396c:	cf 92       	push	r12
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_buffer.c:73
  For most displays, this will make the content visible to the user.
  Some displays (like the SSD1606) require a u8x8_RefreshDisplay()
*/
static void u8g2_send_buffer(u8g2_t *u8g2) U8X8_NOINLINE;
static void u8g2_send_buffer(u8g2_t *u8g2)
{
    396e:	df 92       	push	r13
    3970:	ef 92       	push	r14
    3972:	ff 92       	push	r15
    3974:	0f 93       	push	r16
    3976:	1f 93       	push	r17
    3978:	cf 93       	push	r28
    397a:	df 93       	push	r29
    397c:	cd b7       	in	r28, 0x3d	; 61
    397e:	de b7       	in	r29, 0x3e	; 62
    3980:	25 97       	sbiw	r28, 0x05	; 5
    3982:	cd bf       	out	0x3d, r28	; 61
    3984:	de bf       	out	0x3e, r29	; 62
    3986:	8c 01       	movw	r16, r24
    3988:	dc 01       	movw	r26, r24
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_buffer.c:80
  uint8_t src_max;
  uint8_t dest_row;
  uint8_t dest_max;

  src_row = 0;
  src_max = u8g2->tile_buf_height;
    398a:	da 96       	adiw	r26, 0x3a	; 58
    398c:	ac 90       	ld	r10, X
    398e:	da 97       	sbiw	r26, 0x3a	; 58
    3990:	db 96       	adiw	r26, 0x3b	; 59
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_buffer.c:81
  dest_row = u8g2->tile_curr_row;
    3992:	ec 90       	ld	r14, X
    3994:	db 97       	sbiw	r26, 0x3b	; 59
    3996:	ed 91       	ld	r30, X+
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_buffer.c:82
  dest_max = u8g2_GetU8x8(u8g2)->display_info->tile_height;
    3998:	fc 91       	ld	r31, X
    399a:	b1 88       	ldd	r11, Z+17	; 0x11
    399c:	fe 2c       	mov	r15, r14
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_buffer.c:81
  uint8_t dest_row;
  uint8_t dest_max;

  src_row = 0;
  src_max = u8g2->tile_buf_height;
  dest_row = u8g2->tile_curr_row;
    399e:	d1 2c       	mov	r13, r1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_buffer.c:82
  dest_max = u8g2_GetU8x8(u8g2)->display_info->tile_height;
    39a0:	c1 2c       	mov	r12, r1
u8g2_send_tile_row():
    39a2:	d8 01       	movw	r26, r16
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_buffer.c:57
{
  uint8_t *ptr;
  uint16_t offset;
  uint8_t w;
  
  w = u8g2_GetU8x8(u8g2)->display_info->tile_width;
    39a4:	ed 91       	ld	r30, X+
    39a6:	fc 91       	ld	r31, X
    39a8:	11 97       	sbiw	r26, 0x01	; 1
    39aa:	80 89       	ldd	r24, Z+16	; 0x10
    39ac:	d8 96       	adiw	r26, 0x38	; 56
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_buffer.c:59
  offset = src_tile_row;
  ptr = u8g2->tile_buf_ptr;
    39ae:	2d 91       	ld	r18, X+
    39b0:	3c 91       	ld	r19, X
u8x8_DrawTile():
    39b2:	1c 82       	std	Y+4, r1	; 0x04
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_display.c:85
/* official functions */

uint8_t u8x8_DrawTile(u8x8_t *u8x8, uint8_t x, uint8_t y, uint8_t cnt, uint8_t *tile_ptr)
{
  u8x8_tile_t tile;
  tile.x_pos = x;
    39b4:	fd 82       	std	Y+5, r15	; 0x05
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_display.c:86
  tile.y_pos = y;
    39b6:	8b 83       	std	Y+3, r24	; 0x03
u8g2_send_tile_row():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_display.c:87
  tile.cnt = cnt;
    39b8:	b8 e0       	ldi	r27, 0x08	; 8
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_buffer.c:61
  offset *= w;
  offset *= 8;
    39ba:	8b 9f       	mul	r24, r27
    39bc:	c0 01       	movw	r24, r0
    39be:	11 24       	eor	r1, r1
    39c0:	8c 9d       	mul	r24, r12
    39c2:	a0 01       	movw	r20, r0
    39c4:	8d 9d       	mul	r24, r13
    39c6:	50 0d       	add	r21, r0
    39c8:	9c 9d       	mul	r25, r12
    39ca:	50 0d       	add	r21, r0
    39cc:	11 24       	eor	r1, r1
    39ce:	24 0f       	add	r18, r20
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_buffer.c:62
  ptr += offset;
    39d0:	35 1f       	adc	r19, r21
u8x8_DrawTile():
    39d2:	29 83       	std	Y+1, r18	; 0x01
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_display.c:88
  tile.tile_ptr = tile_ptr;
    39d4:	3a 83       	std	Y+2, r19	; 0x02
    39d6:	d8 01       	movw	r26, r16
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8x8_display.c:89
  return u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_DRAW_TILE, 1, (void *)&tile);
    39d8:	14 96       	adiw	r26, 0x04	; 4
    39da:	ed 91       	ld	r30, X+
    39dc:	fc 91       	ld	r31, X
    39de:	9e 01       	movw	r18, r28
    39e0:	2f 5f       	subi	r18, 0xFF	; 255
    39e2:	3f 4f       	sbci	r19, 0xFF	; 255
    39e4:	41 e0       	ldi	r20, 0x01	; 1
    39e6:	6f e0       	ldi	r22, 0x0F	; 15
    39e8:	c8 01       	movw	r24, r16
    39ea:	09 95       	icall
u8g2_send_buffer():
    39ec:	f3 94       	inc	r15
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_buffer.c:88
  
  do
  {
    u8g2_send_tile_row(u8g2, src_row, dest_row);
    src_row++;
    dest_row++;
    39ee:	8f 2d       	mov	r24, r15
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_buffer.c:89
  } while( src_row < src_max && dest_row < dest_max );
    39f0:	8e 19       	sub	r24, r14
    39f2:	8a 15       	cp	r24, r10
    39f4:	28 f4       	brcc	.+10     	; 0x3a00 <u8g2_send_buffer+0x98>
    39f6:	bf ef       	ldi	r27, 0xFF	; 255
    39f8:	cb 1a       	sub	r12, r27
    39fa:	db 0a       	sbc	r13, r27
    39fc:	fb 14       	cp	r15, r11
    39fe:	88 f2       	brcs	.-94     	; 0x39a2 <u8g2_send_buffer+0x3a>
    3a00:	25 96       	adiw	r28, 0x05	; 5
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_buffer.c:90
}
    3a02:	cd bf       	out	0x3d, r28	; 61
    3a04:	de bf       	out	0x3e, r29	; 62
    3a06:	df 91       	pop	r29
    3a08:	cf 91       	pop	r28
    3a0a:	1f 91       	pop	r17
    3a0c:	0f 91       	pop	r16
    3a0e:	ff 90       	pop	r15
    3a10:	ef 90       	pop	r14
    3a12:	df 90       	pop	r13
    3a14:	cf 90       	pop	r12
    3a16:	bf 90       	pop	r11
    3a18:	af 90       	pop	r10
    3a1a:	08 95       	ret

00003a1c <u8g2_SendBuffer.constprop.82>:
u8g2_SendBuffer():
    3a1c:	82 ef       	ldi	r24, 0xF2	; 242
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_buffer.c:95

/* same as u8g2_send_buffer but also send the DISPLAY_REFRESH message (used by SSD1606) */
void u8g2_SendBuffer(u8g2_t *u8g2)
{
  u8g2_send_buffer(u8g2);
    3a1e:	9f e2       	ldi	r25, 0x2F	; 47
    3a20:	a3 df       	rcall	.-186    	; 0x3968 <u8g2_send_buffer>
    3a22:	82 ef       	ldi	r24, 0xF2	; 242
    3a24:	9f e2       	ldi	r25, 0x2F	; 47
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src\clib/u8g2_buffer.c:96
  u8x8_RefreshDisplay( u8g2_GetU8x8(u8g2) );  
    3a26:	4c c9       	rjmp	.-3432   	; 0x2cc0 <u8x8_RefreshDisplay>

00003a28 <u8x8_gpio_and_delay_arduino>:
u8x8_gpio_and_delay_arduino():
    3a28:	0f 93       	push	r16
    3a2a:	1f 93       	push	r17
    3a2c:	cf 93       	push	r28
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:88
/*=== ARDUINO GPIO & DELAY ===*/

#ifdef ARDUINO
#ifdef U8X8_USE_PINS
extern "C" uint8_t u8x8_gpio_and_delay_arduino(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, U8X8_UNUSED void *arg_ptr)
{
    3a2e:	df 93       	push	r29
    3a30:	8c 01       	movw	r16, r24
    3a32:	c6 2f       	mov	r28, r22
    3a34:	64 2f       	mov	r22, r20
    3a36:	cc 32       	cpi	r28, 0x2C	; 44
    3a38:	b8 f4       	brcc	.+46     	; 0x3a68 <u8x8_gpio_and_delay_arduino+0x40>
    3a3a:	ca 32       	cpi	r28, 0x2A	; 42
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:90
  uint8_t i;
  switch(msg)
    3a3c:	f0 f5       	brcc	.+124    	; 0x3aba <u8x8_gpio_and_delay_arduino+0x92>
    3a3e:	c8 32       	cpi	r28, 0x28	; 40
    3a40:	59 f1       	breq	.+86     	; 0x3a98 <u8x8_gpio_and_delay_arduino+0x70>
    3a42:	c9 32       	cpi	r28, 0x29	; 41
    3a44:	09 f4       	brne	.+2      	; 0x3a48 <u8x8_gpio_and_delay_arduino+0x20>
    3a46:	3f c0       	rjmp	.+126    	; 0x3ac6 <u8x8_gpio_and_delay_arduino+0x9e>
    3a48:	80 e0       	ldi	r24, 0x00	; 0
    3a4a:	c0 34       	cpi	r28, 0x40	; 64
    3a4c:	b8 f1       	brcs	.+110    	; 0x3abc <u8x8_gpio_and_delay_arduino+0x94>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:177
	  }
	}
	break;
      }
      
      return 0;
    3a4e:	cf 73       	andi	r28, 0x3F	; 63
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:155
	digitalWrite(u8x8_GetPinValue(u8x8, msg), 1);
#endif 
      }
      break;
    default:
      if ( msg >= U8X8_MSG_GPIO(0) )
    3a50:	f8 01       	movw	r30, r16
    3a52:	ec 0f       	add	r30, r28
    3a54:	f1 1d       	adc	r31, r1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:157
      {
	i = u8x8_GetPinValue(u8x8, msg);
    3a56:	86 8d       	ldd	r24, Z+30	; 0x1e
    3a58:	8f 3f       	cpi	r24, 0xFF	; 255
    3a5a:	79 f1       	breq	.+94     	; 0x3aba <u8x8_gpio_and_delay_arduino+0x92>
    3a5c:	c0 31       	cpi	r28, 0x10	; 16
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:158
	if ( i != U8X8_PIN_NONE )
    3a5e:	08 f0       	brcs	.+2      	; 0x3a62 <u8x8_gpio_and_delay_arduino+0x3a>
    3a60:	4a c0       	rjmp	.+148    	; 0x3af6 <u8x8_gpio_and_delay_arduino+0xce>
digitalWrite():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:160
	{
	  if ( u8x8_GetPinIndex(u8x8, msg) < U8X8_PIN_OUTPUT_CNT )
    3a62:	8b 31       	cpi	r24, 0x1B	; 27
    3a64:	b0 f0       	brcs	.+44     	; 0x3a92 <u8x8_gpio_and_delay_arduino+0x6a>
    3a66:	29 c0       	rjmp	.+82     	; 0x3aba <u8x8_gpio_and_delay_arduino+0x92>
u8x8_gpio_and_delay_arduino():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:137
    3a68:	cd 32       	cpi	r28, 0x2D	; 45
    3a6a:	99 f1       	breq	.+102    	; 0x3ad2 <u8x8_gpio_and_delay_arduino+0xaa>
    3a6c:	68 f3       	brcs	.-38     	; 0x3a48 <u8x8_gpio_and_delay_arduino+0x20>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:90
#ifdef ARDUINO
#ifdef U8X8_USE_PINS
extern "C" uint8_t u8x8_gpio_and_delay_arduino(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, U8X8_UNUSED void *arg_ptr)
{
  uint8_t i;
  switch(msg)
    3a6e:	84 eb       	ldi	r24, 0xB4	; 180
    3a70:	8c 0f       	add	r24, r28
    3a72:	82 30       	cpi	r24, 0x02	; 2
    3a74:	48 f7       	brcc	.-46     	; 0x3a48 <u8x8_gpio_and_delay_arduino+0x20>
    3a76:	cf 73       	andi	r28, 0x3F	; 63
    3a78:	c0 0f       	add	r28, r16
    3a7a:	d1 2f       	mov	r29, r17
    3a7c:	d1 1d       	adc	r29, r1
    3a7e:	8e 8d       	ldd	r24, Y+30	; 0x1e
    3a80:	41 11       	cpse	r20, r1
    3a82:	35 c0       	rjmp	.+106    	; 0x3aee <u8x8_gpio_and_delay_arduino+0xc6>
    3a84:	61 e0       	ldi	r22, 0x01	; 1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:139
      /* arg_int is 1 or 4: 100KHz (5us) or 400KHz (1.25us) */
      delayMicroseconds(arg_int<=2?5:2);
      break;
    case U8X8_MSG_GPIO_I2C_CLOCK:
    case U8X8_MSG_GPIO_I2C_DATA:
      if ( arg_int == 0 )
    3a86:	0e 94 9e 0e 	call	0x1d3c	; 0x1d3c <pinMode>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:141
      {
	pinMode(u8x8_GetPinValue(u8x8, msg), OUTPUT);
    3a8a:	8e 8d       	ldd	r24, Y+30	; 0x1e
digitalWrite():
    3a8c:	60 e0       	ldi	r22, 0x00	; 0
    3a8e:	8b 31       	cpi	r24, 0x1B	; 27
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:142
	digitalWrite(u8x8_GetPinValue(u8x8, msg), 0);
    3a90:	a0 f4       	brcc	.+40     	; 0x3aba <u8x8_gpio_and_delay_arduino+0x92>
    3a92:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <digitalWrite.part.2>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring_digital.c:137
    3a96:	11 c0       	rjmp	.+34     	; 0x3aba <u8x8_gpio_and_delay_arduino+0x92>
    3a98:	02 5e       	subi	r16, 0xE2	; 226
    3a9a:	1f 4f       	sbci	r17, 0xFF	; 255
u8x8_gpio_and_delay_arduino():
    3a9c:	d0 e0       	ldi	r29, 0x00	; 0
    3a9e:	f8 01       	movw	r30, r16
    3aa0:	81 91       	ld	r24, Z+
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:94
  uint8_t i;
  switch(msg)
  {
    case U8X8_MSG_GPIO_AND_DELAY_INIT:
    
      for( i = 0; i < U8X8_PIN_CNT; i++ )
    3aa2:	8f 01       	movw	r16, r30
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:95
	if ( u8x8->pins[i] != U8X8_PIN_NONE )
    3aa4:	8f 3f       	cpi	r24, 0xFF	; 255
    3aa6:	31 f0       	breq	.+12     	; 0x3ab4 <u8x8_gpio_and_delay_arduino+0x8c>
    3aa8:	61 e0       	ldi	r22, 0x01	; 1
    3aaa:	d0 31       	cpi	r29, 0x10	; 16
    3aac:	08 f0       	brcs	.+2      	; 0x3ab0 <u8x8_gpio_and_delay_arduino+0x88>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:99
	{
	  if ( i < U8X8_PIN_OUTPUT_CNT )
	  {
	    pinMode(u8x8->pins[i], OUTPUT);
    3aae:	62 e0       	ldi	r22, 0x02	; 2
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:97
    case U8X8_MSG_GPIO_AND_DELAY_INIT:
    
      for( i = 0; i < U8X8_PIN_CNT; i++ )
	if ( u8x8->pins[i] != U8X8_PIN_NONE )
	{
	  if ( i < U8X8_PIN_OUTPUT_CNT )
    3ab0:	0e 94 9e 0e 	call	0x1d3c	; 0x1d3c <pinMode>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:104
	    pinMode(u8x8->pins[i], OUTPUT);
	  }
	  else
	  {
#ifdef INPUT_PULLUP
	    pinMode(u8x8->pins[i], INPUT_PULLUP);
    3ab4:	df 5f       	subi	r29, 0xFF	; 255
    3ab6:	d6 31       	cpi	r29, 0x16	; 22
    3ab8:	91 f7       	brne	.-28     	; 0x3a9e <u8x8_gpio_and_delay_arduino+0x76>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:94
  uint8_t i;
  switch(msg)
  {
    case U8X8_MSG_GPIO_AND_DELAY_INIT:
    
      for( i = 0; i < U8X8_PIN_CNT; i++ )
    3aba:	81 e0       	ldi	r24, 0x01	; 1
    3abc:	df 91       	pop	r29
    3abe:	cf 91       	pop	r28
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:179
	break;
      }
      
      return 0;
  }
  return 1;
    3ac0:	1f 91       	pop	r17
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:180
}
    3ac2:	0f 91       	pop	r16
    3ac4:	08 95       	ret
    3ac6:	70 e0       	ldi	r23, 0x00	; 0
    3ac8:	90 e0       	ldi	r25, 0x00	; 0
    3aca:	80 e0       	ldi	r24, 0x00	; 0
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:131
    case U8X8_MSG_DELAY_100NANO:
      /* not used at the moment */
      break;
   
    case U8X8_MSG_DELAY_MILLI:
      delay(arg_int);
    3acc:	0e 94 59 0f 	call	0x1eb2	; 0x1eb2 <delay>
    3ad0:	f4 cf       	rjmp	.-24     	; 0x3aba <u8x8_gpio_and_delay_arduino+0x92>
    3ad2:	85 e0       	ldi	r24, 0x05	; 5
    3ad4:	90 e0       	ldi	r25, 0x00	; 0
    3ad6:	43 30       	cpi	r20, 0x03	; 3
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:135
      break;
    case U8X8_MSG_DELAY_I2C:
      /* arg_int is 1 or 4: 100KHz (5us) or 400KHz (1.25us) */
      delayMicroseconds(arg_int<=2?5:2);
    3ad8:	10 f0       	brcs	.+4      	; 0x3ade <u8x8_gpio_and_delay_arduino+0xb6>
    3ada:	82 e0       	ldi	r24, 0x02	; 2
    3adc:	90 e0       	ldi	r25, 0x00	; 0
delayMicroseconds():
    3ade:	88 0f       	add	r24, r24
    3ae0:	99 1f       	adc	r25, r25
    3ae2:	88 0f       	add	r24, r24
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring.c:223
  if (us <= 1) return; //  = 3 cycles, (4 when true)

  // the following loop takes 1/4 of a microsecond (4 cycles)
  // per iteration, so execute it four times for each microsecond of
  // delay requested.
  us <<= 2; // x4 us, = 4 cycles
    3ae4:	99 1f       	adc	r25, r25
    3ae6:	05 97       	sbiw	r24, 0x05	; 5
    3ae8:	01 97       	sbiw	r24, 0x01	; 1
    3aea:	f1 f7       	brne	.-4      	; 0x3ae8 <u8x8_gpio_and_delay_arduino+0xc0>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring.c:228

  // account for the time taken in the preceeding commands.
  // we just burned 19 (21) cycles above, remove 5, (5*4=20)
  // us is at least 8 so we can substract 5
  us -= 5; // = 2 cycles,
    3aec:	e6 cf       	rjmp	.-52     	; 0x3aba <u8x8_gpio_and_delay_arduino+0x92>
u8x8_gpio_and_delay_arduino():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring.c:325
  us >>= 2; // us div 4, = 4 cycles

#endif

  // busy wait
  __asm__ __volatile__(
    3aee:	62 e0       	ldi	r22, 0x02	; 2
    3af0:	0e 94 9e 0e 	call	0x1d3c	; 0x1d3c <pinMode>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:147
	digitalWrite(u8x8_GetPinValue(u8x8, msg), 0);
      }
      else
      {
#ifdef INPUT_PULLUP
	pinMode(u8x8_GetPinValue(u8x8, msg), INPUT_PULLUP);
    3af4:	e2 cf       	rjmp	.-60     	; 0x3aba <u8x8_gpio_and_delay_arduino+0x92>
    3af6:	0e 94 10 0f 	call	0x1e20	; 0x1e20 <digitalRead>
    3afa:	91 e0       	ldi	r25, 0x01	; 1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8x8lib.cpp:171
	    if ( u8x8_GetPinIndex(u8x8, msg) == U8X8_PIN_OUTPUT_CNT )
	    {
	      // call yield() for the first pin only, u8x8 will always request all the pins, so this should be ok
	      yield();
	    }
	    u8x8_SetGPIOResult(u8x8, digitalRead(i) == 0 ? 0 : 1);
    3afc:	81 11       	cpse	r24, r1
    3afe:	01 c0       	rjmp	.+2      	; 0x3b02 <u8x8_gpio_and_delay_arduino+0xda>
    3b00:	90 e0       	ldi	r25, 0x00	; 0
    3b02:	f8 01       	movw	r30, r16
    3b04:	91 8f       	std	Z+25, r25	; 0x19
    3b06:	d9 cf       	rjmp	.-78     	; 0x3aba <u8x8_gpio_and_delay_arduino+0x92>

00003b08 <TWI_MasterWriteRead.part.2>:
TWI_MasterWriteRead.part.2():
    3b08:	0f 93       	push	r16
    3b0a:	91 e0       	ldi	r25, 0x01	; 1
    3b0c:	90 93 81 29 	sts	0x2981, r25	; 0x802981 <master_trans_status>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src\utility/twi.c:317
    return false;

  /*Initiate transaction if bus is ready. */
  if (master_trans_status == TWIM_STATUS_READY)
  {
    master_trans_status = TWIM_STATUS_BUSY;
    3b10:	10 92 80 29 	sts	0x2980, r1	; 0x802980 <master_result>
    3b14:	60 93 d4 28 	sts	0x28D4, r22	; 0x8028d4 <master_writeData>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src\utility/twi.c:318
    master_result = TWIM_RESULT_UNKNOWN;
    3b18:	70 93 d5 28 	sts	0x28D5, r23	; 0x8028d5 <master_writeData+0x1>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src\utility/twi.c:320

    master_writeData = write_data;
    3b1c:	40 93 d3 28 	sts	0x28D3, r20	; 0x8028d3 <master_bytesToWrite>
    3b20:	20 93 d2 28 	sts	0x28D2, r18	; 0x8028d2 <master_bytesToRead>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src\utility/twi.c:322

    master_bytesToWrite = bytes_to_write;
    3b24:	10 92 82 29 	sts	0x2982, r1	; 0x802982 <master_bytesWritten>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src\utility/twi.c:323
    master_bytesToRead = bytes_to_read;
    3b28:	10 92 83 29 	sts	0x2983, r1	; 0x802983 <master_bytesRead>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src\utility/twi.c:324
    master_bytesWritten = 0;
    3b2c:	00 93 d1 28 	sts	0x28D1, r16	; 0x8028d1 <master_sendStop>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src\utility/twi.c:325
    master_bytesRead = 0;
    3b30:	88 0f       	add	r24, r24
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src\utility/twi.c:326
    master_sendStop = send_stop;
    3b32:	80 93 d0 28 	sts	0x28D0, r24	; 0x8028d0 <master_slaveAddress>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src\utility/twi.c:327
    master_slaveAddress = slave_address << 1;
    3b36:	93 e0       	ldi	r25, 0x03	; 3
    3b38:	24 e0       	ldi	r18, 0x04	; 4
    3b3a:	80 91 d3 28 	lds	r24, 0x28D3	; 0x8028d3 <master_bytesToWrite>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src\utility/twi.c:346
    /* If read command, send the START condition + Address +
     * 'R/_W = 1'
     */
    else if (master_bytesToRead > 0)
    {
      twi_mode = TWI_MODE_MASTER_RECEIVE;
    3b3e:	88 23       	and	r24, r24
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src\utility/twi.c:334
  trigger_action:

    /* If write command, send the START condition + Address +
     * 'R/_W = 0'
     */
    if (master_bytesToWrite > 0)
    3b40:	31 f0       	breq	.+12     	; 0x3b4e <TWI_MasterWriteRead.part.2+0x46>
    3b42:	90 93 84 29 	sts	0x2984, r25	; 0x802984 <twi_mode>
    3b46:	80 91 d0 28 	lds	r24, 0x28D0	; 0x8028d0 <master_slaveAddress>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src\utility/twi.c:353
      TWI0.MADDR = readAddress;
    }

    else if (master_bytesToWrite == 0 && master_bytesToRead == 0)
    {
      twi_mode = TWI_MODE_MASTER_TRANSMIT;
    3b4a:	8e 7f       	andi	r24, 0xFE	; 254
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src\utility/twi.c:354
      uint8_t writeAddress = ADD_WRITE_BIT(master_slaveAddress);
    3b4c:	09 c0       	rjmp	.+18     	; 0x3b60 <TWI_MasterWriteRead.part.2+0x58>
    3b4e:	80 91 d2 28 	lds	r24, 0x28D2	; 0x8028d2 <master_bytesToRead>
    3b52:	88 23       	and	r24, r24
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src\utility/twi.c:344
    }

    /* If read command, send the START condition + Address +
     * 'R/_W = 1'
     */
    else if (master_bytesToRead > 0)
    3b54:	41 f0       	breq	.+16     	; 0x3b66 <TWI_MasterWriteRead.part.2+0x5e>
    3b56:	20 93 84 29 	sts	0x2984, r18	; 0x802984 <twi_mode>
    3b5a:	80 91 d0 28 	lds	r24, 0x28D0	; 0x8028d0 <master_slaveAddress>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src\utility/twi.c:346
    {
      twi_mode = TWI_MODE_MASTER_RECEIVE;
    3b5e:	81 60       	ori	r24, 0x01	; 1
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src\utility/twi.c:347
      uint8_t readAddress = ADD_READ_BIT(master_slaveAddress);
    3b60:	80 93 a7 08 	sts	0x08A7, r24	; 0x8008a7 <__TEXT_REGION_LENGTH__+0x7f48a7>
    3b64:	08 c0       	rjmp	.+16     	; 0x3b76 <TWI_MasterWriteRead.part.2+0x6e>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src\utility/twi.c:355

    else if (master_bytesToWrite == 0 && master_bytesToRead == 0)
    {
      twi_mode = TWI_MODE_MASTER_TRANSMIT;
      uint8_t writeAddress = ADD_WRITE_BIT(master_slaveAddress);
      TWI0.MADDR = writeAddress;
    3b66:	80 91 d3 28 	lds	r24, 0x28D3	; 0x8028d3 <master_bytesToWrite>
    3b6a:	81 11       	cpse	r24, r1
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src\utility/twi.c:351
      twi_mode = TWI_MODE_MASTER_RECEIVE;
      uint8_t readAddress = ADD_READ_BIT(master_slaveAddress);
      TWI0.MADDR = readAddress;
    }

    else if (master_bytesToWrite == 0 && master_bytesToRead == 0)
    3b6c:	04 c0       	rjmp	.+8      	; 0x3b76 <TWI_MasterWriteRead.part.2+0x6e>
    3b6e:	80 91 d2 28 	lds	r24, 0x28D2	; 0x8028d2 <master_bytesToRead>
    3b72:	88 23       	and	r24, r24
    3b74:	31 f3       	breq	.-52     	; 0x3b42 <TWI_MasterWriteRead.part.2+0x3a>
    3b76:	80 91 80 29 	lds	r24, 0x2980	; 0x802980 <master_result>
    3b7a:	88 23       	and	r24, r24
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src\utility/twi.c:359
      uint8_t writeAddress = ADD_WRITE_BIT(master_slaveAddress);
      TWI0.MADDR = writeAddress;
    }

    /* Arduino requires blocking function */
    while (master_result == TWIM_RESULT_UNKNOWN)
    3b7c:	e1 f3       	breq	.-8      	; 0x3b76 <TWI_MasterWriteRead.part.2+0x6e>
    3b7e:	80 91 80 29 	lds	r24, 0x2980	; 0x802980 <master_result>
    3b82:	83 30       	cpi	r24, 0x03	; 3
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src\utility/twi.c:364
    {
    }

    // in case of arbitration lost, retry sending
    if (master_result == TWIM_RESULT_ARBITRATION_LOST)
    3b84:	d1 f2       	breq	.-76     	; 0x3b3a <TWI_MasterWriteRead.part.2+0x32>
    3b86:	80 91 d2 28 	lds	r24, 0x28D2	; 0x8028d2 <master_bytesToRead>
    3b8a:	88 23       	and	r24, r24
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src\utility/twi.c:370
    {
      goto trigger_action;
    }

    uint8_t ret = 0;
    if (master_bytesToRead > 0)
    3b8c:	21 f0       	breq	.+8      	; 0x3b96 <TWI_MasterWriteRead.part.2+0x8e>
    3b8e:	80 91 83 29 	lds	r24, 0x2983	; 0x802983 <master_bytesRead>
    3b92:	0f 91       	pop	r16
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src\utility/twi.c:373
    {
      // return bytes really read
      ret = master_bytesRead;
    3b94:	08 95       	ret
    3b96:	90 91 80 29 	lds	r25, 0x2980	; 0x802980 <master_result>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src\utility/twi.c:387
  }
  else
  {
    return 1;
  }
}
    3b9a:	81 e0       	ldi	r24, 0x01	; 1
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src\utility/twi.c:378
      ret = master_bytesRead;
    }
    else
    {
      // return 0 if success, 1 otherwise
      ret = (master_result == TWIM_RESULT_OK ? 0 : 1);
    3b9c:	91 30       	cpi	r25, 0x01	; 1
    3b9e:	c9 f7       	brne	.-14     	; 0x3b92 <TWI_MasterWriteRead.part.2+0x8a>
    3ba0:	80 e0       	ldi	r24, 0x00	; 0
    3ba2:	f7 cf       	rjmp	.-18     	; 0x3b92 <TWI_MasterWriteRead.part.2+0x8a>

00003ba4 <TWI_SlaveTransactionFinished>:
TWI_SlaveTransactionFinished():
    3ba4:	e0 ea       	ldi	r30, 0xA0	; 160
    3ba6:	f8 e0       	ldi	r31, 0x08	; 8
    3ba8:	91 85       	ldd	r25, Z+9	; 0x09
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src\utility/twi.c:825
 *
 *  \param result  The result of the operation.
 */
void TWI_SlaveTransactionFinished(uint8_t result)
{
  TWI0.SCTRLA |= (TWI_APIEN_bm | TWI_PIEN_bm);
    3baa:	90 66       	ori	r25, 0x60	; 96
    3bac:	91 87       	std	Z+9, r25	; 0x09
    3bae:	92 e0       	ldi	r25, 0x02	; 2
    3bb0:	90 93 84 29 	sts	0x2984, r25	; 0x802984 <twi_mode>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src\utility/twi.c:826
  twi_mode = TWI_MODE_SLAVE;
    3bb4:	80 93 c8 28 	sts	0x28C8, r24	; 0x8028c8 <slave_result>
    3bb8:	10 92 c7 28 	sts	0x28C7, r1	; 0x8028c7 <slave_trans_status>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src\utility/twi.c:827
  slave_result = result;
    3bbc:	08 95       	ret

00003bbe <TWI_SlaveAddressMatchHandler>:
TWI_SlaveAddressMatchHandler():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src\utility/twi.c:828
  slave_trans_status = TWIM_STATUS_READY;
    3bbe:	81 e0       	ldi	r24, 0x01	; 1
    3bc0:	80 93 c7 28 	sts	0x28C7, r24	; 0x8028c7 <slave_trans_status>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src\utility/twi.c:669
 *  being addressed by a master
 *
 */
void TWI_SlaveAddressMatchHandler()
{
  slave_trans_status = TWIS_STATUS_BUSY;
    3bc4:	10 92 c8 28 	sts	0x28C8, r1	; 0x8028c8 <slave_result>
    3bc8:	93 e0       	ldi	r25, 0x03	; 3
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src\utility/twi.c:670
  slave_result = TWIS_RESULT_UNKNOWN;
    3bca:	90 93 aa 08 	sts	0x08AA, r25	; 0x8008aa <__TEXT_REGION_LENGTH__+0x7f48aa>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src\utility/twi.c:673

  /* Send ACK, wait for data interrupt */
  TWI0.SCTRLB = TWI_SCMD_RESPONSE_gc;
    3bce:	90 91 ab 08 	lds	r25, 0x08AB	; 0x8008ab <__TEXT_REGION_LENGTH__+0x7f48ab>
    3bd2:	91 ff       	sbrs	r25, 1
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src\utility/twi.c:676

  /* If Master Read/Slave Write */
  if (TWI0.SSTATUS & TWI_DIR_bm)
    3bd4:	0b c0       	rjmp	.+22     	; 0x3bec <TWI_SlaveAddressMatchHandler+0x2e>
    3bd6:	10 92 ce 28 	sts	0x28CE, r1	; 0x8028ce <slave_bytesWritten>
    3bda:	f0 e0       	ldi	r31, 0x00	; 0
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src\utility/twi.c:678
  {
    slave_bytesWritten = 0;
    3bdc:	e0 e0       	ldi	r30, 0x00	; 0
    3bde:	09 95       	icall
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src\utility/twi.c:680
    /* Call user function  */
    slave_bytesToWrite = TWI_onSlaveTransmit();
    3be0:	80 93 cd 28 	sts	0x28CD, r24	; 0x8028cd <slave_bytesToWrite>
    3be4:	85 e0       	ldi	r24, 0x05	; 5
    3be6:	80 93 84 29 	sts	0x2984, r24	; 0x802984 <twi_mode>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src\utility/twi.c:681
    twi_mode = TWI_MODE_SLAVE_TRANSMIT;
    3bea:	08 95       	ret
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src\utility/twi.c:688
  /* If Master Write/Slave Read */
  else
  {
    slave_bytesRead = 0;
    slave_callUserReceive = 1;
    twi_mode = TWI_MODE_SLAVE_RECEIVE;
    3bec:	10 92 cf 28 	sts	0x28CF, r1	; 0x8028cf <slave_bytesRead>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src\utility/twi.c:692
  }

  /* Data interrupt to follow... */
}
    3bf0:	80 93 cc 28 	sts	0x28CC, r24	; 0x8028cc <slave_callUserReceive>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src\utility/twi.c:686
    twi_mode = TWI_MODE_SLAVE_TRANSMIT;
  }
  /* If Master Write/Slave Read */
  else
  {
    slave_bytesRead = 0;
    3bf4:	86 e0       	ldi	r24, 0x06	; 6
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src\utility/twi.c:687
    slave_callUserReceive = 1;
    3bf6:	f7 cf       	rjmp	.-18     	; 0x3be6 <TWI_SlaveAddressMatchHandler+0x28>

00003bf8 <TwoWire::peek()>:
peek():
    3bf8:	e0 91 88 29 	lds	r30, 0x2988	; 0x802988 <TwoWire::rxBufferIndex>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src\utility/twi.c:688
    twi_mode = TWI_MODE_SLAVE_RECEIVE;
    3bfc:	80 91 87 29 	lds	r24, 0x2987	; 0x802987 <TwoWire::rxBufferLength>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src/Wire.cpp:332
// or after requestFrom(address, numBytes)
int TwoWire::peek()
{
  int value = -1;

  if (rxBufferIndex < rxBufferLength)
    3c00:	e8 17       	cp	r30, r24
    3c02:	30 f4       	brcc	.+12     	; 0x3c10 <TwoWire::peek()+0x18>
    3c04:	f0 e0       	ldi	r31, 0x00	; 0
    3c06:	e9 57       	subi	r30, 0x79	; 121
    3c08:	f7 4d       	sbci	r31, 0xD7	; 215
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src/Wire.cpp:334
  {
    value = rxBuffer[rxBufferIndex];
    3c0a:	80 81       	ld	r24, Z
    3c0c:	90 e0       	ldi	r25, 0x00	; 0
    3c0e:	08 95       	ret
    3c10:	8f ef       	ldi	r24, 0xFF	; 255
    3c12:	9f ef       	ldi	r25, 0xFF	; 255
    3c14:	08 95       	ret

00003c16 <TwoWire::read()>:
read():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src/Wire.cpp:330
// must be called in:
// slave rx event callback
// or after requestFrom(address, numBytes)
int TwoWire::peek()
{
  int value = -1;
    3c16:	90 91 88 29 	lds	r25, 0x2988	; 0x802988 <TwoWire::rxBufferIndex>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src/Wire.cpp:338
  {
    value = rxBuffer[rxBufferIndex];
  }

  return value;
}
    3c1a:	80 91 87 29 	lds	r24, 0x2987	; 0x802987 <TwoWire::rxBufferLength>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src/Wire.cpp:316
int TwoWire::read()
{
  int value = -1;

  // get each successive byte on each call
  if (rxBufferIndex < rxBufferLength)
    3c1e:	2f ef       	ldi	r18, 0xFF	; 255
    3c20:	3f ef       	ldi	r19, 0xFF	; 255
    3c22:	98 17       	cp	r25, r24
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src/Wire.cpp:313
// must be called in:
// slave rx event callback
// or after requestFrom(address, numBytes)
int TwoWire::read()
{
  int value = -1;
    3c24:	48 f4       	brcc	.+18     	; 0x3c38 <TwoWire::read()+0x22>
    3c26:	e9 2f       	mov	r30, r25
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src/Wire.cpp:316

  // get each successive byte on each call
  if (rxBufferIndex < rxBufferLength)
    3c28:	f0 e0       	ldi	r31, 0x00	; 0
    3c2a:	e9 57       	subi	r30, 0x79	; 121
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src/Wire.cpp:318
  {
    value = rxBuffer[rxBufferIndex];
    3c2c:	f7 4d       	sbci	r31, 0xD7	; 215
    3c2e:	20 81       	ld	r18, Z
    3c30:	30 e0       	ldi	r19, 0x00	; 0
    3c32:	9f 5f       	subi	r25, 0xFF	; 255
    3c34:	90 93 88 29 	sts	0x2988, r25	; 0x802988 <TwoWire::rxBufferIndex>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src/Wire.cpp:319
    rxBufferIndex++;
    3c38:	c9 01       	movw	r24, r18
    3c3a:	08 95       	ret

00003c3c <TwoWire::available()>:
available():
    3c3c:	80 91 87 29 	lds	r24, 0x2987	; 0x802987 <TwoWire::rxBufferLength>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src/Wire.cpp:323
  }

  return value;
}
    3c40:	90 91 88 29 	lds	r25, 0x2988	; 0x802988 <TwoWire::rxBufferIndex>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src/Wire.cpp:305
// must be called in:
// slave rx event callback
// or after requestFrom(address, numBytes)
int TwoWire::available()
{
  return rxBufferLength - rxBufferIndex;
    3c44:	89 1b       	sub	r24, r25
    3c46:	99 0b       	sbc	r25, r25
    3c48:	08 95       	ret

00003c4a <TwoWire::write(unsigned char const*, unsigned int)>:
write():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src/Wire.cpp:306
}
    3c4a:	cf 92       	push	r12
    3c4c:	df 92       	push	r13
    3c4e:	ef 92       	push	r14
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src/Wire.cpp:291

// must be called in:
// slave tx event callback
// or after beginTransmission(address)
size_t TwoWire::write(const uint8_t *data, size_t quantity)
{
    3c50:	ff 92       	push	r15
    3c52:	0f 93       	push	r16
    3c54:	1f 93       	push	r17
    3c56:	cf 93       	push	r28
    3c58:	df 93       	push	r29
    3c5a:	7c 01       	movw	r14, r24
    3c5c:	8a 01       	movw	r16, r20
    3c5e:	eb 01       	movw	r28, r22
    3c60:	6b 01       	movw	r12, r22
    3c62:	c4 0e       	add	r12, r20
    3c64:	d5 1e       	adc	r13, r21
    3c66:	cc 15       	cp	r28, r12
    3c68:	dd 05       	cpc	r29, r13
    3c6a:	51 f0       	breq	.+20     	; 0x3c80 <TwoWire::write(unsigned char const*, unsigned int)+0x36>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src/Wire.cpp:292
  for (size_t i = 0; i < quantity; i++)
    3c6c:	69 91       	ld	r22, Y+
    3c6e:	d7 01       	movw	r26, r14
    3c70:	ed 91       	ld	r30, X+
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src/Wire.cpp:294
  {
    write(*(data + i));
    3c72:	fc 91       	ld	r31, X
    3c74:	01 90       	ld	r0, Z+
    3c76:	f0 81       	ld	r31, Z
    3c78:	e0 2d       	mov	r30, r0
    3c7a:	c7 01       	movw	r24, r14
    3c7c:	09 95       	icall
    3c7e:	f3 cf       	rjmp	.-26     	; 0x3c66 <TwoWire::write(unsigned char const*, unsigned int)+0x1c>
    3c80:	c8 01       	movw	r24, r16
    3c82:	df 91       	pop	r29
    3c84:	cf 91       	pop	r28
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src/Wire.cpp:298
  }

  return quantity;
}
    3c86:	1f 91       	pop	r17
    3c88:	0f 91       	pop	r16
    3c8a:	ff 90       	pop	r15
    3c8c:	ef 90       	pop	r14
    3c8e:	df 90       	pop	r13
    3c90:	cf 90       	pop	r12
    3c92:	08 95       	ret

00003c94 <TwoWire::write(unsigned char)>:
    3c94:	20 91 85 29 	lds	r18, 0x2985	; 0x802985 <TwoWire::txBufferLength>
    3c98:	20 34       	cpi	r18, 0x40	; 64
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src/Wire.cpp:271
// slave tx event callback
// or after beginTransmission(address)
size_t TwoWire::write(uint8_t data)
{
  /* Check if buffer is full */
  if (txBufferLength >= TWI_BUFFER_SIZE)
    3c9a:	40 f0       	brcs	.+16     	; 0x3cac <TwoWire::write(unsigned char)+0x18>
_ZN5Print13setWriteErrorEi():
    3c9c:	21 e0       	ldi	r18, 0x01	; 1
    3c9e:	30 e0       	ldi	r19, 0x00	; 0
    3ca0:	fc 01       	movw	r30, r24
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/Print.h:39
    3ca2:	22 83       	std	Z+2, r18	; 0x02
    3ca4:	33 83       	std	Z+3, r19	; 0x03
write():
    3ca6:	90 e0       	ldi	r25, 0x00	; 0
    3ca8:	80 e0       	ldi	r24, 0x00	; 0
    3caa:	08 95       	ret
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src/Wire.cpp:274
  {
    setWriteError();
    return 0;
    3cac:	80 91 86 29 	lds	r24, 0x2986	; 0x802986 <TwoWire::txBufferIndex>
    3cb0:	e8 2f       	mov	r30, r24
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src/Wire.cpp:278
  }

  /* Put byte in txBuffer */
  txBuffer[txBufferIndex] = data;
    3cb2:	f0 e0       	ldi	r31, 0x00	; 0
    3cb4:	e9 5b       	subi	r30, 0xB9	; 185
    3cb6:	f7 4d       	sbci	r31, 0xD7	; 215
    3cb8:	60 83       	st	Z, r22
    3cba:	8f 5f       	subi	r24, 0xFF	; 255
    3cbc:	80 93 86 29 	sts	0x2986, r24	; 0x802986 <TwoWire::txBufferIndex>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src/Wire.cpp:279
  txBufferIndex++;
    3cc0:	80 93 85 29 	sts	0x2985, r24	; 0x802985 <TwoWire::txBufferLength>
    3cc4:	81 e0       	ldi	r24, 0x01	; 1
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src/Wire.cpp:282

  /* Update buffer length */
  txBufferLength = txBufferIndex;
    3cc6:	90 e0       	ldi	r25, 0x00	; 0
    3cc8:	08 95       	ret

00003cca <Eclass::encode_increment() [clone .part.1]>:
_ZN6Eclass16encode_incrementEv.part.1():
    3cca:	80 91 45 28 	lds	r24, 0x2845	; 0x802845 <encoderPos>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src/Wire.cpp:285

  return 1;
}
    3cce:	90 91 46 28 	lds	r25, 0x2846	; 0x802846 <encoderPos+0x1>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/Enco.cpp:31
//------------------------------ENCODER POSITION CHANGE ------------------------------//
void Eclass :: encode_increment()
{
  if(oldEncPos != encoderPos) 
  {
    oldEncPos = encoderPos;
    3cd2:	80 93 43 28 	sts	0x2843, r24	; 0x802843 <oldEncPos>
    3cd6:	90 93 44 28 	sts	0x2844, r25	; 0x802844 <oldEncPos+0x1>
    3cda:	80 91 b5 29 	lds	r24, 0x29B5	; 0x8029b5 <menus>
    3cde:	90 91 b6 29 	lds	r25, 0x29B6	; 0x8029b6 <menus+0x1>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/Enco.cpp:33
    
    if(menus == 0)//----------------main menu
    3ce2:	00 97       	sbiw	r24, 0x00	; 0
    3ce4:	a9 f4       	brne	.+42     	; 0x3d10 <Eclass::encode_increment() [clone .part.1]+0x46>
    3ce6:	80 91 41 28 	lds	r24, 0x2841	; 0x802841 <checkflag>
    3cea:	90 91 42 28 	lds	r25, 0x2842	; 0x802842 <checkflag+0x1>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/Enco.cpp:35
    {
      checkflag ?(encoder0Pos >= 4) ? encoder0Pos = 4 : encoder0Pos++ : (encoder0Pos <= 0) ? encoder0Pos = 0 : encoder0Pos--;
    3cee:	89 2b       	or	r24, r25
    3cf0:	09 f4       	brne	.+2      	; 0x3cf4 <Eclass::encode_increment() [clone .part.1]+0x2a>
    3cf2:	85 c0       	rjmp	.+266    	; 0x3dfe <Eclass::encode_increment() [clone .part.1]+0x134>
    3cf4:	80 91 b1 29 	lds	r24, 0x29B1	; 0x8029b1 <encoder0Pos>
    3cf8:	90 91 b2 29 	lds	r25, 0x29B2	; 0x8029b2 <encoder0Pos+0x1>
    3cfc:	04 97       	sbiw	r24, 0x04	; 4
    3cfe:	08 f4       	brcc	.+2      	; 0x3d02 <Eclass::encode_increment() [clone .part.1]+0x38>
    3d00:	78 c0       	rjmp	.+240    	; 0x3df2 <Eclass::encode_increment() [clone .part.1]+0x128>
    3d02:	84 e0       	ldi	r24, 0x04	; 4
    3d04:	90 e0       	ldi	r25, 0x00	; 0
    3d06:	80 93 b1 29 	sts	0x29B1, r24	; 0x8029b1 <encoder0Pos>
    3d0a:	90 93 b2 29 	sts	0x29B2, r25	; 0x8029b2 <encoder0Pos+0x1>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/Enco.cpp:72
    // {
    //   checkflag ? (encoder0Pos >= 19) ? encoder0Pos = 0 : encoder0Pos++ : (encoder0Pos < 1) ? encoder0Pos = 19 : encoder0Pos--;
    // }
    else if(menus == 4)
    {
      checkflag ? (encoder0Pos >= 1) ? encoder0Pos = 1 : encoder0Pos++ : (encoder0Pos <= 0) ? encoder0Pos = 0 : encoder0Pos--;
    3d0e:	08 95       	ret
    3d10:	81 30       	cpi	r24, 0x01	; 1
    3d12:	91 05       	cpc	r25, r1
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/Enco.cpp:79
    else if(menus == 5 && priming == 1)//-------------priming(clockwise and anticlockwise)
    {
      // checkflag ? (encoder0Pos >= 1) ? encoder0Pos = 1 : encoder0Pos++ : (encoder0Pos <= 0) ? encoder0Pos = 0 : encoder0Pos--;
    }
   }
}  
    3d14:	89 f4       	brne	.+34     	; 0x3d38 <Eclass::encode_increment() [clone .part.1]+0x6e>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/Enco.cpp:38
    if(menus == 0)//----------------main menu
    {
      checkflag ?(encoder0Pos >= 4) ? encoder0Pos = 4 : encoder0Pos++ : (encoder0Pos <= 0) ? encoder0Pos = 0 : encoder0Pos--;
      
    }
    else if(menus == 1)//-----------Titrate Mode
    3d16:	80 91 41 28 	lds	r24, 0x2841	; 0x802841 <checkflag>
    3d1a:	90 91 42 28 	lds	r25, 0x2842	; 0x802842 <checkflag+0x1>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/Enco.cpp:40
    {
      checkflag ? (encoder0Pos >= 3) ? encoder0Pos = 3 : encoder0Pos++ : (encoder0Pos <=0) ? encoder0Pos = 0: encoder0Pos--;
    3d1e:	89 2b       	or	r24, r25
    3d20:	09 f4       	brne	.+2      	; 0x3d24 <Eclass::encode_increment() [clone .part.1]+0x5a>
    3d22:	6d c0       	rjmp	.+218    	; 0x3dfe <Eclass::encode_increment() [clone .part.1]+0x134>
    3d24:	80 91 b1 29 	lds	r24, 0x29B1	; 0x8029b1 <encoder0Pos>
    3d28:	90 91 b2 29 	lds	r25, 0x29B2	; 0x8029b2 <encoder0Pos+0x1>
    3d2c:	03 97       	sbiw	r24, 0x03	; 3
    3d2e:	08 f4       	brcc	.+2      	; 0x3d32 <Eclass::encode_increment() [clone .part.1]+0x68>
    3d30:	60 c0       	rjmp	.+192    	; 0x3df2 <Eclass::encode_increment() [clone .part.1]+0x128>
    3d32:	83 e0       	ldi	r24, 0x03	; 3
    3d34:	90 e0       	ldi	r25, 0x00	; 0
    3d36:	e7 cf       	rjmp	.-50     	; 0x3d06 <Eclass::encode_increment() [clone .part.1]+0x3c>
    3d38:	82 30       	cpi	r24, 0x02	; 2
    3d3a:	91 05       	cpc	r25, r1
    3d3c:	b1 f5       	brne	.+108    	; 0x3daa <Eclass::encode_increment() [clone .part.1]+0xe0>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/Enco.cpp:42
    }
    else if(menus == 2 && dispense_start == false)//-----------Dispense mode
    3d3e:	80 91 9a 29 	lds	r24, 0x299A	; 0x80299a <dispense_start>
    3d42:	81 11       	cpse	r24, r1
    3d44:	e4 cf       	rjmp	.-56     	; 0x3d0e <Eclass::encode_increment() [clone .part.1]+0x44>
    3d46:	80 91 9b 29 	lds	r24, 0x299B	; 0x80299b <dispense_val>
    3d4a:	90 91 9c 29 	lds	r25, 0x299C	; 0x80299c <dispense_val+0x1>
    3d4e:	a0 91 9d 29 	lds	r26, 0x299D	; 0x80299d <dispense_val+0x2>
    3d52:	b0 91 9e 29 	lds	r27, 0x299E	; 0x80299e <dispense_val+0x3>
    3d56:	20 91 41 28 	lds	r18, 0x2841	; 0x802841 <checkflag>
    3d5a:	30 91 42 28 	lds	r19, 0x2842	; 0x802842 <checkflag+0x1>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/Enco.cpp:44
    {
      checkflag ? (dispense_val >= 50) ? dispense_val = 50 : dispense_val++ : (dispense_val <= 10) ? dispense_val = 10 : dispense_val--;
    3d5e:	23 2b       	or	r18, r19
    3d60:	b1 f0       	breq	.+44     	; 0x3d8e <Eclass::encode_increment() [clone .part.1]+0xc4>
    3d62:	82 33       	cpi	r24, 0x32	; 50
    3d64:	91 05       	cpc	r25, r1
    3d66:	a1 05       	cpc	r26, r1
    3d68:	b1 05       	cpc	r27, r1
    3d6a:	6c f0       	brlt	.+26     	; 0x3d86 <Eclass::encode_increment() [clone .part.1]+0xbc>
    3d6c:	82 e3       	ldi	r24, 0x32	; 50
    3d6e:	90 e0       	ldi	r25, 0x00	; 0
    3d70:	a0 e0       	ldi	r26, 0x00	; 0
    3d72:	b0 e0       	ldi	r27, 0x00	; 0
    3d74:	80 93 9b 29 	sts	0x299B, r24	; 0x80299b <dispense_val>
    3d78:	90 93 9c 29 	sts	0x299C, r25	; 0x80299c <dispense_val+0x1>
    3d7c:	a0 93 9d 29 	sts	0x299D, r26	; 0x80299d <dispense_val+0x2>
    3d80:	b0 93 9e 29 	sts	0x299E, r27	; 0x80299e <dispense_val+0x3>
    3d84:	08 95       	ret
    3d86:	01 96       	adiw	r24, 0x01	; 1
    3d88:	a1 1d       	adc	r26, r1
    3d8a:	b1 1d       	adc	r27, r1
    3d8c:	f3 cf       	rjmp	.-26     	; 0x3d74 <Eclass::encode_increment() [clone .part.1]+0xaa>
    3d8e:	8b 30       	cpi	r24, 0x0B	; 11
    3d90:	91 05       	cpc	r25, r1
    3d92:	a1 05       	cpc	r26, r1
    3d94:	b1 05       	cpc	r27, r1
    3d96:	2c f4       	brge	.+10     	; 0x3da2 <Eclass::encode_increment() [clone .part.1]+0xd8>
    3d98:	8a e0       	ldi	r24, 0x0A	; 10
    3d9a:	90 e0       	ldi	r25, 0x00	; 0
    3d9c:	a0 e0       	ldi	r26, 0x00	; 0
    3d9e:	b0 e0       	ldi	r27, 0x00	; 0
    3da0:	e9 cf       	rjmp	.-46     	; 0x3d74 <Eclass::encode_increment() [clone .part.1]+0xaa>
    3da2:	01 97       	sbiw	r24, 0x01	; 1
    3da4:	a1 09       	sbc	r26, r1
    3da6:	b1 09       	sbc	r27, r1
    3da8:	e5 cf       	rjmp	.-54     	; 0x3d74 <Eclass::encode_increment() [clone .part.1]+0xaa>
    3daa:	83 30       	cpi	r24, 0x03	; 3
    3dac:	91 05       	cpc	r25, r1
    3dae:	79 f4       	brne	.+30     	; 0x3dce <Eclass::encode_increment() [clone .part.1]+0x104>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/Enco.cpp:61
    //       checkflag ? (CalVal > 1100) ? CalVal = 0 : CalVal++ : (CalVal < 1) ? CalVal = 1100 : CalVal--; 
    //     } else{
    //       checkflag ? (CalVal > 110) ? CalVal = 0 : CalVal++ : (CalVal < 1) ? CalVal = 110 : CalVal--;
    //     }
    //   }
    else if(menus==3)
    3db0:	80 91 41 28 	lds	r24, 0x2841	; 0x802841 <checkflag>
    3db4:	90 91 42 28 	lds	r25, 0x2842	; 0x802842 <checkflag+0x1>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/Enco.cpp:63
    {
       checkflag ? (encoder0Pos >= 9) ? encoder0Pos = 9 : encoder0Pos++ : (encoder0Pos <= 0) ? encoder0Pos = 0 : encoder0Pos--;
    3db8:	89 2b       	or	r24, r25
    3dba:	09 f1       	breq	.+66     	; 0x3dfe <Eclass::encode_increment() [clone .part.1]+0x134>
    3dbc:	80 91 b1 29 	lds	r24, 0x29B1	; 0x8029b1 <encoder0Pos>
    3dc0:	90 91 b2 29 	lds	r25, 0x29B2	; 0x8029b2 <encoder0Pos+0x1>
    3dc4:	09 97       	sbiw	r24, 0x09	; 9
    3dc6:	a8 f0       	brcs	.+42     	; 0x3df2 <Eclass::encode_increment() [clone .part.1]+0x128>
    3dc8:	89 e0       	ldi	r24, 0x09	; 9
    3dca:	90 e0       	ldi	r25, 0x00	; 0
    3dcc:	9c cf       	rjmp	.-200    	; 0x3d06 <Eclass::encode_increment() [clone .part.1]+0x3c>
    3dce:	04 97       	sbiw	r24, 0x04	; 4
    3dd0:	09 f0       	breq	.+2      	; 0x3dd4 <Eclass::encode_increment() [clone .part.1]+0x10a>
    3dd2:	9d cf       	rjmp	.-198    	; 0x3d0e <Eclass::encode_increment() [clone .part.1]+0x44>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/Enco.cpp:70
    }
    // else if(menus == 4)//--------------for records
    // {
    //   checkflag ? (encoder0Pos >= 19) ? encoder0Pos = 0 : encoder0Pos++ : (encoder0Pos < 1) ? encoder0Pos = 19 : encoder0Pos--;
    // }
    else if(menus == 4)
    3dd4:	80 91 41 28 	lds	r24, 0x2841	; 0x802841 <checkflag>
    3dd8:	90 91 42 28 	lds	r25, 0x2842	; 0x802842 <checkflag+0x1>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/Enco.cpp:72
    {
      checkflag ? (encoder0Pos >= 1) ? encoder0Pos = 1 : encoder0Pos++ : (encoder0Pos <= 0) ? encoder0Pos = 0 : encoder0Pos--;
    3ddc:	89 2b       	or	r24, r25
    3dde:	79 f0       	breq	.+30     	; 0x3dfe <Eclass::encode_increment() [clone .part.1]+0x134>
    3de0:	80 91 b1 29 	lds	r24, 0x29B1	; 0x8029b1 <encoder0Pos>
    3de4:	90 91 b2 29 	lds	r25, 0x29B2	; 0x8029b2 <encoder0Pos+0x1>
    3de8:	89 2b       	or	r24, r25
    3dea:	19 f0       	breq	.+6      	; 0x3df2 <Eclass::encode_increment() [clone .part.1]+0x128>
    3dec:	81 e0       	ldi	r24, 0x01	; 1
    3dee:	90 e0       	ldi	r25, 0x00	; 0
    3df0:	8a cf       	rjmp	.-236    	; 0x3d06 <Eclass::encode_increment() [clone .part.1]+0x3c>
    3df2:	80 91 b1 29 	lds	r24, 0x29B1	; 0x8029b1 <encoder0Pos>
    3df6:	90 91 b2 29 	lds	r25, 0x29B2	; 0x8029b2 <encoder0Pos+0x1>
    3dfa:	01 96       	adiw	r24, 0x01	; 1
    3dfc:	84 cf       	rjmp	.-248    	; 0x3d06 <Eclass::encode_increment() [clone .part.1]+0x3c>
    3dfe:	80 91 b1 29 	lds	r24, 0x29B1	; 0x8029b1 <encoder0Pos>
    3e02:	90 91 b2 29 	lds	r25, 0x29B2	; 0x8029b2 <encoder0Pos+0x1>
    3e06:	89 2b       	or	r24, r25
    3e08:	29 f4       	brne	.+10     	; 0x3e14 <Eclass::encode_increment() [clone .part.1]+0x14a>
    3e0a:	10 92 b1 29 	sts	0x29B1, r1	; 0x8029b1 <encoder0Pos>
    3e0e:	10 92 b2 29 	sts	0x29B2, r1	; 0x8029b2 <encoder0Pos+0x1>
    3e12:	08 95       	ret
    3e14:	80 91 b1 29 	lds	r24, 0x29B1	; 0x8029b1 <encoder0Pos>
    3e18:	90 91 b2 29 	lds	r25, 0x29B2	; 0x8029b2 <encoder0Pos+0x1>
    3e1c:	01 97       	sbiw	r24, 0x01	; 1
    3e1e:	73 cf       	rjmp	.-282    	; 0x3d06 <Eclass::encode_increment() [clone .part.1]+0x3c>

00003e20 <sen_enb()>:
digitalWrite():
    3e20:	61 e0       	ldi	r22, 0x01	; 1
    3e22:	87 e1       	ldi	r24, 0x17	; 23
    3e24:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <digitalWrite.part.2>
sen_enb():
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:1220
  return(( val / 10 * 16 ) + ( val % 10 ));
}

//------------------------------optic sensor interrupt function--------------------------------//
void sen_enb()
{
    3e28:	10 92 b1 29 	sts	0x29B1, r1	; 0x8029b1 <encoder0Pos>
    3e2c:	10 92 b2 29 	sts	0x29B2, r1	; 0x8029b2 <encoder0Pos+0x1>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:1222
  digitalWrite(enablem,HIGH);
  encoder0Pos=0;
    3e30:	81 e0       	ldi	r24, 0x01	; 1
    3e32:	90 e0       	ldi	r25, 0x00	; 0
    3e34:	80 93 ae 29 	sts	0x29AE, r24	; 0x8029ae <pos1>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:1223
  pos1=1;
    3e38:	90 93 af 29 	sts	0x29AF, r25	; 0x8029af <pos1+0x1>
    3e3c:	08 95       	ret

00003e3e <buzzer_stop()>:
digitalWrite():
    3e3e:	60 e0       	ldi	r22, 0x00	; 0
    3e40:	83 e1       	ldi	r24, 0x13	; 19
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:1226


} 
    3e42:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <digitalWrite.part.2>
stop():
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:943
  digitalWrite(enablem, HIGH);  //active low
}

//--------------------------Stop Buzzer Ticker Loop----------------------//
void buzzer_stop()
{               
    3e46:	e2 ea       	ldi	r30, 0xA2	; 162
    3e48:	fe e2       	ldi	r31, 0x2E	; 46
    3e4a:	10 82       	st	Z, r1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:59
	enabled = true;
	status = RUNNING;
	}

void Ticker::stop() {
	enabled = false;
    3e4c:	13 86       	std	Z+11, r1	; 0x0b
    3e4e:	14 86       	std	Z+12, r1	; 0x0c
    3e50:	15 86       	std	Z+13, r1	; 0x0d
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:60
	counts = 0;
    3e52:	16 86       	std	Z+14, r1	; 0x0e
    3e54:	17 86       	std	Z+15, r1	; 0x0f
    3e56:	10 8a       	std	Z+16, r1	; 0x10
buzzer_stop():
    3e58:	08 95       	ret

00003e5a <stopDispense()>:
stop():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:61
	status = STOPPED;
    3e5a:	ed eb       	ldi	r30, 0xBD	; 189
    3e5c:	fe e2       	ldi	r31, 0x2E	; 46
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:946
  digitalWrite(buzzer, LOW);
  buzz.stop();
}
    3e5e:	10 82       	st	Z, r1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:59
	enabled = true;
	status = RUNNING;
	}

void Ticker::stop() {
	enabled = false;
    3e60:	13 86       	std	Z+11, r1	; 0x0b
    3e62:	14 86       	std	Z+12, r1	; 0x0c
    3e64:	15 86       	std	Z+13, r1	; 0x0d
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:60
	counts = 0;
    3e66:	16 86       	std	Z+14, r1	; 0x0e
    3e68:	17 86       	std	Z+15, r1	; 0x0f
    3e6a:	10 8a       	std	Z+16, r1	; 0x10
digitalWrite():
    3e6c:	61 e0       	ldi	r22, 0x01	; 1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:61
	status = STOPPED;
    3e6e:	87 e1       	ldi	r24, 0x17	; 23
    3e70:	0c 94 cd 0e 	jmp	0x1d9a	; 0x1d9a <digitalWrite.part.2>

00003e74 <startDispense()>:
startDispense():
    3e74:	8d eb       	ldi	r24, 0xBD	; 189
    3e76:	9e e2       	ldi	r25, 0x2E	; 46
    3e78:	0e 94 27 15 	call	0x2a4e	; 0x2a4e <Ticker::start()>
digitalWrite():
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:930
}

//-----------------------------Start Stepper Motor----------------------//
void startDispense()
{
  motor.start(); //timer for motor
    3e7c:	60 e0       	ldi	r22, 0x00	; 0
    3e7e:	87 e1       	ldi	r24, 0x17	; 23
    3e80:	0c 94 cd 0e 	jmp	0x1d9a	; 0x1d9a <digitalWrite.part.2>

00003e84 <titrateModeSpeed(int)>:
titrateModeSpeed():
    3e84:	83 30       	cpi	r24, 0x03	; 3
    3e86:	91 05       	cpc	r25, r1
    3e88:	81 f4       	brne	.+32     	; 0x3eaa <titrateModeSpeed(int)+0x26>
digitalWrite():
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:896
   * modeSpeed =  3    |  1 -  Slow       
   * modeSpeed =  2    |  2 -  Moderate
   * modeSpeed =  1    |  3 -  High
   * modeSpeed =  0    |  0 -  Highest
   */
  if(modeSpeed == 3)//----------------High Speed(1/4 step)
    3e8a:	60 e0       	ldi	r22, 0x00	; 0
    3e8c:	86 e1       	ldi	r24, 0x16	; 22
    3e8e:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <digitalWrite.part.2>
    3e92:	60 e0       	ldi	r22, 0x00	; 0
    3e94:	8f e0       	ldi	r24, 0x0F	; 15
    3e96:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <digitalWrite.part.2>
    3e9a:	61 e0       	ldi	r22, 0x01	; 1
    3e9c:	80 e1       	ldi	r24, 0x10	; 16
    3e9e:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <digitalWrite.part.2>
    3ea2:	60 e0       	ldi	r22, 0x00	; 0
    3ea4:	81 e1       	ldi	r24, 0x11	; 17
    3ea6:	0c 94 cd 0e 	jmp	0x1d9a	; 0x1d9a <digitalWrite.part.2>
titrateModeSpeed():
    3eaa:	82 30       	cpi	r24, 0x02	; 2
    3eac:	91 05       	cpc	r25, r1
    3eae:	71 f4       	brne	.+28     	; 0x3ecc <titrateModeSpeed(int)+0x48>
digitalWrite():
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:908
  
    // digitalWrite(M0, HIGH);
    // digitalWrite(M1, LOW);
    // digitalWrite(M2, LOW);
  }
  else if(modeSpeed == 2)//-----------Moderate Speed(1/16 step)
    3eb0:	60 e0       	ldi	r22, 0x00	; 0
    3eb2:	86 e1       	ldi	r24, 0x16	; 22
    3eb4:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <digitalWrite.part.2>
    3eb8:	60 e0       	ldi	r22, 0x00	; 0
    3eba:	8f e0       	ldi	r24, 0x0F	; 15
    3ebc:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <digitalWrite.part.2>
    3ec0:	60 e0       	ldi	r22, 0x00	; 0
    3ec2:	80 e1       	ldi	r24, 0x10	; 16
    3ec4:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <digitalWrite.part.2>
    3ec8:	61 e0       	ldi	r22, 0x01	; 1
    3eca:	ec cf       	rjmp	.-40     	; 0x3ea4 <titrateModeSpeed(int)+0x20>
titrateModeSpeed():
    3ecc:	01 97       	sbiw	r24, 0x01	; 1
    3ece:	51 f4       	brne	.+20     	; 0x3ee4 <titrateModeSpeed(int)+0x60>
digitalWrite():
    3ed0:	60 e0       	ldi	r22, 0x00	; 0
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:916
    digitalWrite(M0, LOW);
    digitalWrite(M1, LOW);
    digitalWrite(M2, HIGH);
   
  }
  else if(modeSpeed == 1)//-----------Low Speed(1/32 step)
    3ed2:	86 e1       	ldi	r24, 0x16	; 22
    3ed4:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <digitalWrite.part.2>
    3ed8:	60 e0       	ldi	r22, 0x00	; 0
    3eda:	8f e0       	ldi	r24, 0x0F	; 15
    3edc:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <digitalWrite.part.2>
    3ee0:	61 e0       	ldi	r22, 0x01	; 1
    3ee2:	ef cf       	rjmp	.-34     	; 0x3ec2 <titrateModeSpeed(int)+0x3e>
titrateModeSpeed():
    3ee4:	08 95       	ret

00003ee6 <stepperPulse()>:
digitalWrite():
    3ee6:	61 e0       	ldi	r22, 0x01	; 1
    3ee8:	82 e1       	ldi	r24, 0x12	; 18
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:925
    digitalWrite(M1, HIGH);
    digitalWrite(M2, HIGH);
   
  }

}
    3eea:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <digitalWrite.part.2>
delayMicroseconds():
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:872
  // display.display();
}

//--------------------------Stepper motor Pulse Ticker Loop---------------------//
void stepperPulse()
{
    3eee:	8b e4       	ldi	r24, 0x4B	; 75
    3ef0:	90 e0       	ldi	r25, 0x00	; 0
    3ef2:	01 97       	sbiw	r24, 0x01	; 1
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/wiring.c:325
    3ef4:	f1 f7       	brne	.-4      	; 0x3ef2 <stepperPulse()+0xc>
digitalWrite():
    3ef6:	60 e0       	ldi	r22, 0x00	; 0
    3ef8:	82 e1       	ldi	r24, 0x12	; 18
    3efa:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <digitalWrite.part.2>
stepperPulse():
    3efe:	80 91 a7 29 	lds	r24, 0x29A7	; 0x8029a7 <stepperCount>
    3f02:	90 91 a8 29 	lds	r25, 0x29A8	; 0x8029a8 <stepperCount+0x1>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:877
  digitalWrite(stepPin, HIGH);
  delayMicroseconds(20);
  digitalWrite(stepPin, LOW);
  // delayMicroseconds(20);
  stepperCount++;
    3f06:	a0 91 a9 29 	lds	r26, 0x29A9	; 0x8029a9 <stepperCount+0x2>
    3f0a:	b0 91 aa 29 	lds	r27, 0x29AA	; 0x8029aa <stepperCount+0x3>
    3f0e:	01 96       	adiw	r24, 0x01	; 1
    3f10:	a1 1d       	adc	r26, r1
    3f12:	b1 1d       	adc	r27, r1
    3f14:	80 93 a7 29 	sts	0x29A7, r24	; 0x8029a7 <stepperCount>
    3f18:	90 93 a8 29 	sts	0x29A8, r25	; 0x8029a8 <stepperCount+0x1>
    3f1c:	a0 93 a9 29 	sts	0x29A9, r26	; 0x8029a9 <stepperCount+0x2>
    3f20:	b0 93 aa 29 	sts	0x29AA, r27	; 0x8029aa <stepperCount+0x3>
    3f24:	08 95       	ret

00003f26 <arrow_animate()>:
arrow_animate():
    3f26:	80 91 b1 29 	lds	r24, 0x29B1	; 0x8029b1 <encoder0Pos>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:879
  // stepperCount1+=10;
}
    3f2a:	90 91 b2 29 	lds	r25, 0x29B2	; 0x8029b2 <encoder0Pos+0x1>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:837
}

//-------------------------------Dispense arrow animation loop----------------------------//
void arrow_animate()
{
  if(encoder0Pos >= 1)//---------------------Check for encoder for user input
    3f2e:	89 2b       	or	r24, r25
    3f30:	99 f0       	breq	.+38     	; 0x3f58 <arrow_animate()+0x32>
    3f32:	80 91 01 28 	lds	r24, 0x2801	; 0x802801 <yPos>
    3f36:	90 91 02 28 	lds	r25, 0x2802	; 0x802802 <yPos+0x1>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:839
  {
    if(yPos > 19)//--------------------------clear display for animation after last arrow is printed
    3f3a:	84 31       	cpi	r24, 0x14	; 20
    3f3c:	91 05       	cpc	r25, r1
    3f3e:	6c f0       	brlt	.+26     	; 0x3f5a <arrow_animate()+0x34>
    3f40:	e0 91 b1 29 	lds	r30, 0x29B1	; 0x8029b1 <encoder0Pos>
    3f44:	f0 91 b2 29 	lds	r31, 0x29B2	; 0x8029b2 <encoder0Pos+0x1>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:843
    {
      // display.fillRect(2, 3, 22, 27, BLACK);//-------------Clear the rectangle
      // display.display();//--------------------------to display
      yPos = titra_step[encoder0Pos];//--------------------yPos for arrow to be drawn
    3f48:	ee 52       	subi	r30, 0x2E	; 46
    3f4a:	f8 44       	sbci	r31, 0x48	; 72
    3f4c:	80 81       	ld	r24, Z
    3f4e:	90 e0       	ldi	r25, 0x00	; 0
    3f50:	80 93 01 28 	sts	0x2801, r24	; 0x802801 <yPos>
    3f54:	90 93 02 28 	sts	0x2802, r25	; 0x802802 <yPos+0x1>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:849
    }
    else 
    {
    // display.drawBitmap(3, yPos, arrow_bmp, 20, 10, SSD1306_WHITE);//-------------Draw arrow symbol
    // display.display();//--------------------------to display on OLED
    yPos = yPos+7;//--------------------yPos for arrow to be drawn
    3f58:	08 95       	ret
    3f5a:	07 96       	adiw	r24, 0x07	; 7
    3f5c:	f9 cf       	rjmp	.-14     	; 0x3f50 <arrow_animate()+0x2a>

00003f5e <longPress1()>:
longPress1():
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:859
//    display.fillRect(2, 3, 22, 27, WHITE);
    // display.drawLine(3, 30, 23, 3, WHITE);//----------drawLine(uint16_t x0, uint16_t y0, uint16_t x1, uint16_t y1, uint16_t color); 
    // display.drawLine(23, 30, 3, 3, WHITE);//----------drawLine(uint16_t x0, uint16_t y0, uint16_t x1, uint16_t y1, uint16_t color); 
    // display.display();
  }
}
    3f5e:	80 91 b5 29 	lds	r24, 0x29B5	; 0x8029b5 <menus>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:849
    }
    else 
    {
    // display.drawBitmap(3, yPos, arrow_bmp, 20, 10, SSD1306_WHITE);//-------------Draw arrow symbol
    // display.display();//--------------------------to display on OLED
    yPos = yPos+7;//--------------------yPos for arrow to be drawn
    3f62:	90 91 b6 29 	lds	r25, 0x29B6	; 0x8029b6 <menus+0x1>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:359
}

//-------------------------------------------------LONG PRESS---------------------------------------------------//
void longPress1() 
{
  if(menus == 1)//-----------if in titration mode
    3f66:	01 97       	sbiw	r24, 0x01	; 1
    3f68:	09 f0       	breq	.+2      	; 0x3f6c <longPress1()+0xe>
    3f6a:	4a c0       	rjmp	.+148    	; 0x4000 <__RODATA_PM_OFFSET__>
    3f6c:	80 91 95 29 	lds	r24, 0x2995	; 0x802995 <totalDispense>
    3f70:	90 91 96 29 	lds	r25, 0x2996	; 0x802996 <totalDispense+0x1>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:361
  {
    if(totalDispense != 0 && encoder0Pos == 0)//----execute when knob is long pressed after titration is stopped
    3f74:	89 2b       	or	r24, r25
    3f76:	41 f1       	breq	.+80     	; 0x3fc8 <longPress1()+0x6a>
    3f78:	80 91 b1 29 	lds	r24, 0x29B1	; 0x8029b1 <encoder0Pos>
    3f7c:	90 91 b2 29 	lds	r25, 0x29B2	; 0x8029b2 <encoder0Pos+0x1>
    3f80:	89 2b       	or	r24, r25
    3f82:	e1 f4       	brne	.+56     	; 0x3fbc <longPress1()+0x5e>
digitalWrite():
    3f84:	61 e0       	ldi	r22, 0x01	; 1
    3f86:	83 e1       	ldi	r24, 0x13	; 19
    3f88:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <digitalWrite.part.2>
interval():
    3f8c:	80 91 ab 2e 	lds	r24, 0x2EAB	; 0x802eab <buzz+0x9>
    3f90:	90 91 ac 2e 	lds	r25, 0x2EAC	; 0x802eac <buzz+0xa>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:97
		}
	return false;
	}

void Ticker::interval(uint32_t timer) {
	if (resolution == MICROS) timer = timer * 1000;
    3f94:	89 2b       	or	r24, r25
    3f96:	09 f0       	breq	.+2      	; 0x3f9a <longPress1()+0x3c>
    3f98:	6c c0       	rjmp	.+216    	; 0x4072 <__RODATA_PM_OFFSET__+0x72>
longPress1():
    3f9a:	80 e8       	ldi	r24, 0x80	; 128
    3f9c:	9a e1       	ldi	r25, 0x1A	; 26
    3f9e:	a6 e0       	ldi	r26, 0x06	; 6
    3fa0:	b0 e0       	ldi	r27, 0x00	; 0
interval():
    3fa2:	80 93 a3 2e 	sts	0x2EA3, r24	; 0x802ea3 <buzz+0x1>
    3fa6:	90 93 a4 2e 	sts	0x2EA4, r25	; 0x802ea4 <buzz+0x2>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:98
	this->timer = timer;
    3faa:	a0 93 a5 2e 	sts	0x2EA5, r26	; 0x802ea5 <buzz+0x3>
    3fae:	b0 93 a6 2e 	sts	0x2EA6, r27	; 0x802ea6 <buzz+0x4>
longPress1():
    3fb2:	82 ea       	ldi	r24, 0xA2	; 162
    3fb4:	9e e2       	ldi	r25, 0x2E	; 46
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:380
       * This loop will not save the titrate volume value 
       * There will be buzzer indication
       */
      digitalWrite(buzzer, HIGH);
      buzz.interval(400);
      buzz.start();
    3fb6:	0e 94 27 15 	call	0x2a4e	; 0x2a4e <Ticker::start()>
    3fba:	0a c0       	rjmp	.+20     	; 0x3fd0 <longPress1()+0x72>
    3fbc:	80 91 b1 29 	lds	r24, 0x29B1	; 0x8029b1 <encoder0Pos>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:372
      // writeRecord(totalDispense);//-----Write the value to eeprom for record maintenance
      digitalWrite(buzzer, HIGH);
      buzz.interval(400);
      buzz.start();
    }
    else if(totalDispense != 0 && encoder0Pos != 0)//----execute when knob is long pressed without stopping the titration
    3fc0:	90 91 b2 29 	lds	r25, 0x29B2	; 0x8029b2 <encoder0Pos+0x1>
    3fc4:	89 2b       	or	r24, r25
    3fc6:	f1 f6       	brne	.-68     	; 0x3f84 <longPress1()+0x26>
    3fc8:	10 92 b5 29 	sts	0x29B5, r1	; 0x8029b5 <menus>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:383
      digitalWrite(buzzer, HIGH);
      buzz.interval(400);
      buzz.start();
    }
    else{  //------------------execute when displense value is zero and go back to main_menu screen
      menus = 0;
    3fcc:	10 92 b6 29 	sts	0x29B6, r1	; 0x8029b6 <menus+0x1>
    3fd0:	10 92 95 29 	sts	0x2995, r1	; 0x802995 <totalDispense>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:386
    
    }
    totalDispense = 0;
    3fd4:	10 92 96 29 	sts	0x2996, r1	; 0x802996 <totalDispense+0x1>
    3fd8:	10 92 8d 29 	sts	0x298D, r1	; 0x80298d <prev_stepperCount>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:387
    prev_stepperCount = 0; 
    3fdc:	10 92 8e 29 	sts	0x298E, r1	; 0x80298e <prev_stepperCount+0x1>
    3fe0:	10 92 8f 29 	sts	0x298F, r1	; 0x80298f <prev_stepperCount+0x2>
    3fe4:	10 92 90 29 	sts	0x2990, r1	; 0x802990 <prev_stepperCount+0x3>
    3fe8:	10 92 89 29 	sts	0x2989, r1	; 0x802989 <tempVal>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:389
    
    tempVal = 0;
    3fec:	10 92 8a 29 	sts	0x298A, r1	; 0x80298a <tempVal+0x1>
    3ff0:	10 92 8b 29 	sts	0x298B, r1	; 0x80298b <tempVal+0x2>
    3ff4:	10 92 8c 29 	sts	0x298C, r1	; 0x80298c <tempVal+0x3>
    3ff8:	10 92 b1 29 	sts	0x29B1, r1	; 0x8029b1 <encoder0Pos>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:390
    encoder0Pos=0;
    3ffc:	10 92 b2 29 	sts	0x29B2, r1	; 0x8029b2 <encoder0Pos+0x1>
    4000:	80 91 b5 29 	lds	r24, 0x29B5	; 0x8029b5 <menus>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:393
  }
  
  if(menus != 1)
    4004:	90 91 b6 29 	lds	r25, 0x29B6	; 0x8029b6 <menus+0x1>
    4008:	01 97       	sbiw	r24, 0x01	; 1
    400a:	21 f0       	breq	.+8      	; 0x4014 <__RODATA_PM_OFFSET__+0x14>
    400c:	10 92 b5 29 	sts	0x29B5, r1	; 0x8029b5 <menus>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:395
  {
    menus = 0;
    4010:	10 92 b6 29 	sts	0x29B6, r1	; 0x8029b6 <menus+0x1>
    4014:	10 92 a7 29 	sts	0x29A7, r1	; 0x8029a7 <stepperCount>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:398
  }

  stepperCount = 0; 
    4018:	10 92 a8 29 	sts	0x29A8, r1	; 0x8029a8 <stepperCount+0x1>
    401c:	10 92 a9 29 	sts	0x29A9, r1	; 0x8029a9 <stepperCount+0x2>
    4020:	10 92 aa 29 	sts	0x29AA, r1	; 0x8029aa <stepperCount+0x3>
    4024:	10 92 b1 29 	sts	0x29B1, r1	; 0x8029b1 <encoder0Pos>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:399
  encoder0Pos = 0;
    4028:	10 92 b2 29 	sts	0x29B2, r1	; 0x8029b2 <encoder0Pos+0x1>
    402c:	10 92 b0 29 	sts	0x29B0, r1	; 0x8029b0 <once>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:400
  once = false;
    4030:	81 e0       	ldi	r24, 0x01	; 1
    4032:	80 93 00 28 	sts	0x2800, r24	; 0x802800 <__DATA_REGION_ORIGIN__>
stop():
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:401
  entry_chk = true;
    4036:	10 92 d8 2e 	sts	0x2ED8, r1	; 0x802ed8 <animate>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:59
	enabled = true;
	status = RUNNING;
	}

void Ticker::stop() {
	enabled = false;
    403a:	10 92 e3 2e 	sts	0x2EE3, r1	; 0x802ee3 <animate+0xb>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:60
	counts = 0;
    403e:	10 92 e4 2e 	sts	0x2EE4, r1	; 0x802ee4 <animate+0xc>
    4042:	10 92 e5 2e 	sts	0x2EE5, r1	; 0x802ee5 <animate+0xd>
    4046:	10 92 e6 2e 	sts	0x2EE6, r1	; 0x802ee6 <animate+0xe>
    404a:	10 92 e7 2e 	sts	0x2EE7, r1	; 0x802ee7 <animate+0xf>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:61
	status = STOPPED;
    404e:	10 92 e8 2e 	sts	0x2EE8, r1	; 0x802ee8 <animate+0x10>
longPress1():
    4052:	10 92 b3 29 	sts	0x29B3, r1	; 0x8029b3 <previousPos>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:404
  animate.stop();
  ani_start = 0;
  previousPos = 0;
    4056:	10 92 b4 29 	sts	0x29B4, r1	; 0x8029b4 <previousPos+0x1>
    405a:	ff de       	rcall	.-514    	; 0x3e5a <stopDispense()>
    405c:	10 92 a5 29 	sts	0x29A5, r1	; 0x8029a5 <Save_flag>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:406
  cal_flag = 0;
  stopDispense();
    4060:	10 92 a6 29 	sts	0x29A6, r1	; 0x8029a6 <Save_flag+0x1>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:407
  Save_flag = 0;
    4064:	81 e0       	ldi	r24, 0x01	; 1
    4066:	90 e0       	ldi	r25, 0x00	; 0
    4068:	80 93 03 28 	sts	0x2803, r24	; 0x802803 <once_update>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:408
  once_update=1;
    406c:	90 93 04 28 	sts	0x2804, r25	; 0x802804 <once_update+0x1>
    4070:	08 95       	ret
interval():
    4072:	80 e9       	ldi	r24, 0x90	; 144
    4074:	91 e0       	ldi	r25, 0x01	; 1
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:409
}
    4076:	a0 e0       	ldi	r26, 0x00	; 0
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:97
		}
	return false;
	}

void Ticker::interval(uint32_t timer) {
	if (resolution == MICROS) timer = timer * 1000;
    4078:	b0 e0       	ldi	r27, 0x00	; 0
    407a:	93 cf       	rjmp	.-218    	; 0x3fa2 <longPress1()+0x44>

0000407c <click1()>:
click1():
    407c:	80 91 b5 29 	lds	r24, 0x29B5	; 0x8029b5 <menus>
    4080:	90 91 b6 29 	lds	r25, 0x29B6	; 0x8029b6 <menus+0x1>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:289
}

//--------------------------------------------------------SINGLE CLICK-------------------------------------------------------------//
void click1()
{
  if(menus == 0)
    4084:	00 97       	sbiw	r24, 0x00	; 0
    4086:	71 f5       	brne	.+92     	; 0x40e4 <click1()+0x68>
    4088:	80 91 b1 29 	lds	r24, 0x29B1	; 0x8029b1 <encoder0Pos>
    408c:	90 91 b2 29 	lds	r25, 0x29B2	; 0x8029b2 <encoder0Pos+0x1>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:291
  {
    menus = encoder0Pos + 1;
    4090:	01 96       	adiw	r24, 0x01	; 1
    4092:	80 93 b5 29 	sts	0x29B5, r24	; 0x8029b5 <menus>
    4096:	90 93 b6 29 	sts	0x29B6, r25	; 0x8029b6 <menus+0x1>
    409a:	10 92 b1 29 	sts	0x29B1, r1	; 0x8029b1 <encoder0Pos>
    409e:	10 92 b2 29 	sts	0x29B2, r1	; 0x8029b2 <encoder0Pos+0x1>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:292
    encoder0Pos = 0;
    40a2:	10 92 b0 29 	sts	0x29B0, r1	; 0x8029b0 <once>
digitalWrite():
    40a6:	61 e0       	ldi	r22, 0x01	; 1
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:293
    once = false;
    40a8:	83 e1       	ldi	r24, 0x13	; 19
    40aa:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <digitalWrite.part.2>
interval():
    40ae:	80 91 ab 2e 	lds	r24, 0x2EAB	; 0x802eab <buzz+0x9>
    40b2:	90 91 ac 2e 	lds	r25, 0x2EAC	; 0x802eac <buzz+0xa>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:97
    40b6:	89 2b       	or	r24, r25
    40b8:	81 f4       	brne	.+32     	; 0x40da <click1()+0x5e>
click1():
    40ba:	80 e5       	ldi	r24, 0x50	; 80
    40bc:	93 ec       	ldi	r25, 0xC3	; 195
    40be:	a0 e0       	ldi	r26, 0x00	; 0
    40c0:	b0 e0       	ldi	r27, 0x00	; 0
interval():
    40c2:	80 93 a3 2e 	sts	0x2EA3, r24	; 0x802ea3 <buzz+0x1>
    40c6:	90 93 a4 2e 	sts	0x2EA4, r25	; 0x802ea4 <buzz+0x2>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:98
	this->timer = timer;
    40ca:	a0 93 a5 2e 	sts	0x2EA5, r26	; 0x802ea5 <buzz+0x3>
    40ce:	b0 93 a6 2e 	sts	0x2EA6, r27	; 0x802ea6 <buzz+0x4>
click1():
    40d2:	82 ea       	ldi	r24, 0xA2	; 162
    40d4:	9e e2       	ldi	r25, 0x2E	; 46
    40d6:	0c 94 27 15 	jmp	0x2a4e	; 0x2a4e <Ticker::start()>
interval():
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:297
    //---------------------------buzzer indication--------------//
    digitalWrite(buzzer, HIGH);
    buzz.interval(50);
    buzz.start();
    40da:	82 e3       	ldi	r24, 0x32	; 50
    40dc:	90 e0       	ldi	r25, 0x00	; 0
    40de:	a0 e0       	ldi	r26, 0x00	; 0
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:97
		}
	return false;
	}

void Ticker::interval(uint32_t timer) {
	if (resolution == MICROS) timer = timer * 1000;
    40e0:	b0 e0       	ldi	r27, 0x00	; 0
    40e2:	ef cf       	rjmp	.-34     	; 0x40c2 <click1()+0x46>
click1():
    40e4:	81 30       	cpi	r24, 0x01	; 1
    40e6:	91 05       	cpc	r25, r1
    40e8:	09 f4       	brne	.+2      	; 0x40ec <click1()+0x70>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:299
  }
  else if(menus == 1)//----------when in titrate mode
    40ea:	62 c0       	rjmp	.+196    	; 0x41b0 <click1()+0x134>
    40ec:	82 30       	cpi	r24, 0x02	; 2
    40ee:	91 05       	cpc	r25, r1
    40f0:	21 f4       	brne	.+8      	; 0x40fa <click1()+0x7e>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:304
  {
    ani_start = 1;
    revers = 1;
  }
  else if(menus == 2)//----------when in dispense mode
    40f2:	81 e0       	ldi	r24, 0x01	; 1
    40f4:	80 93 9a 29 	sts	0x299A, r24	; 0x80299a <dispense_start>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:306
  {
    dispense_start = true;
    40f8:	08 95       	ret
    40fa:	83 30       	cpi	r24, 0x03	; 3
    40fc:	91 05       	cpc	r25, r1
    40fe:	69 f5       	brne	.+90     	; 0x415a <click1()+0xde>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:309
    revers = 2;
  }
  else if(menus == 3)  //----------when in user select mode
    4100:	80 91 9f 29 	lds	r24, 0x299F	; 0x80299f <User_set_flag>
    4104:	90 91 a0 29 	lds	r25, 0x29A0	; 0x8029a0 <User_set_flag+0x1>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:317
    // if(motor.state() == STOPPED)
    // {
    //   change_flag = true;
    //   cal_flag++;
    // }
      if( User_set_flag == 1 && encoder0Pos >= 0 && encoder0Pos <= 9)   // selecting the user name
    4108:	81 30       	cpi	r24, 0x01	; 1
    410a:	91 05       	cpc	r25, r1
    410c:	f9 f4       	brne	.+62     	; 0x414c <click1()+0xd0>
    410e:	20 91 b1 29 	lds	r18, 0x29B1	; 0x8029b1 <encoder0Pos>
    4112:	30 91 b2 29 	lds	r19, 0x29B2	; 0x8029b2 <encoder0Pos+0x1>
    4116:	20 91 b1 29 	lds	r18, 0x29B1	; 0x8029b1 <encoder0Pos>
    411a:	30 91 b2 29 	lds	r19, 0x29B2	; 0x8029b2 <encoder0Pos+0x1>
    411e:	2a 30       	cpi	r18, 0x0A	; 10
    4120:	31 05       	cpc	r19, r1
    4122:	a0 f4       	brcc	.+40     	; 0x414c <click1()+0xd0>
    4124:	20 91 b1 29 	lds	r18, 0x29B1	; 0x8029b1 <encoder0Pos>
    4128:	30 91 b2 29 	lds	r19, 0x29B2	; 0x8029b2 <encoder0Pos+0x1>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:319
      {
       User = encoder0Pos;
    412c:	20 93 91 29 	sts	0x2991, r18	; 0x802991 <User>
    4130:	30 93 92 29 	sts	0x2992, r19	; 0x802992 <User+0x1>
    4134:	10 92 9f 29 	sts	0x299F, r1	; 0x80299f <User_set_flag>
    4138:	10 92 a0 29 	sts	0x29A0, r1	; 0x8029a0 <User_set_flag+0x1>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:320
       User_set_flag = 0;
    413c:	10 92 b1 29 	sts	0x29B1, r1	; 0x8029b1 <encoder0Pos>
    4140:	10 92 b2 29 	sts	0x29B2, r1	; 0x8029b2 <encoder0Pos+0x1>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:321
       encoder0Pos=0;
    4144:	80 93 b5 29 	sts	0x29B5, r24	; 0x8029b5 <menus>
    4148:	90 93 b6 29 	sts	0x29B6, r25	; 0x8029b6 <menus+0x1>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:322
       menus=1;
    414c:	81 e0       	ldi	r24, 0x01	; 1
    414e:	90 e0       	ldi	r25, 0x00	; 0
    4150:	80 93 03 28 	sts	0x2803, r24	; 0x802803 <once_update>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:324
      }
     once_update=1;
    4154:	90 93 04 28 	sts	0x2804, r25	; 0x802804 <once_update+0x1>
    4158:	08 95       	ret
    415a:	85 30       	cpi	r24, 0x05	; 5
    415c:	91 05       	cpc	r25, r1
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:326
  }
  else if(menus == 5)   //-------when in priming mode
    415e:	31 f4       	brne	.+12     	; 0x416c <click1()+0xf0>
    4160:	80 91 ad 29 	lds	r24, 0x29AD	; 0x8029ad <priming>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:329
  {
    revers = 5;
    priming ++;
    4164:	8f 5f       	subi	r24, 0xFF	; 255
    4166:	80 93 ad 29 	sts	0x29AD, r24	; 0x8029ad <priming>
    416a:	08 95       	ret
    416c:	04 97       	sbiw	r24, 0x04	; 4
    416e:	01 f5       	brne	.+64     	; 0x41b0 <click1()+0x134>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:331
  }
  else if( menus==4 )  //--------------when in setting mode
    4170:	80 91 a1 29 	lds	r24, 0x29A1	; 0x8029a1 <Print_flag>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:334
  {   
    //  revers = 4;
      if( Print_flag == 1 && encoder0Pos == 1 )    //---------------printing data 
    4174:	90 91 a2 29 	lds	r25, 0x29A2	; 0x8029a2 <Print_flag+0x1>
    4178:	81 30       	cpi	r24, 0x01	; 1
    417a:	91 05       	cpc	r25, r1
    417c:	c9 f4       	brne	.+50     	; 0x41b0 <click1()+0x134>
    417e:	20 91 b1 29 	lds	r18, 0x29B1	; 0x8029b1 <encoder0Pos>
    4182:	30 91 b2 29 	lds	r19, 0x29B2	; 0x8029b2 <encoder0Pos+0x1>
    4186:	21 30       	cpi	r18, 0x01	; 1
    4188:	31 05       	cpc	r19, r1
    418a:	41 f4       	brne	.+16     	; 0x419c <click1()+0x120>
digitalWrite():
    418c:	60 e0       	ldi	r22, 0x00	; 0
    418e:	83 e1       	ldi	r24, 0x13	; 19
    4190:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <digitalWrite.part.2>
click1():
    4194:	8c e6       	ldi	r24, 0x6C	; 108
    4196:	9e e2       	ldi	r25, 0x2E	; 46
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:338
       {

           digitalWrite(buzzer, LOW);
           PrintData.update();
    4198:	0c 94 af 14 	jmp	0x295e	; 0x295e <Ticker::update()>
    419c:	20 91 b1 29 	lds	r18, 0x29B1	; 0x8029b1 <encoder0Pos>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:340
       }
       else if( Print_flag == 1 && encoder0Pos == 0 )   //-------------saving data
    41a0:	30 91 b2 29 	lds	r19, 0x29B2	; 0x8029b2 <encoder0Pos+0x1>
    41a4:	23 2b       	or	r18, r19
    41a6:	21 f4       	brne	.+8      	; 0x41b0 <click1()+0x134>
Data_Save():
    41a8:	80 93 a5 29 	sts	0x29A5, r24	; 0x8029a5 <Save_flag>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:1382

 //-------------------------------function for data save-----------------------------//
void Data_Save()    
{
  // Serial.println("Data Save Successfully...");
  Save_flag = 1;
    41ac:	90 93 a6 29 	sts	0x29A6, r25	; 0x8029a6 <Save_flag+0x1>
click1():
    41b0:	08 95       	ret

000041b2 <PinB()>:
PinB():
    41b2:	f8 94       	cli
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:354
  //         Data_Save();

  // }


}
    41b4:	88 e0       	ldi	r24, 0x08	; 8
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:268
}


void PinB()
{
  cli(); //stop interrupts happening before we read pin values
    41b6:	0e 94 10 0f 	call	0x1e20	; 0x1e20 <digitalRead>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:269
  if(digitalRead(pinA) == HIGH && digitalRead(pinB) == HIGH && bFlag) 
    41ba:	81 30       	cpi	r24, 0x01	; 1
    41bc:	49 f5       	brne	.+82     	; 0x4210 <PinB()+0x5e>
    41be:	89 e0       	ldi	r24, 0x09	; 9
    41c0:	0e 94 10 0f 	call	0x1e20	; 0x1e20 <digitalRead>
    41c4:	81 30       	cpi	r24, 0x01	; 1
    41c6:	21 f5       	brne	.+72     	; 0x4210 <PinB()+0x5e>
    41c8:	80 91 33 28 	lds	r24, 0x2833	; 0x802833 <bFlag>
    41cc:	88 23       	and	r24, r24
    41ce:	01 f1       	breq	.+64     	; 0x4210 <PinB()+0x5e>
    41d0:	80 91 45 28 	lds	r24, 0x2845	; 0x802845 <encoderPos>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:271
  { 
    encoderPos ++; 
    41d4:	90 91 46 28 	lds	r25, 0x2846	; 0x802846 <encoderPos+0x1>
    41d8:	01 96       	adiw	r24, 0x01	; 1
    41da:	80 93 45 28 	sts	0x2845, r24	; 0x802845 <encoderPos>
    41de:	90 93 46 28 	sts	0x2846, r25	; 0x802846 <encoderPos+0x1>
    41e2:	10 92 33 28 	sts	0x2833, r1	; 0x802833 <bFlag>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:272
    bFlag = 0; 
    41e6:	10 92 32 28 	sts	0x2832, r1	; 0x802832 <aFlag>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:273
    aFlag = 0; 
    41ea:	81 e0       	ldi	r24, 0x01	; 1
    41ec:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:274
    checkflag=1;
    41ee:	80 93 41 28 	sts	0x2841, r24	; 0x802841 <checkflag>
    41f2:	90 93 42 28 	sts	0x2842, r25	; 0x802842 <checkflag+0x1>
    41f6:	78 94       	sei
encode_increment():
    41f8:	20 91 43 28 	lds	r18, 0x2843	; 0x802843 <oldEncPos>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/Enco.cpp:29
}

//------------------------------ENCODER POSITION CHANGE ------------------------------//
void Eclass :: encode_increment()
{
  if(oldEncPos != encoderPos) 
    41fc:	30 91 44 28 	lds	r19, 0x2844	; 0x802844 <oldEncPos+0x1>
    4200:	80 91 45 28 	lds	r24, 0x2845	; 0x802845 <encoderPos>
    4204:	90 91 46 28 	lds	r25, 0x2846	; 0x802846 <encoderPos+0x1>
    4208:	28 17       	cp	r18, r24
    420a:	39 07       	cpc	r19, r25
    420c:	49 f0       	breq	.+18     	; 0x4220 <PinB()+0x6e>
    420e:	5d cd       	rjmp	.-1350   	; 0x3cca <Eclass::encode_increment() [clone .part.1]>
PinB():
    4210:	89 e0       	ldi	r24, 0x09	; 9
    4212:	0e 94 10 0f 	call	0x1e20	; 0x1e20 <digitalRead>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:276
  }
  else if (digitalRead(pinB) == HIGH) aFlag = 1; //signal that we're expecting pinA to signal the transition to detent from free rotation
    4216:	81 30       	cpi	r24, 0x01	; 1
    4218:	71 f7       	brne	.-36     	; 0x41f6 <PinB()+0x44>
    421a:	80 93 32 28 	sts	0x2832, r24	; 0x802832 <aFlag>
    421e:	eb cf       	rjmp	.-42     	; 0x41f6 <PinB()+0x44>
    4220:	08 95       	ret

00004222 <PinA()>:
PinA():
    4222:	f8 94       	cli
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:284
//  if(cnt >= 4)
//  {
//    cnt = 0;
    Enco.encode_increment();
//  }
}
    4224:	88 e0       	ldi	r24, 0x08	; 8
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:248
}

//-----------------------------------------------------------------ENCODER INTERRUPT--------------------------------------------------//
void PinA()
{
  cli(); //stop interrupts happening before we read pin values
    4226:	0e 94 10 0f 	call	0x1e20	; 0x1e20 <digitalRead>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:250
//  reading = PIND & 0xC; 
  if(digitalRead(pinA) == HIGH && digitalRead(pinB) == HIGH && aFlag)
    422a:	81 30       	cpi	r24, 0x01	; 1
    422c:	09 f0       	breq	.+2      	; 0x4230 <PinA()+0xe>
    422e:	41 c0       	rjmp	.+130    	; 0x42b2 <PinA()+0x90>
    4230:	89 e0       	ldi	r24, 0x09	; 9
    4232:	0e 94 10 0f 	call	0x1e20	; 0x1e20 <digitalRead>
    4236:	81 30       	cpi	r24, 0x01	; 1
    4238:	e1 f5       	brne	.+120    	; 0x42b2 <PinA()+0x90>
    423a:	80 91 32 28 	lds	r24, 0x2832	; 0x802832 <aFlag>
    423e:	88 23       	and	r24, r24
    4240:	c1 f1       	breq	.+112    	; 0x42b2 <PinA()+0x90>
    4242:	80 91 45 28 	lds	r24, 0x2845	; 0x802845 <encoderPos>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:252
  { 
    encoderPos --; 
    4246:	90 91 46 28 	lds	r25, 0x2846	; 0x802846 <encoderPos+0x1>
    424a:	01 97       	sbiw	r24, 0x01	; 1
    424c:	80 93 45 28 	sts	0x2845, r24	; 0x802845 <encoderPos>
    4250:	90 93 46 28 	sts	0x2846, r25	; 0x802846 <encoderPos+0x1>
    4254:	10 92 33 28 	sts	0x2833, r1	; 0x802833 <bFlag>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:253
    bFlag = 0; 
    4258:	10 92 32 28 	sts	0x2832, r1	; 0x802832 <aFlag>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:254
    aFlag = 0; 
    425c:	10 92 41 28 	sts	0x2841, r1	; 0x802841 <checkflag>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:255
    checkflag=0;
    4260:	10 92 42 28 	sts	0x2842, r1	; 0x802842 <checkflag+0x1>
    4264:	78 94       	sei
digitalWrite():
    4266:	61 e0       	ldi	r22, 0x01	; 1
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:258
  }
  else if (digitalRead(pinA) == HIGH) bFlag = 1; 
  sei(); //restart interrupts
    4268:	83 e1       	ldi	r24, 0x13	; 19
    426a:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <digitalWrite.part.2>
interval():
    426e:	80 91 ab 2e 	lds	r24, 0x2EAB	; 0x802eab <buzz+0x9>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:97
    4272:	90 91 ac 2e 	lds	r25, 0x2EAC	; 0x802eac <buzz+0xa>
    4276:	89 2b       	or	r24, r25
    4278:	21 f5       	brne	.+72     	; 0x42c2 <PinA()+0xa0>
PinA():
    427a:	80 e5       	ldi	r24, 0x50	; 80
    427c:	93 ec       	ldi	r25, 0xC3	; 195
    427e:	a0 e0       	ldi	r26, 0x00	; 0
    4280:	b0 e0       	ldi	r27, 0x00	; 0
interval():
    4282:	80 93 a3 2e 	sts	0x2EA3, r24	; 0x802ea3 <buzz+0x1>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:98
	this->timer = timer;
    4286:	90 93 a4 2e 	sts	0x2EA4, r25	; 0x802ea4 <buzz+0x2>
    428a:	a0 93 a5 2e 	sts	0x2EA5, r26	; 0x802ea5 <buzz+0x3>
    428e:	b0 93 a6 2e 	sts	0x2EA6, r27	; 0x802ea6 <buzz+0x4>
PinA():
    4292:	82 ea       	ldi	r24, 0xA2	; 162
    4294:	9e e2       	ldi	r25, 0x2E	; 46
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:261
  digitalWrite(buzzer, HIGH);
  buzz.interval(50);
  buzz.start();
    4296:	0e 94 27 15 	call	0x2a4e	; 0x2a4e <Ticker::start()>
encode_increment():
    429a:	20 91 43 28 	lds	r18, 0x2843	; 0x802843 <oldEncPos>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/Enco.cpp:29
    429e:	30 91 44 28 	lds	r19, 0x2844	; 0x802844 <oldEncPos+0x1>
    42a2:	80 91 45 28 	lds	r24, 0x2845	; 0x802845 <encoderPos>
    42a6:	90 91 46 28 	lds	r25, 0x2846	; 0x802846 <encoderPos+0x1>
    42aa:	28 17       	cp	r18, r24
    42ac:	39 07       	cpc	r19, r25
    42ae:	71 f0       	breq	.+28     	; 0x42cc <PinA()+0xaa>
    42b0:	0c cd       	rjmp	.-1512   	; 0x3cca <Eclass::encode_increment() [clone .part.1]>
PinA():
    42b2:	88 e0       	ldi	r24, 0x08	; 8
    42b4:	0e 94 10 0f 	call	0x1e20	; 0x1e20 <digitalRead>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:257
    encoderPos --; 
    bFlag = 0; 
    aFlag = 0; 
    checkflag=0;
  }
  else if (digitalRead(pinA) == HIGH) bFlag = 1; 
    42b8:	81 30       	cpi	r24, 0x01	; 1
    42ba:	a1 f6       	brne	.-88     	; 0x4264 <PinA()+0x42>
    42bc:	80 93 33 28 	sts	0x2833, r24	; 0x802833 <bFlag>
    42c0:	d1 cf       	rjmp	.-94     	; 0x4264 <PinA()+0x42>
interval():
    42c2:	82 e3       	ldi	r24, 0x32	; 50
    42c4:	90 e0       	ldi	r25, 0x00	; 0
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:97
		}
	return false;
	}

void Ticker::interval(uint32_t timer) {
	if (resolution == MICROS) timer = timer * 1000;
    42c6:	a0 e0       	ldi	r26, 0x00	; 0
    42c8:	b0 e0       	ldi	r27, 0x00	; 0
    42ca:	db cf       	rjmp	.-74     	; 0x4282 <PinA()+0x60>
PinA():
    42cc:	08 95       	ret

000042ce <U8G2::write(unsigned char const*, unsigned int)>:
write():
    42ce:	cf 92       	push	r12
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:263
  sei(); //restart interrupts
  digitalWrite(buzzer, HIGH);
  buzz.interval(50);
  buzz.start();
  Enco.encode_increment();
}
    42d0:	df 92       	push	r13
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8g2lib.h:356
	
      }
      return 1;
     }

    size_t write(const uint8_t *buffer, size_t size) {
    42d2:	ef 92       	push	r14
    42d4:	ff 92       	push	r15
    42d6:	0f 93       	push	r16
    42d8:	1f 93       	push	r17
    42da:	cf 93       	push	r28
    42dc:	df 93       	push	r29
    42de:	6c 01       	movw	r12, r24
    42e0:	eb 01       	movw	r28, r22
    42e2:	7b 01       	movw	r14, r22
    42e4:	e4 0e       	add	r14, r20
    42e6:	f5 1e       	adc	r15, r21
    42e8:	10 e0       	ldi	r17, 0x00	; 0
    42ea:	00 e0       	ldi	r16, 0x00	; 0
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8g2lib.h:357
      size_t cnt = 0;
    42ec:	ce 15       	cp	r28, r14
    42ee:	df 05       	cpc	r29, r15
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8g2lib.h:358
      while( size > 0 ) {
    42f0:	61 f0       	breq	.+24     	; 0x430a <U8G2::write(unsigned char const*, unsigned int)+0x3c>
    42f2:	69 91       	ld	r22, Y+
    42f4:	d6 01       	movw	r26, r12
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8g2lib.h:359
	cnt += write(*buffer++); 
    42f6:	ed 91       	ld	r30, X+
    42f8:	fc 91       	ld	r31, X
    42fa:	01 90       	ld	r0, Z+
    42fc:	f0 81       	ld	r31, Z
    42fe:	e0 2d       	mov	r30, r0
    4300:	c6 01       	movw	r24, r12
    4302:	09 95       	icall
    4304:	08 0f       	add	r16, r24
    4306:	19 1f       	adc	r17, r25
    4308:	f1 cf       	rjmp	.-30     	; 0x42ec <U8G2::write(unsigned char const*, unsigned int)+0x1e>
    430a:	c8 01       	movw	r24, r16
    430c:	df 91       	pop	r29
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8g2lib.h:363
	size--;
      }
      return cnt;
    }
    430e:	cf 91       	pop	r28
    4310:	1f 91       	pop	r17
    4312:	0f 91       	pop	r16
    4314:	ff 90       	pop	r15
    4316:	ef 90       	pop	r14
    4318:	df 90       	pop	r13
    431a:	cf 90       	pop	r12
    431c:	08 95       	ret

0000431e <U8G2::write(unsigned char)>:
    431e:	cf 92       	push	r12
    4320:	df 92       	push	r13
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8g2lib.h:318
    void writeBufferPBM2(Print &p);
    void writeBufferXBM2(Print &p);
#endif

    /* virtual function for print base class */    
    size_t write(uint8_t v) {
    4322:	ef 92       	push	r14
    4324:	ff 92       	push	r15
    4326:	0f 93       	push	r16
    4328:	1f 93       	push	r17
    432a:	cf 93       	push	r28
    432c:	df 93       	push	r29
    432e:	ec 01       	movw	r28, r24
    4330:	6c 01       	movw	r12, r24
    4332:	24 e0       	ldi	r18, 0x04	; 4
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8g2lib.h:319
      uint16_t e = cpp_next_cb(&(u8g2.u8x8), v);
    4334:	c2 0e       	add	r12, r18
    4336:	d1 1c       	adc	r13, r1
    4338:	fc 01       	movw	r30, r24
    433a:	e1 58       	subi	r30, 0x81	; 129
    433c:	ff 4f       	sbci	r31, 0xFF	; 255
    433e:	01 90       	ld	r0, Z+
    4340:	f0 81       	ld	r31, Z
    4342:	e0 2d       	mov	r30, r0
    4344:	c6 01       	movw	r24, r12
    4346:	09 95       	icall
    4348:	8e 3f       	cpi	r24, 0xFE	; 254
    434a:	ef ef       	ldi	r30, 0xFF	; 255
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8g2lib.h:321
      
      if ( e < 0x0fffe )
    434c:	9e 07       	cpc	r25, r30
    434e:	c0 f4       	brcc	.+48     	; 0x4380 <U8G2::write(unsigned char)+0x62>
    4350:	8e 01       	movw	r16, r28
    4352:	0e 57       	subi	r16, 0x7E	; 126
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8g2lib.h:323
      {
	u8g2_uint_t delta = u8g2_DrawGlyph(&u8g2, tx, ty, e);
    4354:	1f 4f       	sbci	r17, 0xFF	; 255
    4356:	7e 01       	movw	r14, r28
    4358:	f1 e8       	ldi	r31, 0x81	; 129
    435a:	ef 0e       	add	r14, r31
    435c:	f1 1c       	adc	r15, r1
    435e:	9c 01       	movw	r18, r24
    4360:	f8 01       	movw	r30, r16
    4362:	40 81       	ld	r20, Z
    4364:	f7 01       	movw	r30, r14
    4366:	60 81       	ld	r22, Z
    4368:	c6 01       	movw	r24, r12
    436a:	1e d9       	rcall	.-3524   	; 0x35a8 <u8g2_DrawGlyph>
    436c:	c1 5a       	subi	r28, 0xA1	; 161
    436e:	df 4f       	sbci	r29, 0xFF	; 255
    4370:	98 81       	ld	r25, Y
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8g2lib.h:326
	
#ifdef U8G2_WITH_FONT_ROTATION
	switch(u8g2.font_decode.dir)
    4372:	91 30       	cpi	r25, 0x01	; 1
    4374:	a9 f0       	breq	.+42     	; 0x43a0 <U8G2::write(unsigned char)+0x82>
    4376:	78 f0       	brcs	.+30     	; 0x4396 <U8G2::write(unsigned char)+0x78>
    4378:	92 30       	cpi	r25, 0x02	; 2
    437a:	a1 f0       	breq	.+40     	; 0x43a4 <U8G2::write(unsigned char)+0x86>
    437c:	93 30       	cpi	r25, 0x03	; 3
    437e:	b9 f0       	breq	.+46     	; 0x43ae <U8G2::write(unsigned char)+0x90>
    4380:	81 e0       	ldi	r24, 0x01	; 1
    4382:	90 e0       	ldi	r25, 0x00	; 0
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8g2lib.h:354
	
	
	
      }
      return 1;
     }
    4384:	df 91       	pop	r29
    4386:	cf 91       	pop	r28
    4388:	1f 91       	pop	r17
    438a:	0f 91       	pop	r16
    438c:	ff 90       	pop	r15
    438e:	ef 90       	pop	r14
    4390:	df 90       	pop	r13
    4392:	cf 90       	pop	r12
    4394:	08 95       	ret
    4396:	f7 01       	movw	r30, r14
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8g2lib.h:329
	
#ifdef U8G2_WITH_FONT_ROTATION
	switch(u8g2.font_decode.dir)
	{
	  case 0:
	    tx += delta;
    4398:	90 81       	ld	r25, Z
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8g2lib.h:332
	    break;
	  case 1:
	    ty += delta;
    439a:	89 0f       	add	r24, r25
    439c:	80 83       	st	Z, r24
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8g2lib.h:338
	    break;
	  case 2:
	    tx -= delta;
	    break;
	  case 3:
	    ty -= delta;
    439e:	f0 cf       	rjmp	.-32     	; 0x4380 <U8G2::write(unsigned char)+0x62>
    43a0:	f8 01       	movw	r30, r16
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8g2lib.h:332
	{
	  case 0:
	    tx += delta;
	    break;
	  case 1:
	    ty += delta;
    43a2:	fa cf       	rjmp	.-12     	; 0x4398 <U8G2::write(unsigned char)+0x7a>
    43a4:	f7 01       	movw	r30, r14
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8g2lib.h:335
	    break;
	  case 2:
	    tx -= delta;
    43a6:	90 81       	ld	r25, Z
c:\Users\Manish.Acharya\Documents\Arduino\libraries\U8g2_Arduino-master\src/U8g2lib.h:338
	    break;
	  case 3:
	    ty -= delta;
    43a8:	98 1b       	sub	r25, r24
    43aa:	89 2f       	mov	r24, r25
    43ac:	f7 cf       	rjmp	.-18     	; 0x439c <U8G2::write(unsigned char)+0x7e>
    43ae:	f8 01       	movw	r30, r16
    43b0:	fa cf       	rjmp	.-12     	; 0x43a6 <U8G2::write(unsigned char)+0x88>

000043b2 <UartClass::begin(unsigned long)>:
begin():
    43b2:	dc 01       	movw	r26, r24
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/UART.h:160

  public:
    inline UartClass(volatile USART_t *hwserial_module, uint8_t hwserial_rx_pin, uint8_t hwserial_tx_pin, uint8_t hwserial_rx_pin_swap, uint8_t hwserial_tx_pin_swap, uint8_t dre_vect_num, uint8_t uart_mux, uint8_t uart_mux_swap);
    bool pins(uint8_t tx, uint8_t rx);
    bool swap(uint8_t state = 1);
    void begin(unsigned long baud) { begin(baud, SERIAL_8N1); }
    43b4:	ed 91       	ld	r30, X+
    43b6:	fc 91       	ld	r31, X
    43b8:	04 88       	ldd	r0, Z+20	; 0x14
    43ba:	f5 89       	ldd	r31, Z+21	; 0x15
    43bc:	e0 2d       	mov	r30, r0
    43be:	23 e0       	ldi	r18, 0x03	; 3
    43c0:	30 e0       	ldi	r19, 0x00	; 0
    43c2:	09 94       	ijmp

000043c4 <Print::availableForWrite()>:
availableForWrite():
    43c4:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/Print.h:58
      return write((const uint8_t *)buffer, size);
    }

    // default to zero, meaning "a single write may block"
    // should be overriden by subclasses with buffering
    virtual int availableForWrite() { return 0; }
    43c6:	80 e0       	ldi	r24, 0x00	; 0
    43c8:	08 95       	ret

000043ca <Adafruit_Thermal::setSize(char) [clone .constprop.34]>:
setSize():
    43ca:	08 2e       	mov	r0, r24
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:421

void Adafruit_Thermal::setSize(char value) {
  uint8_t size;

  switch (toupper(value)) {
    43cc:	00 0c       	add	r0, r0
    43ce:	99 0b       	sbc	r25, r25
    43d0:	0e 94 9e 3b 	call	0x773c	; 0x773c <toupper>
    43d4:	8c 34       	cpi	r24, 0x4C	; 76
    43d6:	91 05       	cpc	r25, r1
    43d8:	69 f0       	breq	.+26     	; 0x43f4 <Adafruit_Thermal::setSize(char) [clone .constprop.34]+0x2a>
    43da:	8d 34       	cpi	r24, 0x4D	; 77
    43dc:	91 05       	cpc	r25, r1
    43de:	31 f0       	breq	.+12     	; 0x43ec <Adafruit_Thermal::setSize(char) [clone .constprop.34]+0x22>
doubleWidthOff():
    43e0:	80 e2       	ldi	r24, 0x20	; 32
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:367

void Adafruit_Thermal::doubleHeightOff() { unsetPrintMode(DOUBLE_HEIGHT_MASK); }

void Adafruit_Thermal::doubleWidthOn() { setPrintMode(DOUBLE_WIDTH_MASK); }

void Adafruit_Thermal::doubleWidthOff() { unsetPrintMode(DOUBLE_WIDTH_MASK); }
    43e2:	0e 94 b7 13 	call	0x276e	; 0x276e <Adafruit_Thermal::unsetPrintMode(unsigned char) [clone .constprop.38]>
doubleHeightOff():
    43e6:	80 e1       	ldi	r24, 0x10	; 16
doubleWidthOff():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:363
  }
}

void Adafruit_Thermal::doubleHeightOn() { setPrintMode(DOUBLE_HEIGHT_MASK); }

void Adafruit_Thermal::doubleHeightOff() { unsetPrintMode(DOUBLE_HEIGHT_MASK); }
    43e8:	0c 94 b7 13 	jmp	0x276e	; 0x276e <Adafruit_Thermal::unsetPrintMode(unsigned char) [clone .constprop.38]>
setSize():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:367

void Adafruit_Thermal::doubleWidthOn() { setPrintMode(DOUBLE_WIDTH_MASK); }

void Adafruit_Thermal::doubleWidthOff() { unsetPrintMode(DOUBLE_WIDTH_MASK); }
    43ec:	0e 94 ab 13 	call	0x2756	; 0x2756 <Adafruit_Thermal::doubleHeightOn() [clone .constprop.39]>
doubleWidthOff():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:433
    break;
  case 'M': // Medium: double height
    // size = 0x01;
    // charHeight = 48;
    // maxColumn = 32;
    doubleHeightOn();
    43f0:	80 e2       	ldi	r24, 0x20	; 32
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:367

void Adafruit_Thermal::doubleHeightOff() { unsetPrintMode(DOUBLE_HEIGHT_MASK); }

void Adafruit_Thermal::doubleWidthOn() { setPrintMode(DOUBLE_WIDTH_MASK); }

void Adafruit_Thermal::doubleWidthOff() { unsetPrintMode(DOUBLE_WIDTH_MASK); }
    43f2:	fa cf       	rjmp	.-12     	; 0x43e8 <Adafruit_Thermal::setSize(char) [clone .constprop.34]+0x1e>
setSize():
    43f4:	0e 94 ab 13 	call	0x2756	; 0x2756 <Adafruit_Thermal::doubleHeightOn() [clone .constprop.39]>
setPrintMode():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:440
    break;
  case 'L': // Large: double width and height
    // size = 0x11;
    // charHeight = 48;
    // maxColumn = 16;
    doubleHeightOn();
    43f8:	80 91 b7 2f 	lds	r24, 0x2FB7	; 0x802fb7 <printer+0x6>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:305
  }
  maxColumn = (384 / charWidth);
}

void Adafruit_Thermal::setPrintMode(uint8_t mask) {
  printMode |= mask;
    43fc:	80 62       	ori	r24, 0x20	; 32
    43fe:	80 93 b7 2f 	sts	0x2FB7, r24	; 0x802fb7 <printer+0x6>
    4402:	0e 94 a6 13 	call	0x274c	; 0x274c <Adafruit_Thermal::writePrintMode() [clone .constprop.42]>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:306
  writePrintMode();
    4406:	80 91 b7 2f 	lds	r24, 0x2FB7	; 0x802fb7 <printer+0x6>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:307
  adjustCharValues(printMode);
    440a:	0c 94 42 0e 	jmp	0x1c84	; 0x1c84 <Adafruit_Thermal::adjustCharValues(unsigned char) [clone .constprop.44]>

0000440e <Print::write(char const*) [clone .part.2]>:
_ZN5Print5writeEPKc.part.2():
    440e:	fb 01       	movw	r30, r22
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/Print.h:49
    void clearWriteError() { setWriteError(0); }

    virtual size_t write(uint8_t) = 0;
    size_t write(const char *str) {
      if (str == NULL) return 0;
      return write((const uint8_t *)str, strlen(str));
    4410:	01 90       	ld	r0, Z+
    4412:	00 20       	and	r0, r0
    4414:	e9 f7       	brne	.-6      	; 0x4410 <Print::write(char const*) [clone .part.2]+0x2>
    4416:	31 97       	sbiw	r30, 0x01	; 1
    4418:	af 01       	movw	r20, r30
    441a:	46 1b       	sub	r20, r22
    441c:	57 0b       	sbc	r21, r23
    441e:	dc 01       	movw	r26, r24
    4420:	ed 91       	ld	r30, X+
    4422:	fc 91       	ld	r31, X
    4424:	02 80       	ldd	r0, Z+2	; 0x02
    4426:	f3 81       	ldd	r31, Z+3	; 0x03
    4428:	e0 2d       	mov	r30, r0
    442a:	09 94       	ijmp

0000442c <Print::println(char const*) [clone .constprop.51]>:
println():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/Print.cpp:151
  size_t n = print(s);
  n += println();
  return n;
}

size_t Print::println(const char c[])
    442c:	cf 93       	push	r28
    442e:	df 93       	push	r29
write():
    4430:	bc 01       	movw	r22, r24
    4432:	81 eb       	ldi	r24, 0xB1	; 177
    4434:	9f e2       	ldi	r25, 0x2F	; 47
    4436:	eb df       	rcall	.-42     	; 0x440e <Print::write(char const*) [clone .part.2]>
    4438:	ec 01       	movw	r28, r24
    443a:	69 e1       	ldi	r22, 0x19	; 25
    443c:	79 eb       	ldi	r23, 0xB9	; 185
    443e:	81 eb       	ldi	r24, 0xB1	; 177
    4440:	9f e2       	ldi	r25, 0x2F	; 47
    4442:	e5 df       	rcall	.-54     	; 0x440e <Print::write(char const*) [clone .part.2]>
println():
    4444:	8c 0f       	add	r24, r28
    4446:	9d 1f       	adc	r25, r29
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/Print.cpp:156
{
  size_t n = print(c);
  n += println();
  return n;
}
    4448:	df 91       	pop	r29
    444a:	cf 91       	pop	r28
    444c:	08 95       	ret

0000444e <Print::print(int, int) [clone .constprop.47]>:
print():
    444e:	4f 92       	push	r4
    4450:	5f 92       	push	r5
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/Print.cpp:82
size_t Print::print(unsigned char b, int base)
{
  return print((unsigned long)b, base);
}

size_t Print::print(int n, int base)
    4452:	6f 92       	push	r6
    4454:	7f 92       	push	r7
    4456:	8f 92       	push	r8
    4458:	9f 92       	push	r9
    445a:	af 92       	push	r10
    445c:	bf 92       	push	r11
    445e:	cf 92       	push	r12
    4460:	df 92       	push	r13
    4462:	ef 92       	push	r14
    4464:	ff 92       	push	r15
    4466:	0f 93       	push	r16
    4468:	1f 93       	push	r17
    446a:	cf 93       	push	r28
    446c:	df 93       	push	r29
    446e:	cd b7       	in	r28, 0x3d	; 61
    4470:	de b7       	in	r29, 0x3e	; 62
    4472:	a1 97       	sbiw	r28, 0x21	; 33
    4474:	cd bf       	out	0x3d, r28	; 61
    4476:	de bf       	out	0x3e, r29	; 62
    4478:	8c 01       	movw	r16, r24
    447a:	6b 01       	movw	r12, r22
    447c:	77 0f       	add	r23, r23
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/Print.cpp:84
{
  return print((long)n, base);
    447e:	ee 08       	sbc	r14, r14
    4480:	ff 08       	sbc	r15, r15
    4482:	f7 fe       	sbrs	r15, 7
    4484:	45 c0       	rjmp	.+138    	; 0x4510 <Print::print(int, int) [clone .constprop.47]+0xc2>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/Print.cpp:100
  {
    return write(n);
  }
  else if (base == 10)
  {
    if (n < 0)
    4486:	dc 01       	movw	r26, r24
    4488:	ed 91       	ld	r30, X+
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/Print.cpp:74
  return write(str);
}

size_t Print::print(char c)
{
  return write(c);
    448a:	fc 91       	ld	r31, X
    448c:	01 90       	ld	r0, Z+
    448e:	f0 81       	ld	r31, Z
    4490:	e0 2d       	mov	r30, r0
    4492:	6d e2       	ldi	r22, 0x2D	; 45
    4494:	09 95       	icall
    4496:	5c 01       	movw	r10, r24
    4498:	22 27       	eor	r18, r18
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/Print.cpp:103
  else if (base == 10)
  {
    if (n < 0)
    {
      int t = print('-');
      n = -n;
    449a:	33 27       	eor	r19, r19
    449c:	a9 01       	movw	r20, r18
    449e:	2c 19       	sub	r18, r12
    44a0:	3d 09       	sbc	r19, r13
    44a2:	4e 09       	sbc	r20, r14
    44a4:	5f 09       	sbc	r21, r15
printNumber():
    44a6:	19 a2       	std	Y+33, r1	; 0x21
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/Print.cpp:250
size_t Print::printNumber(unsigned long n, uint8_t base)
{
  char buf[8 * sizeof(long) + 1]; // Assumes 8-bit chars plus zero byte.
  char *str = &buf[sizeof(buf) - 1];

  *str = '\0';
    44a8:	fe 01       	movw	r30, r28
    44aa:	b1 96       	adiw	r30, 0x21	; 33
    44ac:	7f 01       	movw	r14, r30
    44ae:	9a e0       	ldi	r25, 0x0A	; 10
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/Print.cpp:257
  // prevent crash if called with base == 1
  if (base < 2) base = 10;

  do
  {
    char c = n % base;
    44b0:	49 2e       	mov	r4, r25
    44b2:	51 2c       	mov	r5, r1
    44b4:	61 2c       	mov	r6, r1
    44b6:	71 2c       	mov	r7, r1
    44b8:	ca 01       	movw	r24, r20
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/Print.cpp:258
    n /= base;
    44ba:	b9 01       	movw	r22, r18
    44bc:	a3 01       	movw	r20, r6
    44be:	92 01       	movw	r18, r4
    44c0:	0e 94 79 39 	call	0x72f2	; 0x72f2 <__udivmodsi4>
    44c4:	60 5d       	subi	r22, 0xD0	; 208
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/Print.cpp:260

    *--str = c < 10 ? c + '0' : c + 'A' - 10;
    44c6:	d7 01       	movw	r26, r14
    44c8:	6e 93       	st	-X, r22
    44ca:	7d 01       	movw	r14, r26
    44cc:	21 15       	cp	r18, r1
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/Print.cpp:261
  } while (n);
    44ce:	31 05       	cpc	r19, r1
    44d0:	41 05       	cpc	r20, r1
    44d2:	51 05       	cpc	r21, r1
    44d4:	89 f7       	brne	.-30     	; 0x44b8 <Print::print(int, int) [clone .constprop.47]+0x6a>
print():
    44d6:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/Print.h:48
    int getWriteError() { return write_error; }
    void clearWriteError() { setWriteError(0); }

    virtual size_t write(uint8_t) = 0;
    size_t write(const char *str) {
      if (str == NULL) return 0;
    44d8:	80 e0       	ldi	r24, 0x00	; 0
write():
    44da:	10 97       	sbiw	r26, 0x00	; 0
    44dc:	19 f0       	breq	.+6      	; 0x44e4 <Print::print(int, int) [clone .constprop.47]+0x96>
    44de:	bd 01       	movw	r22, r26
    44e0:	c8 01       	movw	r24, r16
    44e2:	95 df       	rcall	.-214    	; 0x440e <Print::write(char const*) [clone .part.2]>
print():
    44e4:	8a 0d       	add	r24, r10
    44e6:	9b 1d       	adc	r25, r11
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/Print.cpp:104
  {
    if (n < 0)
    {
      int t = print('-');
      n = -n;
      return printNumber(n, 10) + t;
    44e8:	a1 96       	adiw	r28, 0x21	; 33
    44ea:	cd bf       	out	0x3d, r28	; 61
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/Print.cpp:85
}

size_t Print::print(int n, int base)
{
  return print((long)n, base);
}
    44ec:	de bf       	out	0x3e, r29	; 62
    44ee:	df 91       	pop	r29
    44f0:	cf 91       	pop	r28
    44f2:	1f 91       	pop	r17
    44f4:	0f 91       	pop	r16
    44f6:	ff 90       	pop	r15
    44f8:	ef 90       	pop	r14
    44fa:	df 90       	pop	r13
    44fc:	cf 90       	pop	r12
    44fe:	bf 90       	pop	r11
    4500:	af 90       	pop	r10
    4502:	9f 90       	pop	r9
    4504:	8f 90       	pop	r8
    4506:	7f 90       	pop	r7
    4508:	6f 90       	pop	r6
    450a:	5f 90       	pop	r5
    450c:	4f 90       	pop	r4
    450e:	08 95       	ret
    4510:	a7 01       	movw	r20, r14
    4512:	96 01       	movw	r18, r12
printNumber():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/Print.cpp:106
    {
      int t = print('-');
      n = -n;
      return printNumber(n, 10) + t;
    }
    return printNumber(n, 10);
    4514:	19 a2       	std	Y+33, r1	; 0x21
    4516:	fe 01       	movw	r30, r28
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/Print.cpp:250
size_t Print::printNumber(unsigned long n, uint8_t base)
{
  char buf[8 * sizeof(long) + 1]; // Assumes 8-bit chars plus zero byte.
  char *str = &buf[sizeof(buf) - 1];

  *str = '\0';
    4518:	b1 96       	adiw	r30, 0x21	; 33
    451a:	7f 01       	movw	r14, r30
    451c:	8a e0       	ldi	r24, 0x0A	; 10
    451e:	88 2e       	mov	r8, r24
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/Print.cpp:257
  // prevent crash if called with base == 1
  if (base < 2) base = 10;

  do
  {
    char c = n % base;
    4520:	91 2c       	mov	r9, r1
    4522:	a1 2c       	mov	r10, r1
    4524:	b1 2c       	mov	r11, r1
    4526:	ca 01       	movw	r24, r20
    4528:	b9 01       	movw	r22, r18
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/Print.cpp:258
    n /= base;
    452a:	a5 01       	movw	r20, r10
    452c:	94 01       	movw	r18, r8
    452e:	0e 94 79 39 	call	0x72f2	; 0x72f2 <__udivmodsi4>
    4532:	60 5d       	subi	r22, 0xD0	; 208
    4534:	d7 01       	movw	r26, r14
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/Print.cpp:260

    *--str = c < 10 ? c + '0' : c + 'A' - 10;
    4536:	6e 93       	st	-X, r22
    4538:	7d 01       	movw	r14, r26
    453a:	21 15       	cp	r18, r1
    453c:	31 05       	cpc	r19, r1
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/Print.cpp:261
  } while (n);
    453e:	41 05       	cpc	r20, r1
    4540:	51 05       	cpc	r21, r1
    4542:	89 f7       	brne	.-30     	; 0x4526 <Print::print(int, int) [clone .constprop.47]+0xd8>
print():
    4544:	90 e0       	ldi	r25, 0x00	; 0
    4546:	80 e0       	ldi	r24, 0x00	; 0
write():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/Print.h:48
    4548:	10 97       	sbiw	r26, 0x00	; 0
    454a:	71 f2       	breq	.-100    	; 0x44e8 <Print::print(int, int) [clone .constprop.47]+0x9a>
    454c:	bd 01       	movw	r22, r26
    454e:	c8 01       	movw	r24, r16
    4550:	5e df       	rcall	.-324    	; 0x440e <Print::write(char const*) [clone .part.2]>
    4552:	ca cf       	rjmp	.-108    	; 0x44e8 <Print::print(int, int) [clone .constprop.47]+0x9a>

00004554 <Data_Print()>:
Data_Print():
    4554:	cf 93       	push	r28
    4556:	82 e0       	ldi	r24, 0x02	; 2
    4558:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:1326

}

//---------------------------function for data print on printer---------------------------//
void Data_Print()    
{
    455a:	80 93 a5 29 	sts	0x29A5, r24	; 0x8029a5 <Save_flag>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:1327
   Save_flag = 2;
    455e:	90 93 a6 29 	sts	0x29A6, r25	; 0x8029a6 <Save_flag+0x1>
begin():
    4562:	8c e0       	ldi	r24, 0x0C	; 12
    4564:	91 e0       	ldi	r25, 0x01	; 1
    4566:	80 93 c0 2f 	sts	0x2FC0, r24	; 0x802fc0 <printer+0xf>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:170
  return 1;
}

void Adafruit_Thermal::begin(uint16_t version) {

  firmware = version;
    456a:	90 93 c1 2f 	sts	0x2FC1, r25	; 0x802fc1 <printer+0x10>
    456e:	40 e2       	ldi	r20, 0x20	; 32
    4570:	51 ea       	ldi	r21, 0xA1	; 161
    4572:	67 e0       	ldi	r22, 0x07	; 7
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:175

  // The printer can't start receiving data immediately upon power up --
  // it needs a moment to cold boot and initialize.  Allow at least 1/2
  // sec of uptime before printer can receive data.
  timeoutSet(500000L);
    4574:	70 e0       	ldi	r23, 0x00	; 0
    4576:	81 eb       	ldi	r24, 0xB1	; 177
    4578:	9f e2       	ldi	r25, 0x2F	; 47
    457a:	0e 94 53 13 	call	0x26a6	; 0x26a6 <Adafruit_Thermal::timeoutSet(unsigned long)>
wake():
    457e:	40 e0       	ldi	r20, 0x00	; 0
    4580:	50 e0       	ldi	r21, 0x00	; 0
    4582:	ba 01       	movw	r22, r20
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:614
  }
}

// Wake the printer from a low-energy state.
void Adafruit_Thermal::wake() {
  timeoutSet(0);   // Reset timeout counter
    4584:	81 eb       	ldi	r24, 0xB1	; 177
    4586:	9f e2       	ldi	r25, 0x2F	; 47
    4588:	0e 94 53 13 	call	0x26a6	; 0x26a6 <Adafruit_Thermal::timeoutSet(unsigned long)>
    458c:	6f ef       	ldi	r22, 0xFF	; 255
    458e:	81 eb       	ldi	r24, 0xB1	; 177
    4590:	9f e2       	ldi	r25, 0x2F	; 47
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:615
  writeBytes(255); // Wake
    4592:	0e 94 94 14 	call	0x2928	; 0x2928 <Adafruit_Thermal::writeBytes(unsigned char)>
    4596:	80 91 c0 2f 	lds	r24, 0x2FC0	; 0x802fc0 <printer+0xf>
    459a:	90 91 c1 2f 	lds	r25, 0x2FC1	; 0x802fc1 <printer+0x10>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:616
  if (firmware >= 264) {
    459e:	ca e0       	ldi	r28, 0x0A	; 10
    45a0:	88 30       	cpi	r24, 0x08	; 8
    45a2:	91 40       	sbci	r25, 0x01	; 1
    45a4:	08 f4       	brcc	.+2      	; 0x45a8 <Data_Print()+0x54>
    45a6:	36 c1       	rjmp	.+620    	; 0x4814 <Data_Print()+0x2c0>
    45a8:	62 e3       	ldi	r22, 0x32	; 50
    45aa:	70 e0       	ldi	r23, 0x00	; 0
    45ac:	80 e0       	ldi	r24, 0x00	; 0
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:617
    delay(50);
    45ae:	90 e0       	ldi	r25, 0x00	; 0
    45b0:	0e 94 59 0f 	call	0x1eb2	; 0x1eb2 <delay>
    45b4:	20 e0       	ldi	r18, 0x00	; 0
    45b6:	40 e0       	ldi	r20, 0x00	; 0
    45b8:	68 e3       	ldi	r22, 0x38	; 56
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:618
    writeBytes(ASCII_ESC, '8', 0, 0); // Sleep off (important!)
    45ba:	8b e1       	ldi	r24, 0x1B	; 27
    45bc:	0e 94 eb 13 	call	0x27d6	; 0x27d6 <Adafruit_Thermal::writeBytes(unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.30]>
reset():
    45c0:	80 e4       	ldi	r24, 0x40	; 64
    45c2:	0e 94 c5 13 	call	0x278a	; 0x278a <Adafruit_Thermal::writeBytes(unsigned char, unsigned char) [clone .constprop.32]>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:196
  maxChunkHeight = 255;
}

// Reset printer to default state.
void Adafruit_Thermal::reset() {
  writeBytes(ASCII_ESC, '@'); // Init command
    45c6:	8a e0       	ldi	r24, 0x0A	; 10
    45c8:	80 93 b8 2f 	sts	0x2FB8, r24	; 0x802fb8 <printer+0x7>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:197
  prevByte = '\n';            // Treat as if prior line is blank
    45cc:	10 92 b9 2f 	sts	0x2FB9, r1	; 0x802fb9 <printer+0x8>
    45d0:	80 e2       	ldi	r24, 0x20	; 32
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:198
  column = 0;
    45d2:	80 93 ba 2f 	sts	0x2FBA, r24	; 0x802fba <printer+0x9>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:199
  maxColumn = 32;
    45d6:	88 e1       	ldi	r24, 0x18	; 24
    45d8:	80 93 bb 2f 	sts	0x2FBB, r24	; 0x802fbb <printer+0xa>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:200
  charHeight = 24;
    45dc:	86 e0       	ldi	r24, 0x06	; 6
    45de:	80 93 bc 2f 	sts	0x2FBC, r24	; 0x802fbc <printer+0xb>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:201
  lineSpacing = 6;
    45e2:	82 e3       	ldi	r24, 0x32	; 50
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:202
  barcodeHeight = 50;
    45e4:	80 93 bd 2f 	sts	0x2FBD, r24	; 0x802fbd <printer+0xc>
    45e8:	80 91 c0 2f 	lds	r24, 0x2FC0	; 0x802fc0 <printer+0xf>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:204

  if (firmware >= 264) {
    45ec:	90 91 c1 2f 	lds	r25, 0x2FC1	; 0x802fc1 <printer+0x10>
    45f0:	88 30       	cpi	r24, 0x08	; 8
    45f2:	91 40       	sbci	r25, 0x01	; 1
    45f4:	78 f0       	brcs	.+30     	; 0x4614 <Data_Print()+0xc0>
    45f6:	84 e4       	ldi	r24, 0x44	; 68
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:206
    // Configure tab stops on recent printers
    writeBytes(ASCII_ESC, 'D'); // Set tab stops...
    45f8:	0e 94 c5 13 	call	0x278a	; 0x278a <Adafruit_Thermal::writeBytes(unsigned char, unsigned char) [clone .constprop.32]>
    45fc:	20 e1       	ldi	r18, 0x10	; 16
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:207
    writeBytes(4, 8, 12, 16);   // ...every 4 columns,
    45fe:	4c e0       	ldi	r20, 0x0C	; 12
    4600:	68 e0       	ldi	r22, 0x08	; 8
    4602:	84 e0       	ldi	r24, 0x04	; 4
    4604:	0e 94 eb 13 	call	0x27d6	; 0x27d6 <Adafruit_Thermal::writeBytes(unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.30]>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:208
    writeBytes(20, 24, 28, 0);  // 0 marks end-of-list.
    4608:	20 e0       	ldi	r18, 0x00	; 0
    460a:	4c e1       	ldi	r20, 0x1C	; 28
    460c:	68 e1       	ldi	r22, 0x18	; 24
    460e:	84 e1       	ldi	r24, 0x14	; 20
    4610:	0e 94 eb 13 	call	0x27d6	; 0x27d6 <Adafruit_Thermal::writeBytes(unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.30]>
setHeatConfig():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:468
// More heating time = darker print, but slower printing speed and
// possibly paper 'stiction'.  More heating interval = clearer print,
// but slower printing speed.
void Adafruit_Thermal::setHeatConfig(uint8_t dots, uint8_t time,
                                     uint8_t interval) {
  writeBytes(ASCII_ESC, '7');       // Esc 7 (print settings)
    4614:	87 e3       	ldi	r24, 0x37	; 55
    4616:	0e 94 c5 13 	call	0x278a	; 0x278a <Adafruit_Thermal::writeBytes(unsigned char, unsigned char) [clone .constprop.32]>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:469
  writeBytes(dots, time, interval); // Heating dots, heat time, heat interval
    461a:	48 e2       	ldi	r20, 0x28	; 40
    461c:	68 e7       	ldi	r22, 0x78	; 120
    461e:	8b e0       	ldi	r24, 0x0B	; 11
    4620:	0e 94 70 13 	call	0x26e0	; 0x26e0 <Adafruit_Thermal::writeBytes(unsigned char, unsigned char, unsigned char) [clone .constprop.43]>
begin():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:183
  reset();

  setHeatConfig();

  // Enable DTR pin if requested
  if (dtrPin < 255) {
    4624:	80 91 bf 2f 	lds	r24, 0x2FBF	; 0x802fbf <printer+0xe>
    4628:	8f 3f       	cpi	r24, 0xFF	; 255
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:184
    pinMode(dtrPin, INPUT_PULLUP);
    462a:	59 f0       	breq	.+22     	; 0x4642 <Data_Print()+0xee>
    462c:	62 e0       	ldi	r22, 0x02	; 2
    462e:	0e 94 9e 0e 	call	0x1d3c	; 0x1d3c <pinMode>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:185
    writeBytes(ASCII_GS, 'a', (1 << 5));
    4632:	40 e2       	ldi	r20, 0x20	; 32
    4634:	61 e6       	ldi	r22, 0x61	; 97
    4636:	8d e1       	ldi	r24, 0x1D	; 29
    4638:	0e 94 70 13 	call	0x26e0	; 0x26e0 <Adafruit_Thermal::writeBytes(unsigned char, unsigned char, unsigned char) [clone .constprop.43]>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:186
    dtrEnabled = true;
    463c:	81 e0       	ldi	r24, 0x01	; 1
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:189
  }

  dotPrintTime = 30000; // See comments near top of file for
    463e:	80 93 c2 2f 	sts	0x2FC2, r24	; 0x802fc2 <printer+0x11>
    4642:	80 e3       	ldi	r24, 0x30	; 48
    4644:	95 e7       	ldi	r25, 0x75	; 117
    4646:	a0 e0       	ldi	r26, 0x00	; 0
    4648:	b0 e0       	ldi	r27, 0x00	; 0
    464a:	80 93 c7 2f 	sts	0x2FC7, r24	; 0x802fc7 <printer+0x16>
    464e:	90 93 c8 2f 	sts	0x2FC8, r25	; 0x802fc8 <printer+0x17>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:190
  dotFeedTime = 2100;   // an explanation of these values.
    4652:	a0 93 c9 2f 	sts	0x2FC9, r26	; 0x802fc9 <printer+0x18>
    4656:	b0 93 ca 2f 	sts	0x2FCA, r27	; 0x802fca <printer+0x19>
    465a:	84 e3       	ldi	r24, 0x34	; 52
    465c:	98 e0       	ldi	r25, 0x08	; 8
    465e:	a0 e0       	ldi	r26, 0x00	; 0
    4660:	b0 e0       	ldi	r27, 0x00	; 0
    4662:	80 93 cb 2f 	sts	0x2FCB, r24	; 0x802fcb <printer+0x1a>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:191
  maxChunkHeight = 255;
    4666:	90 93 cc 2f 	sts	0x2FCC, r25	; 0x802fcc <printer+0x1b>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:380
void Adafruit_Thermal::boldOff() { unsetPrintMode(BOLD_MASK); }

void Adafruit_Thermal::justify(char value) {
  uint8_t pos = 0;

  switch (toupper(value)) {
    466a:	a0 93 cd 2f 	sts	0x2FCD, r26	; 0x802fcd <printer+0x1c>
    466e:	b0 93 ce 2f 	sts	0x2FCE, r27	; 0x802fce <printer+0x1d>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:385
  case 'L':
    pos = 0;
    break;
  case 'C':
    pos = 1;
    4672:	8f ef       	ldi	r24, 0xFF	; 255
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:380
void Adafruit_Thermal::boldOff() { unsetPrintMode(BOLD_MASK); }

void Adafruit_Thermal::justify(char value) {
  uint8_t pos = 0;

  switch (toupper(value)) {
    4674:	80 93 be 2f 	sts	0x2FBE, r24	; 0x802fbe <printer+0xd>
justify():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:388
    break;
  case 'C':
    pos = 1;
    break;
  case 'R':
    pos = 2;
    4678:	83 e4       	ldi	r24, 0x43	; 67
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:380
void Adafruit_Thermal::boldOff() { unsetPrintMode(BOLD_MASK); }

void Adafruit_Thermal::justify(char value) {
  uint8_t pos = 0;

  switch (toupper(value)) {
    467a:	90 e0       	ldi	r25, 0x00	; 0
    467c:	0e 94 9e 3b 	call	0x773c	; 0x773c <toupper>
Data_Print():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:392
  case 'R':
    pos = 2;
    break;
  }

  writeBytes(ASCII_ESC, 'a', pos);
    4680:	41 e0       	ldi	r20, 0x01	; 1
justify():
    4682:	83 34       	cpi	r24, 0x43	; 67
    4684:	91 05       	cpc	r25, r1
    4686:	29 f0       	breq	.+10     	; 0x4692 <Data_Print()+0x13e>
Data_Print():
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:1334
//   ReadTime();
// //  Serial.println("Data Print Successfully...");
// //  Serial.println("Last Titration Value = ");
// //  Serial.println(encoval);
  printer.justify('C');
  printer.setSize('M');
    4688:	42 e0       	ldi	r20, 0x02	; 2
justify():
    468a:	82 35       	cpi	r24, 0x52	; 82
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:1335
  printer.println("BOROSIL TECHNOLOGIES");
    468c:	91 05       	cpc	r25, r1
    468e:	09 f0       	breq	.+2      	; 0x4692 <Data_Print()+0x13e>
Data_Print():
    4690:	40 e0       	ldi	r20, 0x00	; 0
justify():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:380
void Adafruit_Thermal::boldOff() { unsetPrintMode(BOLD_MASK); }

void Adafruit_Thermal::justify(char value) {
  uint8_t pos = 0;

  switch (toupper(value)) {
    4692:	61 e6       	ldi	r22, 0x61	; 97
    4694:	8b e1       	ldi	r24, 0x1B	; 27
    4696:	0e 94 70 13 	call	0x26e0	; 0x26e0 <Adafruit_Thermal::writeBytes(unsigned char, unsigned char, unsigned char) [clone .constprop.43]>
Data_Print():
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:385
  case 'L':
    pos = 0;
    break;
  case 'C':
    pos = 1;
    469a:	8d e4       	ldi	r24, 0x4D	; 77
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:380
void Adafruit_Thermal::boldOff() { unsetPrintMode(BOLD_MASK); }

void Adafruit_Thermal::justify(char value) {
  uint8_t pos = 0;

  switch (toupper(value)) {
    469c:	96 de       	rcall	.-724    	; 0x43ca <Adafruit_Thermal::setSize(char) [clone .constprop.34]>
    469e:	8c e1       	ldi	r24, 0x1C	; 28
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:388
    break;
  case 'C':
    pos = 1;
    break;
  case 'R':
    pos = 2;
    46a0:	99 eb       	ldi	r25, 0xB9	; 185
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:380
void Adafruit_Thermal::boldOff() { unsetPrintMode(BOLD_MASK); }

void Adafruit_Thermal::justify(char value) {
  uint8_t pos = 0;

  switch (toupper(value)) {
    46a2:	c4 de       	rcall	.-632    	; 0x442c <Print::println(char const*) [clone .constprop.51]>
justify():
    46a4:	8c e4       	ldi	r24, 0x4C	; 76
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:378
void Adafruit_Thermal::boldOn() { setPrintMode(BOLD_MASK); }

void Adafruit_Thermal::boldOff() { unsetPrintMode(BOLD_MASK); }

void Adafruit_Thermal::justify(char value) {
  uint8_t pos = 0;
    46a6:	90 e0       	ldi	r25, 0x00	; 0
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:392
  case 'R':
    pos = 2;
    break;
  }

  writeBytes(ASCII_ESC, 'a', pos);
    46a8:	0e 94 9e 3b 	call	0x773c	; 0x773c <toupper>
Data_Print():
    46ac:	41 e0       	ldi	r20, 0x01	; 1
justify():
    46ae:	83 34       	cpi	r24, 0x43	; 67
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:1337
  printer.justify('L');
  printer.setSize('S');
    46b0:	91 05       	cpc	r25, r1
    46b2:	29 f0       	breq	.+10     	; 0x46be <Data_Print()+0x16a>
Data_Print():
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:1338
  printer.println("Automatic Digital Burette");
    46b4:	42 e0       	ldi	r20, 0x02	; 2
justify():
    46b6:	82 35       	cpi	r24, 0x52	; 82
    46b8:	91 05       	cpc	r25, r1
    46ba:	09 f0       	breq	.+2      	; 0x46be <Data_Print()+0x16a>
Data_Print():
    46bc:	40 e0       	ldi	r20, 0x00	; 0
justify():
    46be:	61 e6       	ldi	r22, 0x61	; 97
    46c0:	8b e1       	ldi	r24, 0x1B	; 27
    46c2:	0e 94 70 13 	call	0x26e0	; 0x26e0 <Adafruit_Thermal::writeBytes(unsigned char, unsigned char, unsigned char) [clone .constprop.43]>
Data_Print():
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:1340
  printer.print("User Name :");
  printer.println(User_name[User]);
    46c6:	83 e5       	ldi	r24, 0x53	; 83
    46c8:	80 de       	rcall	.-768    	; 0x43ca <Adafruit_Thermal::setSize(char) [clone .constprop.34]>
    46ca:	81 e3       	ldi	r24, 0x31	; 49
    46cc:	99 eb       	ldi	r25, 0xB9	; 185
    46ce:	ae de       	rcall	.-676    	; 0x442c <Print::println(char const*) [clone .constprop.51]>
write():
    46d0:	6b e4       	ldi	r22, 0x4B	; 75
    46d2:	79 eb       	ldi	r23, 0xB9	; 185
    46d4:	81 eb       	ldi	r24, 0xB1	; 177
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/Print.cpp:146
  return write("\r\n");
}

size_t Print::println(const String &s)
{
  size_t n = print(s);
    46d6:	9f e2       	ldi	r25, 0x2F	; 47
    46d8:	9a de       	rcall	.-716    	; 0x440e <Print::write(char const*) [clone .part.2]>
Data_Print():
    46da:	80 91 91 29 	lds	r24, 0x2991	; 0x802991 <User>
    46de:	90 91 92 29 	lds	r25, 0x2992	; 0x802992 <User+0x1>
    46e2:	26 e0       	ldi	r18, 0x06	; 6
    46e4:	28 9f       	mul	r18, r24
    46e6:	b0 01       	movw	r22, r0
    46e8:	29 9f       	mul	r18, r25
    46ea:	70 0d       	add	r23, r0
    46ec:	11 24       	eor	r1, r1
    46ee:	6d 50       	subi	r22, 0x0D	; 13
    46f0:	71 4d       	sbci	r23, 0xD1	; 209
println():
    46f2:	81 eb       	ldi	r24, 0xB1	; 177
    46f4:	9f e2       	ldi	r25, 0x2F	; 47
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:1348
//  else if (User == 2){ printer.println("ROHIT W.");}
//  else if (User == 3){ printer.println("AVINASH G.");}
//  printer.print("Day  :");
//  printer.println(daY);
  printer.print("Date & Time : "); 
  printer.print(DAT);  //SECOND, MINUTE, DAT, MONT, YER;
    46f6:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <Print::print(String const&)>
write():
    46fa:	69 e1       	ldi	r22, 0x19	; 25
    46fc:	79 eb       	ldi	r23, 0xB9	; 185
    46fe:	81 eb       	ldi	r24, 0xB1	; 177
    4700:	9f e2       	ldi	r25, 0x2F	; 47
    4702:	85 de       	rcall	.-758    	; 0x440e <Print::write(char const*) [clone .part.2]>
    4704:	67 e5       	ldi	r22, 0x57	; 87
    4706:	79 eb       	ldi	r23, 0xB9	; 185
    4708:	81 eb       	ldi	r24, 0xB1	; 177
    470a:	9f e2       	ldi	r25, 0x2F	; 47
    470c:	80 de       	rcall	.-768    	; 0x440e <Print::write(char const*) [clone .part.2]>
Data_Print():
    470e:	60 91 3f 28 	lds	r22, 0x283F	; 0x80283f <DAT>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:1350
  printer.print("/");
  printer.print(MONT);
    4712:	70 91 40 28 	lds	r23, 0x2840	; 0x802840 <DAT+0x1>
    4716:	81 eb       	ldi	r24, 0xB1	; 177
    4718:	9f e2       	ldi	r25, 0x2F	; 47
    471a:	99 de       	rcall	.-718    	; 0x444e <Print::print(int, int) [clone .constprop.47]>
write():
    471c:	66 e6       	ldi	r22, 0x66	; 102
    471e:	79 eb       	ldi	r23, 0xB9	; 185
    4720:	81 eb       	ldi	r24, 0xB1	; 177
    4722:	9f e2       	ldi	r25, 0x2F	; 47
    4724:	74 de       	rcall	.-792    	; 0x440e <Print::write(char const*) [clone .part.2]>
Data_Print():
    4726:	60 91 3d 28 	lds	r22, 0x283D	; 0x80283d <MONT>
    472a:	70 91 3e 28 	lds	r23, 0x283E	; 0x80283e <MONT+0x1>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:1352
  printer.print("/"); 
  printer.print(YER);
    472e:	81 eb       	ldi	r24, 0xB1	; 177
    4730:	9f e2       	ldi	r25, 0x2F	; 47
    4732:	8d de       	rcall	.-742    	; 0x444e <Print::print(int, int) [clone .constprop.47]>
write():
    4734:	66 e6       	ldi	r22, 0x66	; 102
    4736:	79 eb       	ldi	r23, 0xB9	; 185
    4738:	81 eb       	ldi	r24, 0xB1	; 177
    473a:	9f e2       	ldi	r25, 0x2F	; 47
    473c:	68 de       	rcall	.-816    	; 0x440e <Print::write(char const*) [clone .part.2]>
Data_Print():
    473e:	60 91 3b 28 	lds	r22, 0x283B	; 0x80283b <YER>
    4742:	70 91 3c 28 	lds	r23, 0x283C	; 0x80283c <YER+0x1>
    4746:	81 eb       	ldi	r24, 0xB1	; 177
    4748:	9f e2       	ldi	r25, 0x2F	; 47
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:1355
//  printer.print("Time : "); 
  printer.print("  "); 
  printer.print(houR);
    474a:	81 de       	rcall	.-766    	; 0x444e <Print::print(int, int) [clone .constprop.47]>
write():
    474c:	68 e6       	ldi	r22, 0x68	; 104
    474e:	79 eb       	ldi	r23, 0xB9	; 185
    4750:	81 eb       	ldi	r24, 0xB1	; 177
    4752:	9f e2       	ldi	r25, 0x2F	; 47
    4754:	5c de       	rcall	.-840    	; 0x440e <Print::write(char const*) [clone .part.2]>
Data_Print():
    4756:	60 91 39 28 	lds	r22, 0x2839	; 0x802839 <houR>
    475a:	70 91 3a 28 	lds	r23, 0x283A	; 0x80283a <houR+0x1>
    475e:	81 eb       	ldi	r24, 0xB1	; 177
    4760:	9f e2       	ldi	r25, 0x2F	; 47
    4762:	75 de       	rcall	.-790    	; 0x444e <Print::print(int, int) [clone .constprop.47]>
write():
    4764:	65 e5       	ldi	r22, 0x55	; 85
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:1357
  printer.print(":");
  printer.print(MINUTE);
    4766:	79 eb       	ldi	r23, 0xB9	; 185
    4768:	81 eb       	ldi	r24, 0xB1	; 177
    476a:	9f e2       	ldi	r25, 0x2F	; 47
    476c:	50 de       	rcall	.-864    	; 0x440e <Print::write(char const*) [clone .part.2]>
Data_Print():
    476e:	60 91 37 28 	lds	r22, 0x2837	; 0x802837 <MINUTE>
    4772:	70 91 38 28 	lds	r23, 0x2838	; 0x802838 <MINUTE+0x1>
    4776:	81 eb       	ldi	r24, 0xB1	; 177
    4778:	9f e2       	ldi	r25, 0x2F	; 47
    477a:	69 de       	rcall	.-814    	; 0x444e <Print::print(int, int) [clone .constprop.47]>
write():
    477c:	65 e5       	ldi	r22, 0x55	; 85
    477e:	79 eb       	ldi	r23, 0xB9	; 185
    4780:	81 eb       	ldi	r24, 0xB1	; 177
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/Print.cpp:174
  return n;
}

size_t Print::println(int num, int base)
{
  size_t n = print(num, base);
    4782:	9f e2       	ldi	r25, 0x2F	; 47
    4784:	44 de       	rcall	.-888    	; 0x440e <Print::write(char const*) [clone .part.2]>
println():
    4786:	60 91 35 28 	lds	r22, 0x2835	; 0x802835 <SECOND>
    478a:	70 91 36 28 	lds	r23, 0x2836	; 0x802836 <SECOND+0x1>
    478e:	81 eb       	ldi	r24, 0xB1	; 177
    4790:	9f e2       	ldi	r25, 0x2F	; 47
    4792:	5d de       	rcall	.-838    	; 0x444e <Print::print(int, int) [clone .constprop.47]>
write():
    4794:	69 e1       	ldi	r22, 0x19	; 25
    4796:	79 eb       	ldi	r23, 0xB9	; 185
    4798:	81 eb       	ldi	r24, 0xB1	; 177
    479a:	9f e2       	ldi	r25, 0x2F	; 47
    479c:	38 de       	rcall	.-912    	; 0x440e <Print::write(char const*) [clone .part.2]>
    479e:	6b e6       	ldi	r22, 0x6B	; 107
    47a0:	79 eb       	ldi	r23, 0xB9	; 185
    47a2:	81 eb       	ldi	r24, 0xB1	; 177
    47a4:	9f e2       	ldi	r25, 0x2F	; 47
    47a6:	33 de       	rcall	.-922    	; 0x440e <Print::write(char const*) [clone .part.2]>
Data_Print():
    47a8:	83 e8       	ldi	r24, 0x83	; 131
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:1365

//  printer.println("Time : 11:05 ");
  printer.print("Last Titration Value : ");
  // if(disp_val<=100)printer.print(encoval,3);
  // else printer.print(encoval,2);
  printer.println(" ml");
    47aa:	99 eb       	ldi	r25, 0xB9	; 185
    47ac:	3f de       	rcall	.-898    	; 0x442c <Print::println(char const*) [clone .constprop.51]>
    47ae:	89 e6       	ldi	r24, 0x69	; 105
    47b0:	99 eb       	ldi	r25, 0xB9	; 185
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:1366
  printer.println(" ");
    47b2:	3c de       	rcall	.-904    	; 0x442c <Print::println(char const*) [clone .constprop.51]>
    47b4:	87 e8       	ldi	r24, 0x87	; 135
    47b6:	99 eb       	ldi	r25, 0xB9	; 185
    47b8:	39 de       	rcall	.-910    	; 0x442c <Print::println(char const*) [clone .constprop.51]>
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:1368
//  printer.println(" ");
  printer.println("Signature : ");
    47ba:	89 e6       	ldi	r24, 0x69	; 105
    47bc:	99 eb       	ldi	r25, 0xB9	; 185
    47be:	36 de       	rcall	.-916    	; 0x442c <Print::println(char const*) [clone .constprop.51]>
write():
    47c0:	6a e0       	ldi	r22, 0x0A	; 10
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:1369
  printer.println(" ");
    47c2:	81 eb       	ldi	r24, 0xB1	; 177
    47c4:	9f e2       	ldi	r25, 0x2F	; 47
    47c6:	0e 94 2e 14 	call	0x285c	; 0x285c <Adafruit_Thermal::write(unsigned char) [clone .part.2]>
    47ca:	6a e0       	ldi	r22, 0x0A	; 10
    47cc:	81 eb       	ldi	r24, 0xB1	; 177
    47ce:	9f e2       	ldi	r25, 0x2F	; 47
    47d0:	0e 94 2e 14 	call	0x285c	; 0x285c <Adafruit_Thermal::write(unsigned char) [clone .part.2]>
    47d4:	6a e0       	ldi	r22, 0x0A	; 10
    47d6:	81 eb       	ldi	r24, 0xB1	; 177
    47d8:	9f e2       	ldi	r25, 0x2F	; 47
    47da:	0e 94 2e 14 	call	0x285c	; 0x285c <Adafruit_Thermal::write(unsigned char) [clone .part.2]>
digitalWrite():
    47de:	61 e0       	ldi	r22, 0x01	; 1
    47e0:	83 e1       	ldi	r24, 0x13	; 19
    47e2:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <digitalWrite.part.2>
interval():
    47e6:	80 91 ab 2e 	lds	r24, 0x2EAB	; 0x802eab <buzz+0x9>
    47ea:	90 91 ac 2e 	lds	r25, 0x2EAC	; 0x802eac <buzz+0xa>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:97
    47ee:	89 2b       	or	r24, r25
    47f0:	09 f5       	brne	.+66     	; 0x4834 <Data_Print()+0x2e0>
Data_Print():
    47f2:	80 e6       	ldi	r24, 0x60	; 96
    47f4:	9e ea       	ldi	r25, 0xAE	; 174
    47f6:	aa e0       	ldi	r26, 0x0A	; 10
    47f8:	b0 e0       	ldi	r27, 0x00	; 0
interval():
    47fa:	80 93 a3 2e 	sts	0x2EA3, r24	; 0x802ea3 <buzz+0x1>
    47fe:	90 93 a4 2e 	sts	0x2EA4, r25	; 0x802ea4 <buzz+0x2>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:98
	this->timer = timer;
    4802:	a0 93 a5 2e 	sts	0x2EA5, r26	; 0x802ea5 <buzz+0x3>
    4806:	b0 93 a6 2e 	sts	0x2EA6, r27	; 0x802ea6 <buzz+0x4>
Data_Print():
    480a:	82 ea       	ldi	r24, 0xA2	; 162
    480c:	9e e2       	ldi	r25, 0x2E	; 46
    480e:	cf 91       	pop	r28
    4810:	0c 94 27 15 	jmp	0x2a4e	; 0x2a4e <Ticker::start()>
wake():
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:1375
  printer.write(10);
  printer.write(10);
  printer.write(10);
   digitalWrite(buzzer, HIGH);
   buzz.interval(700);
   buzz.start();
    4814:	60 e0       	ldi	r22, 0x00	; 0
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:1376
}
    4816:	81 eb       	ldi	r24, 0xB1	; 177
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:1375
  printer.write(10);
  printer.write(10);
  printer.write(10);
   digitalWrite(buzzer, HIGH);
   buzz.interval(700);
   buzz.start();
    4818:	9f e2       	ldi	r25, 0x2F	; 47
    481a:	0e 94 94 14 	call	0x2928	; 0x2928 <Adafruit_Thermal::writeBytes(unsigned char)>
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:625
    // Datasheet recommends a 50 mS delay before issuing further commands,
    // but in practice this alone isn't sufficient (e.g. text size/style
    // commands may still be misinterpreted on wake).  A slightly longer
    // delay, interspersed with NUL chars (no-ops) seems to help.
    for (uint8_t i = 0; i < 10; i++) {
      writeBytes(0);
    481e:	40 e1       	ldi	r20, 0x10	; 16
    4820:	57 e2       	ldi	r21, 0x27	; 39
    4822:	60 e0       	ldi	r22, 0x00	; 0
    4824:	70 e0       	ldi	r23, 0x00	; 0
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:626
      timeoutSet(10000L);
    4826:	81 eb       	ldi	r24, 0xB1	; 177
    4828:	9f e2       	ldi	r25, 0x2F	; 47
    482a:	0e 94 53 13 	call	0x26a6	; 0x26a6 <Adafruit_Thermal::timeoutSet(unsigned long)>
    482e:	c1 50       	subi	r28, 0x01	; 1
    4830:	89 f7       	brne	.-30     	; 0x4814 <Data_Print()+0x2c0>
    4832:	c6 ce       	rjmp	.-628    	; 0x45c0 <Data_Print()+0x6c>
interval():
    4834:	8c eb       	ldi	r24, 0xBC	; 188
    4836:	92 e0       	ldi	r25, 0x02	; 2
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Adafruit_Thermal_Printer_Library/Adafruit_Thermal.cpp:624
  } else {
    // Datasheet recommends a 50 mS delay before issuing further commands,
    // but in practice this alone isn't sufficient (e.g. text size/style
    // commands may still be misinterpreted on wake).  A slightly longer
    // delay, interspersed with NUL chars (no-ops) seems to help.
    for (uint8_t i = 0; i < 10; i++) {
    4838:	a0 e0       	ldi	r26, 0x00	; 0
c:\Users\Manish.Acharya\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:97
		}
	return false;
	}

void Ticker::interval(uint32_t timer) {
	if (resolution == MICROS) timer = timer * 1000;
    483a:	b0 e0       	ldi	r27, 0x00	; 0
    483c:	de cf       	rjmp	.-68     	; 0x47fa <Data_Print()+0x2a6>

0000483e <String::reserve(unsigned int)>:
reserve():
    483e:	0f 93       	push	r16
    4840:	1f 93       	push	r17
    4842:	cf 93       	push	r28
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/String.cpp:148
  buffer = NULL;
  capacity = len = 0;
}

unsigned char String::reserve(unsigned int size)
{
    4844:	df 93       	push	r29
    4846:	ec 01       	movw	r28, r24
    4848:	88 81       	ld	r24, Y
    484a:	99 81       	ldd	r25, Y+1	; 0x01
    484c:	00 97       	sbiw	r24, 0x00	; 0
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/String.cpp:149
  if (buffer && capacity >= size) return 1;
    484e:	59 f0       	breq	.+22     	; 0x4866 <String::reserve(unsigned int)+0x28>
    4850:	2a 81       	ldd	r18, Y+2	; 0x02
    4852:	3b 81       	ldd	r19, Y+3	; 0x03
    4854:	26 17       	cp	r18, r22
    4856:	37 07       	cpc	r19, r23
    4858:	30 f0       	brcs	.+12     	; 0x4866 <String::reserve(unsigned int)+0x28>
    485a:	81 e0       	ldi	r24, 0x01	; 1
    485c:	df 91       	pop	r29
    485e:	cf 91       	pop	r28
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/String.cpp:152
  if (changeBuffer(size))
  {
    if (len == 0) buffer[0] = 0;
    4860:	1f 91       	pop	r17
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/String.cpp:156
    return 1;
  }
  return 0;
}
    4862:	0f 91       	pop	r16
    4864:	08 95       	ret
    4866:	8b 01       	movw	r16, r22
changeBuffer():
    4868:	6f 5f       	subi	r22, 0xFF	; 255
    486a:	7f 4f       	sbci	r23, 0xFF	; 255
    486c:	0e 94 e8 3a 	call	0x75d0	; 0x75d0 <realloc>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/String.cpp:160

unsigned char String::changeBuffer(unsigned int maxStrLen)
{
  char *newbuffer = (char *)realloc(buffer, maxStrLen + 1);
    4870:	00 97       	sbiw	r24, 0x00	; 0
    4872:	59 f0       	breq	.+22     	; 0x488a <String::reserve(unsigned int)+0x4c>
    4874:	88 83       	st	Y, r24
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/String.cpp:161
  if (newbuffer)
    4876:	99 83       	std	Y+1, r25	; 0x01
    4878:	0a 83       	std	Y+2, r16	; 0x02
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/String.cpp:163
  {
    buffer = newbuffer;
    487a:	1b 83       	std	Y+3, r17	; 0x03
reserve():
    487c:	2c 81       	ldd	r18, Y+4	; 0x04
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/String.cpp:164
    capacity = maxStrLen;
    487e:	3d 81       	ldd	r19, Y+5	; 0x05
    4880:	23 2b       	or	r18, r19
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/String.cpp:152
unsigned char String::reserve(unsigned int size)
{
  if (buffer && capacity >= size) return 1;
  if (changeBuffer(size))
  {
    if (len == 0) buffer[0] = 0;
    4882:	59 f7       	brne	.-42     	; 0x485a <String::reserve(unsigned int)+0x1c>
    4884:	fc 01       	movw	r30, r24
    4886:	10 82       	st	Z, r1
    4888:	e8 cf       	rjmp	.-48     	; 0x485a <String::reserve(unsigned int)+0x1c>
    488a:	80 e0       	ldi	r24, 0x00	; 0
    488c:	e7 cf       	rjmp	.-50     	; 0x485c <String::reserve(unsigned int)+0x1e>

0000488e <String::String(char const*)>:
__base_ctor ():
    488e:	ef 92       	push	r14
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/String.cpp:155
    return 1;
  }
  return 0;
    4890:	ff 92       	push	r15
    4892:	0f 93       	push	r16
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/String.cpp:30

/*********************************************/
/*  Constructors                             */
/*********************************************/

String::String(const char *cstr)
    4894:	1f 93       	push	r17
    4896:	cf 93       	push	r28
    4898:	df 93       	push	r29
    489a:	ec 01       	movw	r28, r24
    489c:	7b 01       	movw	r14, r22
_ZN6String4initEv():
    489e:	18 82       	st	Y, r1
    48a0:	19 82       	std	Y+1, r1	; 0x01
    48a2:	1a 82       	std	Y+2, r1	; 0x02
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/String.cpp:135
/*  Memory Management                        */
/*********************************************/

inline void String::init(void)
{
  buffer = NULL;
    48a4:	1b 82       	std	Y+3, r1	; 0x03
    48a6:	1c 82       	std	Y+4, r1	; 0x04
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/String.cpp:136
  capacity = 0;
    48a8:	1d 82       	std	Y+5, r1	; 0x05
__base_ctor ():
    48aa:	fb 01       	movw	r30, r22
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/String.cpp:137
  len = 0;
    48ac:	01 90       	ld	r0, Z+
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/String.cpp:33
/*********************************************/

String::String(const char *cstr)
{
  init();
  if (cstr) copy(cstr, strlen(cstr));
    48ae:	00 20       	and	r0, r0
    48b0:	e9 f7       	brne	.-6      	; 0x48ac <String::String(char const*)+0x1e>
    48b2:	31 97       	sbiw	r30, 0x01	; 1
    48b4:	8f 01       	movw	r16, r30
    48b6:	06 1b       	sub	r16, r22
    48b8:	17 0b       	sbc	r17, r23
copy():
    48ba:	b8 01       	movw	r22, r16
    48bc:	c0 df       	rcall	.-128    	; 0x483e <String::reserve(unsigned int)>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/String.cpp:176
/*  Copy and Move                            */
/*********************************************/

String &String::copy(const char *cstr, unsigned int length)
{
  if (!reserve(length))
    48be:	28 81       	ld	r18, Y
    48c0:	39 81       	ldd	r19, Y+1	; 0x01
    48c2:	81 11       	cpse	r24, r1
    48c4:	13 c0       	rjmp	.+38     	; 0x48ec <String::String(char const*)+0x5e>
invalidate():
    48c6:	21 15       	cp	r18, r1
    48c8:	31 05       	cpc	r19, r1
    48ca:	19 f0       	breq	.+6      	; 0x48d2 <String::String(char const*)+0x44>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/String.cpp:142
  len = 0;
}

void String::invalidate(void)
{
  if (buffer) free(buffer);
    48cc:	c9 01       	movw	r24, r18
    48ce:	0e 94 5f 3a 	call	0x74be	; 0x74be <free>
    48d2:	18 82       	st	Y, r1
    48d4:	19 82       	std	Y+1, r1	; 0x01
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/String.cpp:143
  buffer = NULL;
    48d6:	1c 82       	std	Y+4, r1	; 0x04
    48d8:	1d 82       	std	Y+5, r1	; 0x05
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/String.cpp:144
  capacity = len = 0;
    48da:	1a 82       	std	Y+2, r1	; 0x02
    48dc:	1b 82       	std	Y+3, r1	; 0x03
__base_ctor ():
    48de:	df 91       	pop	r29
    48e0:	cf 91       	pop	r28
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/String.cpp:34

String::String(const char *cstr)
{
  init();
  if (cstr) copy(cstr, strlen(cstr));
}
    48e2:	1f 91       	pop	r17
    48e4:	0f 91       	pop	r16
    48e6:	ff 90       	pop	r15
    48e8:	ef 90       	pop	r14
    48ea:	08 95       	ret
copy():
    48ec:	0c 83       	std	Y+4, r16	; 0x04
    48ee:	1d 83       	std	Y+5, r17	; 0x05
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/String.cpp:181
  if (!reserve(length))
  {
    invalidate();
    return *this;
  }
  len = length;
    48f0:	b7 01       	movw	r22, r14
    48f2:	c9 01       	movw	r24, r18
__base_ctor ():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/String.cpp:182
  strcpy(buffer, cstr);
    48f4:	df 91       	pop	r29
    48f6:	cf 91       	pop	r28
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/String.cpp:34

String::String(const char *cstr)
{
  init();
  if (cstr) copy(cstr, strlen(cstr));
}
    48f8:	1f 91       	pop	r17
    48fa:	0f 91       	pop	r16
    48fc:	ff 90       	pop	r15
    48fe:	ef 90       	pop	r14
copy():
    4900:	0c 94 b6 3b 	jmp	0x776c	; 0x776c <strcpy>

00004904 <String::operator=(char const*) [clone .part.3]>:
_ZN6StringaSEPKc.part.3():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/String.cpp:182
  {
    invalidate();
    return *this;
  }
  len = length;
  strcpy(buffer, cstr);
    4904:	ef 92       	push	r14
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/String.cpp:250
  if (this != &rval) move(rval);
  return *this;
}
#endif

String &String::operator=(const char *cstr)
    4906:	ff 92       	push	r15
    4908:	0f 93       	push	r16
    490a:	1f 93       	push	r17
    490c:	cf 93       	push	r28
    490e:	df 93       	push	r29
    4910:	ec 01       	movw	r28, r24
    4912:	7b 01       	movw	r14, r22
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/String.cpp:253
{
  if (cstr)
    copy(cstr, strlen(cstr));
    4914:	fb 01       	movw	r30, r22
    4916:	01 90       	ld	r0, Z+
    4918:	00 20       	and	r0, r0
    491a:	e9 f7       	brne	.-6      	; 0x4916 <String::operator=(char const*) [clone .part.3]+0x12>
    491c:	31 97       	sbiw	r30, 0x01	; 1
    491e:	8f 01       	movw	r16, r30
    4920:	06 1b       	sub	r16, r22
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/String.cpp:176
/*  Copy and Move                            */
/*********************************************/

String &String::copy(const char *cstr, unsigned int length)
{
  if (!reserve(length))
    4922:	17 0b       	sbc	r17, r23
copy():
    4924:	b8 01       	movw	r22, r16
    4926:	8b df       	rcall	.-234    	; 0x483e <String::reserve(unsigned int)>
    4928:	28 81       	ld	r18, Y
    492a:	39 81       	ldd	r19, Y+1	; 0x01
    492c:	81 11       	cpse	r24, r1
    492e:	13 c0       	rjmp	.+38     	; 0x4956 <String::operator=(char const*) [clone .part.3]+0x52>
invalidate():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/String.cpp:142
  len = 0;
}

void String::invalidate(void)
{
  if (buffer) free(buffer);
    4930:	21 15       	cp	r18, r1
    4932:	31 05       	cpc	r19, r1
    4934:	19 f0       	breq	.+6      	; 0x493c <String::operator=(char const*) [clone .part.3]+0x38>
    4936:	c9 01       	movw	r24, r18
    4938:	0e 94 5f 3a 	call	0x74be	; 0x74be <free>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/String.cpp:143
  buffer = NULL;
    493c:	18 82       	st	Y, r1
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/String.cpp:144
  capacity = len = 0;
    493e:	19 82       	std	Y+1, r1	; 0x01
    4940:	1c 82       	std	Y+4, r1	; 0x04
    4942:	1d 82       	std	Y+5, r1	; 0x05
    4944:	1a 82       	std	Y+2, r1	; 0x02
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/String.cpp:258
    copy(cstr, strlen(cstr));
  else
    invalidate();

  return *this;
}
    4946:	1b 82       	std	Y+3, r1	; 0x03
_ZN6StringaSEPKc.part.3():
    4948:	df 91       	pop	r29
    494a:	cf 91       	pop	r28
    494c:	1f 91       	pop	r17
    494e:	0f 91       	pop	r16
    4950:	ff 90       	pop	r15
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/String.cpp:181
  if (!reserve(length))
  {
    invalidate();
    return *this;
  }
  len = length;
    4952:	ef 90       	pop	r14
    4954:	08 95       	ret
copy():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/String.cpp:182
  strcpy(buffer, cstr);
    4956:	0c 83       	std	Y+4, r16	; 0x04
    4958:	1d 83       	std	Y+5, r17	; 0x05
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/String.cpp:258
    copy(cstr, strlen(cstr));
  else
    invalidate();

  return *this;
}
    495a:	b7 01       	movw	r22, r14
    495c:	c9 01       	movw	r24, r18
_ZN6StringaSEPKc.part.3():
    495e:	df 91       	pop	r29
    4960:	cf 91       	pop	r28
    4962:	1f 91       	pop	r17
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\cores\coreX-corefiles/api/String.cpp:182
  {
    invalidate();
    return *this;
  }
  len = length;
  strcpy(buffer, cstr);
    4964:	0f 91       	pop	r16
    4966:	ff 90       	pop	r15
C:\Users\Manish.Acharya\Documents\Arduino\ADB_new_code5_11_01_2023/ADB_new_code5_11_01_2023.ino:1153
  *month = bcd2dec(Wire.read());
  *year = bcd2dec(Wire.read());
}

void ReadTime()   //-------function for read time
{
    4968:	ef 90       	pop	r14
copy():
    496a:	0c 94 b6 3b 	jmp	0x776c	; 0x776c <strcpy>

0000496e <ReadTime()>:
ReadTime():
    496e:	bf 92       	push	r11
    4970:	cf 92       	push	r12
    4972:	df 92       	push	r13
    4974:	ef 92       	push	r14
    4976:	ff 92       	push	r15
    4978:	0f 93       	push	r16
    497a:	1f 93       	push	r17
    497c:	cf 93       	push	r28
    497e:	df 93       	push	r29
    4980:	cd b7       	in	r28, 0x3d	; 61
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src/Wire.cpp:218
void TwoWire::beginTransmission(uint8_t address)
{
  // indicate that we are transmitting
  transmitting = 1;
  // set address of targeted slave
  txAddress = address;
    4982:	de b7       	in	r29, 0x3e	; 62
    4984:	26 97       	sbiw	r28, 0x06	; 6
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src/Wire.cpp:220
  // reset tx buffer iterator vars
  txBufferIndex = 0;
    4986:	cd bf       	out	0x3d, r28	; 61
    4988:	de bf       	out	0x3e, r29	; 62
beginTransmission():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src/Wire.cpp:221
  txBufferLength = 0;
    498a:	88 e6       	ldi	r24, 0x68	; 104
    498c:	80 93 34 28 	sts	0x2834, r24	; 0x802834 <TwoWire::txAddress>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src/Wire.h:93
    void onRequest(void (*)(void));

    inline size_t write(unsigned long data) { return write((uint8_t)data); }
    inline size_t write(long data) { return write((uint8_t)data); }
    inline size_t write(unsigned int data) { return write((uint8_t)data); }
    inline size_t write(int data) { return write((uint8_t)data); }
    4990:	10 92 86 29 	sts	0x2986, r1	; 0x802986 <TwoWire::txBufferIndex>
    4994:	10 92 85 29 	sts	0x2985, r1	; 0x802985 <TwoWire::txBufferLength>
write():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src\utility/twi.c:311
                            uint8_t* write_data,
                            uint8_t bytes_to_write,
                            uint8_t bytes_to_read,
                            uint8_t send_stop)
{
  if (twi_mode != TWI_MODE_MASTER)
    4998:	60 e0       	ldi	r22, 0x00	; 0
    499a:	88 e5       	ldi	r24, 0x58	; 88
    499c:	9a e2       	ldi	r25, 0x2A	; 42
    499e:	7a d9       	rcall	.-3340   	; 0x3c94 <TwoWire::write(unsigned char)>
TWI_MasterWriteRead():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src\utility/twi.c:315
    return false;

  /*Initiate transaction if bus is ready. */
  if (master_trans_status == TWIM_STATUS_READY)
    49a0:	80 91 84 29 	lds	r24, 0x2984	; 0x802984 <twi_mode>
    49a4:	81 30       	cpi	r24, 0x01	; 1
    49a6:	61 f4       	brne	.+24     	; 0x49c0 <ReadTime()+0x52>
    49a8:	80 91 81 29 	lds	r24, 0x2981	; 0x802981 <master_trans_status>
    49ac:	81 11       	cpse	r24, r1
    49ae:	08 c0       	rjmp	.+16     	; 0x49c0 <ReadTime()+0x52>
    49b0:	01 e0       	ldi	r16, 0x01	; 1
    49b2:	20 e0       	ldi	r18, 0x00	; 0
    49b4:	40 91 85 29 	lds	r20, 0x2985	; 0x802985 <TwoWire::txBufferLength>
    49b8:	67 e4       	ldi	r22, 0x47	; 71
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src/Wire.cpp:248
{
  // transmit buffer (blocking)
  uint8_t status = TWI_MasterWrite(txAddress, txBuffer, txBufferLength, sendStop);

  // reset tx buffer iterator vars
  txBufferIndex = 0;
    49ba:	78 e2       	ldi	r23, 0x28	; 40
    49bc:	88 e6       	ldi	r24, 0x68	; 104
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src/Wire.cpp:249
  txBufferLength = 0;
    49be:	a4 d8       	rcall	.-3768   	; 0x3b08 <TWI_MasterWriteRead.part.2>
endTransmission():
    49c0:	10 92 86 29 	sts	0x2986, r1	; 0x802986 <TwoWire::txBufferIndex>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src\utility/twi.c:280
uint8_t TWI_MasterRead(uint8_t slave_address,
                       uint8_t* read_data,
                       uint8_t bytes_to_read,
                       uint8_t send_stop)
{
  master_readData = read_data;
    49c4:	10 92 85 29 	sts	0x2985, r1	; 0x802985 <TwoWire::txBufferLength>
TWI_MasterRead():
    49c8:	87 e8       	ldi	r24, 0x87	; 135
    49ca:	98 e2       	ldi	r25, 0x28	; 40
    49cc:	80 93 c9 28 	sts	0x28C9, r24	; 0x8028c9 <master_readData>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src\utility/twi.c:311
                            uint8_t* write_data,
                            uint8_t bytes_to_write,
                            uint8_t bytes_to_read,
                            uint8_t send_stop)
{
  if (twi_mode != TWI_MODE_MASTER)
    49d0:	90 93 ca 28 	sts	0x28CA, r25	; 0x8028ca <master_readData+0x1>
TWI_MasterWriteRead():
    49d4:	80 91 84 29 	lds	r24, 0x2984	; 0x802984 <twi_mode>
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src\utility/twi.c:315
    return false;

  /*Initiate transaction if bus is ready. */
  if (master_trans_status == TWIM_STATUS_READY)
    49d8:	81 30       	cpi	r24, 0x01	; 1
    49da:	09 f0       	breq	.+2      	; 0x49de <ReadTime()+0x70>
    49dc:	91 c0       	rjmp	.+290    	; 0x4b00 <ReadTime()+0x192>
    49de:	80 91 81 29 	lds	r24, 0x2981	; 0x802981 <master_trans_status>
    49e2:	81 11       	cpse	r24, r1
    49e4:	8f c0       	rjmp	.+286    	; 0x4b04 <ReadTime()+0x196>
    49e6:	01 e0       	ldi	r16, 0x01	; 1
    49e8:	27 e0       	ldi	r18, 0x07	; 7
    49ea:	40 e0       	ldi	r20, 0x00	; 0
    49ec:	70 e0       	ldi	r23, 0x00	; 0
    49ee:	60 e0       	ldi	r22, 0x00	; 0
    49f0:	88 e6       	ldi	r24, 0x68	; 104
    49f2:	8a d8       	rcall	.-3820   	; 0x3b08 <TWI_MasterWriteRead.part.2>
requestFrom():
    49f4:	10 92 88 29 	sts	0x2988, r1	; 0x802988 <TwoWire::rxBufferIndex>
    49f8:	80 93 87 29 	sts	0x2987, r24	; 0x802987 <TwoWire::rxBufferLength>
readTime():
    49fc:	88 e5       	ldi	r24, 0x58	; 88
    49fe:	9a e2       	ldi	r25, 0x2A	; 42
    4a00:	0a d9       	rcall	.-3564   	; 0x3c16 <TwoWire::read()>
bcd2dec():
    4a02:	98 2f       	mov	r25, r24
    4a04:	92 95       	swap	r25
    4a06:	97 70       	andi	r25, 0x07	; 7
    4a08:	2a e0       	ldi	r18, 0x0A	; 10
    4a0a:	d2 2e       	mov	r13, r18
    4a0c:	8f 70       	andi	r24, 0x0F	; 15
    4a0e:	c8 2e       	mov	r12, r24
    4a10:	9d 9d       	mul	r25, r13
    4a12:	c0 0c       	add	r12, r0
    4a14:	11 24       	eor	r1, r1
readTime():
    4a16:	88 e5       	ldi	r24, 0x58	; 88
    4a18:	9a e2       	ldi	r25, 0x2A	; 42
    4a1a:	fd d8       	rcall	.-3590   	; 0x3c16 <TwoWire::read()>
bcd2dec():
    4a1c:	98 2f       	mov	r25, r24
    4a1e:	92 95       	swap	r25
    4a20:	9f 70       	andi	r25, 0x0F	; 15
    4a22:	8f 70       	andi	r24, 0x0F	; 15
    4a24:	b8 2e       	mov	r11, r24
    4a26:	9d 9d       	mul	r25, r13
    4a28:	b0 0c       	add	r11, r0
    4a2a:	11 24       	eor	r1, r1
readTime():
    4a2c:	88 e5       	ldi	r24, 0x58	; 88
    4a2e:	9a e2       	ldi	r25, 0x2A	; 42
    4a30:	f2 d8       	rcall	.-3612   	; 0x3c16 <TwoWire::read()>
bcd2dec():
    4a32:	98 2f       	mov	r25, r24
    4a34:	92 95       	swap	r25
    4a36:	93 70       	andi	r25, 0x03	; 3
    4a38:	08 2f       	mov	r16, r24
    4a3a:	0f 70       	andi	r16, 0x0F	; 15
    4a3c:	9d 9d       	mul	r25, r13
    4a3e:	00 0d       	add	r16, r0
    4a40:	11 24       	eor	r1, r1
readTime():
    4a42:	88 e5       	ldi	r24, 0x58	; 88
    4a44:	9a e2       	ldi	r25, 0x2A	; 42
    4a46:	e7 d8       	rcall	.-3634   	; 0x3c16 <TwoWire::read()>
bcd2dec():
    4a48:	98 2f       	mov	r25, r24
    4a4a:	92 95       	swap	r25
    4a4c:	9f 70       	andi	r25, 0x0F	; 15
    4a4e:	8f 70       	andi	r24, 0x0F	; 15
    4a50:	18 2f       	mov	r17, r24
    4a52:	9d 9d       	mul	r25, r13
    4a54:	10 0d       	add	r17, r0
    4a56:	11 24       	eor	r1, r1
readTime():
    4a58:	88 e5       	ldi	r24, 0x58	; 88
    4a5a:	9a e2       	ldi	r25, 0x2A	; 42
    4a5c:	dc d8       	rcall	.-3656   	; 0x3c16 <TwoWire::read()>
bcd2dec():
    4a5e:	98 2f       	mov	r25, r24
    4a60:	92 95       	swap	r25
    4a62:	9f 70       	andi	r25, 0x0F	; 15
    4a64:	8f 70       	andi	r24, 0x0F	; 15
    4a66:	e8 2e       	mov	r14, r24
    4a68:	9d 9d       	mul	r25, r13
    4a6a:	e0 0c       	add	r14, r0
    4a6c:	11 24       	eor	r1, r1
readTime():
    4a6e:	88 e5       	ldi	r24, 0x58	; 88
    4a70:	9a e2       	ldi	r25, 0x2A	; 42
    4a72:	d1 d8       	rcall	.-3678   	; 0x3c16 <TwoWire::read()>
bcd2dec():
    4a74:	98 2f       	mov	r25, r24
    4a76:	92 95       	swap	r25
    4a78:	9f 70       	andi	r25, 0x0F	; 15
    4a7a:	8f 70       	andi	r24, 0x0F	; 15
    4a7c:	f8 2e       	mov	r15, r24
    4a7e:	9d 9d       	mul	r25, r13
    4a80:	f0 0c       	add	r15, r0
    4a82:	11 24       	eor	r1, r1
readTime():
    4a84:	88 e5       	ldi	r24, 0x58	; 88
    4a86:	9a e2       	ldi	r25, 0x2A	; 42
    4a88:	c6 d8       	rcall	.-3700   	; 0x3c16 <TwoWire::read()>
ReadTime():
    4a8a:	2c 2d       	mov	r18, r12
    4a8c:	30 e0       	ldi	r19, 0x00	; 0
    4a8e:	20 93 35 28 	sts	0x2835, r18	; 0x802835 <SECOND>
    4a92:	30 93 36 28 	sts	0x2836, r19	; 0x802836 <SECOND+0x1>
    4a96:	2b 2d       	mov	r18, r11
    4a98:	30 e0       	ldi	r19, 0x00	; 0
    4a9a:	20 93 37 28 	sts	0x2837, r18	; 0x802837 <MINUTE>
    4a9e:	30 93 38 28 	sts	0x2838, r19	; 0x802838 <MINUTE+0x1>
    4aa2:	2e 2d       	mov	r18, r14
    4aa4:	30 e0       	ldi	r19, 0x00	; 0
    4aa6:	20 93 3f 28 	sts	0x283F, r18	; 0x80283f <DAT>
    4aaa:	30 93 40 28 	sts	0x2840, r19	; 0x802840 <DAT+0x1>
    4aae:	2f 2d       	mov	r18, r15
    4ab0:	30 e0       	ldi	r19, 0x00	; 0
    4ab2:	20 93 3d 28 	sts	0x283D, r18	; 0x80283d <MONT>
    4ab6:	30 93 3e 28 	sts	0x283E, r19	; 0x80283e <MONT+0x1>
bcd2dec():
    4aba:	98 2f       	mov	r25, r24
    4abc:	92 95       	swap	r25
    4abe:	9f 70       	andi	r25, 0x0F	; 15
    4ac0:	8f 70       	andi	r24, 0x0F	; 15
    4ac2:	9d 9d       	mul	r25, r13
    4ac4:	80 0d       	add	r24, r0
    4ac6:	11 24       	eor	r1, r1
ReadTime():
    4ac8:	90 e0       	ldi	r25, 0x00	; 0
    4aca:	80 93 3b 28 	sts	0x283B, r24	; 0x80283b <YER>
    4ace:	90 93 3c 28 	sts	0x283C, r25	; 0x80283c <YER+0x1>
dayUpdate():
    4ad2:	6b e1       	ldi	r22, 0x1B	; 27
    4ad4:	79 eb       	ldi	r23, 0xB9	; 185
    4ad6:	ce 01       	movw	r24, r28
    4ad8:	01 96       	adiw	r24, 0x01	; 1
    4ada:	d9 de       	rcall	.-590    	; 0x488e <String::String(char const*)>
    4adc:	11 50       	subi	r17, 0x01	; 1
operator=():
    4ade:	6d ec       	ldi	r22, 0xCD	; 205
    4ae0:	79 eb       	ldi	r23, 0xB9	; 185
dayUpdate():
    4ae2:	17 30       	cpi	r17, 0x07	; 7
    4ae4:	98 f4       	brcc	.+38     	; 0x4b0c <ReadTime()+0x19e>
    4ae6:	e1 2f       	mov	r30, r17
    4ae8:	f0 e0       	ldi	r31, 0x00	; 0
    4aea:	e7 58       	subi	r30, 0x87	; 135
    4aec:	fa 4d       	sbci	r31, 0xDA	; 218
    4aee:	0c 94 b7 39 	jmp	0x736e	; 0x736e <__tablejump2__>
    4af2:	84 25       	eor	r24, r4
    4af4:	bc 25       	eor	r27, r12
    4af6:	bf 25       	eor	r27, r15
    4af8:	c2 25       	eor	r28, r2
    4afa:	c5 25       	eor	r28, r5
    4afc:	c8 25       	eor	r28, r8
    4afe:	cb 25       	eor	r28, r11
ReadTime():
    4b00:	80 e0       	ldi	r24, 0x00	; 0
    4b02:	78 cf       	rjmp	.-272    	; 0x49f4 <ReadTime()+0x86>
    4b04:	81 e0       	ldi	r24, 0x01	; 1
    4b06:	76 cf       	rjmp	.-276    	; 0x49f4 <ReadTime()+0x86>
operator=():
    4b08:	64 e9       	ldi	r22, 0x94	; 148
    4b0a:	79 eb       	ldi	r23, 0xB9	; 185
    4b0c:	ce 01       	movw	r24, r28
    4b0e:	01 96       	adiw	r24, 0x01	; 1
    4b10:	f9 de       	rcall	.-526    	; 0x4904 <String::operator=(char const*) [clone .part.3]>
move():
    4b12:	80 91 66 2e 	lds	r24, 0x2E66	; 0x802e66 <daY>
    4b16:	90 91 67 2e 	lds	r25, 0x2E67	; 0x802e67 <daY+0x1>
    4b1a:	00 97       	sbiw	r24, 0x00	; 0
    4b1c:	09 f4       	brne	.+2      	; 0x4b20 <ReadTime()+0x1b2>
    4b1e:	40 c0       	rjmp	.+128    	; 0x4ba0 <ReadTime()+0x232>
    4b20:	69 81       	ldd	r22, Y+1	; 0x01
    4b22:	7a 81       	ldd	r23, Y+2	; 0x02
_ZNK6StringcvMS_KFvvEEv.isra.0():
    4b24:	61 15       	cp	r22, r1
    4b26:	71 05       	cpc	r23, r1
    4b28:	c9 f1       	breq	.+114    	; 0x4b9c <ReadTime()+0x22e>
move():
    4b2a:	40 91 68 2e 	lds	r20, 0x2E68	; 0x802e68 <daY+0x2>
    4b2e:	50 91 69 2e 	lds	r21, 0x2E69	; 0x802e69 <daY+0x3>
    4b32:	2d 81       	ldd	r18, Y+5	; 0x05
    4b34:	3e 81       	ldd	r19, Y+6	; 0x06
    4b36:	42 17       	cp	r20, r18
    4b38:	53 07       	cpc	r21, r19
    4b3a:	80 f1       	brcs	.+96     	; 0x4b9c <ReadTime()+0x22e>
    4b3c:	0e 94 b6 3b 	call	0x776c	; 0x776c <strcpy>
    4b40:	8d 81       	ldd	r24, Y+5	; 0x05
    4b42:	9e 81       	ldd	r25, Y+6	; 0x06
    4b44:	80 93 6a 2e 	sts	0x2E6A, r24	; 0x802e6a <daY+0x4>
    4b48:	90 93 6b 2e 	sts	0x2E6B, r25	; 0x802e6b <daY+0x5>
__base_dtor ():
    4b4c:	89 81       	ldd	r24, Y+1	; 0x01
    4b4e:	9a 81       	ldd	r25, Y+2	; 0x02
    4b50:	0e 94 5f 3a 	call	0x74be	; 0x74be <free>
ReadTime():
    4b54:	10 e0       	ldi	r17, 0x00	; 0
    4b56:	00 93 39 28 	sts	0x2839, r16	; 0x802839 <houR>
    4b5a:	10 93 3a 28 	sts	0x283A, r17	; 0x80283a <houR+0x1>
    4b5e:	26 96       	adiw	r28, 0x06	; 6
    4b60:	cd bf       	out	0x3d, r28	; 61
    4b62:	de bf       	out	0x3e, r29	; 62
    4b64:	df 91       	pop	r29
    4b66:	cf 91       	pop	r28
    4b68:	1f 91       	pop	r17
    4b6a:	0f 91       	pop	r16
    4b6c:	ff 90       	pop	r15
    4b6e:	ef 90       	pop	r14
    4b70:	df 90       	pop	r13
    4b72:	cf 90       	pop	r12
    4b74:	bf 90       	pop	r11
    4b76:	08 95       	ret
operator=():
    4b78:	6b e9       	ldi	r22, 0x9B	; 155
    4b7a:	79 eb       	ldi	r23, 0xB9	; 185
    4b7c:	c7 cf       	rjmp	.-114    	; 0x4b0c <ReadTime()+0x19e>
    4b7e:	63 ea       	ldi	r22, 0xA3	; 163
    4b80:	79 eb       	ldi	r23, 0xB9	; 185
    4b82:	c4 cf       	rjmp	.-120    	; 0x4b0c <ReadTime()+0x19e>
    4b84:	6d ea       	ldi	r22, 0xAD	; 173
    4b86:	79 eb       	ldi	r23, 0xB9	; 185
    4b88:	c1 cf       	rjmp	.-126    	; 0x4b0c <ReadTime()+0x19e>
    4b8a:	66 eb       	ldi	r22, 0xB6	; 182
    4b8c:	79 eb       	ldi	r23, 0xB9	; 185
    4b8e:	be cf       	rjmp	.-132    	; 0x4b0c <ReadTime()+0x19e>
    4b90:	6d eb       	ldi	r22, 0xBD	; 189
    4b92:	79 eb       	ldi	r23, 0xB9	; 185
    4b94:	bb cf       	rjmp	.-138    	; 0x4b0c <ReadTime()+0x19e>
    4b96:	66 ec       	ldi	r22, 0xC6	; 198
    4b98:	79 eb       	ldi	r23, 0xB9	; 185
    4b9a:	b8 cf       	rjmp	.-144    	; 0x4b0c <ReadTime()+0x19e>
move():
    4b9c:	0e 94 5f 3a 	call	0x74be	; 0x74be <free>
    4ba0:	89 81       	ldd	r24, Y+1	; 0x01
    4ba2:	9a 81       	ldd	r25, Y+2	; 0x02
    4ba4:	80 93 66 2e 	sts	0x2E66, r24	; 0x802e66 <daY>
    4ba8:	90 93 67 2e 	sts	0x2E67, r25	; 0x802e67 <daY+0x1>
    4bac:	8b 81       	ldd	r24, Y+3	; 0x03
    4bae:	9c 81       	ldd	r25, Y+4	; 0x04
    4bb0:	80 93 68 2e 	sts	0x2E68, r24	; 0x802e68 <daY+0x2>
    4bb4:	90 93 69 2e 	sts	0x2E69, r25	; 0x802e69 <daY+0x3>
    4bb8:	8d 81       	ldd	r24, Y+5	; 0x05
    4bba:	9e 81       	ldd	r25, Y+6	; 0x06
    4bbc:	80 93 6a 2e 	sts	0x2E6A, r24	; 0x802e6a <daY+0x4>
    4bc0:	90 93 6b 2e 	sts	0x2E6B, r25	; 0x802e6b <daY+0x5>
    4bc4:	19 82       	std	Y+1, r1	; 0x01
    4bc6:	1a 82       	std	Y+2, r1	; 0x02
    4bc8:	c1 cf       	rjmp	.-126    	; 0x4b4c <ReadTime()+0x1de>

00004bca <u8g2_ClearBuffer>:
u8g2_ClearBuffer():
    4bca:	fc 01       	movw	r30, r24
    4bcc:	a0 81       	ld	r26, Z
    4bce:	b1 81       	ldd	r27, Z+1	; 0x01
    4bd0:	50 96       	adiw	r26, 0x10	; 16
    4bd2:	2c 91       	ld	r18, X
    4bd4:	82 ad       	ldd	r24, Z+58	; 0x3a
    4bd6:	38 e0       	ldi	r19, 0x08	; 8
    4bd8:	83 9f       	mul	r24, r19
    4bda:	c0 01       	movw	r24, r0
    4bdc:	11 24       	eor	r1, r1
    4bde:	28 9f       	mul	r18, r24
    4be0:	a0 01       	movw	r20, r0
    4be2:	29 9f       	mul	r18, r25
    4be4:	50 0d       	add	r21, r0
    4be6:	11 24       	eor	r1, r1
    4be8:	70 e0       	ldi	r23, 0x00	; 0
    4bea:	60 e0       	ldi	r22, 0x00	; 0
    4bec:	80 ad       	ldd	r24, Z+56	; 0x38
    4bee:	91 ad       	ldd	r25, Z+57	; 0x39
    4bf0:	0c 94 af 3b 	jmp	0x775e	; 0x775e <memset>

00004bf4 <u8g2_ClearDisplay>:
u8g2_ClearDisplay():
    4bf4:	ef 92       	push	r14
    4bf6:	ff 92       	push	r15
    4bf8:	1f 93       	push	r17
    4bfa:	cf 93       	push	r28
    4bfc:	df 93       	push	r29
    4bfe:	ec 01       	movw	r28, r24
u8g2_FirstPage():
    4c00:	7c 01       	movw	r14, r24
    4c02:	8a e7       	ldi	r24, 0x7A	; 122
    4c04:	e8 0e       	add	r14, r24
    4c06:	f1 1c       	adc	r15, r1
    4c08:	f7 01       	movw	r30, r14
    4c0a:	80 81       	ld	r24, Z
    4c0c:	88 23       	and	r24, r24
    4c0e:	11 f0       	breq	.+4      	; 0x4c14 <u8g2_ClearDisplay+0x20>
    4c10:	ce 01       	movw	r24, r28
    4c12:	db df       	rcall	.-74     	; 0x4bca <u8g2_ClearBuffer>
    4c14:	60 e0       	ldi	r22, 0x00	; 0
    4c16:	ce 01       	movw	r24, r28
    4c18:	0e 94 a1 1c 	call	0x3942	; 0x3942 <u8g2_SetBufferCurrTileRow>
u8g2_NextPage():
    4c1c:	ce 01       	movw	r24, r28
    4c1e:	0e 94 b4 1c 	call	0x3968	; 0x3968 <u8g2_send_buffer>
    4c22:	1b ad       	ldd	r17, Y+59	; 0x3b
    4c24:	8a ad       	ldd	r24, Y+58	; 0x3a
    4c26:	18 0f       	add	r17, r24
    4c28:	e8 81       	ld	r30, Y
    4c2a:	f9 81       	ldd	r31, Y+1	; 0x01
    4c2c:	81 89       	ldd	r24, Z+17	; 0x11
    4c2e:	18 17       	cp	r17, r24
    4c30:	60 f0       	brcs	.+24     	; 0x4c4a <u8g2_ClearDisplay+0x56>
    4c32:	ce 01       	movw	r24, r28
    4c34:	0e 94 60 16 	call	0x2cc0	; 0x2cc0 <u8x8_RefreshDisplay>
u8g2_ClearDisplay():
    4c38:	60 e0       	ldi	r22, 0x00	; 0
    4c3a:	ce 01       	movw	r24, r28
    4c3c:	df 91       	pop	r29
    4c3e:	cf 91       	pop	r28
    4c40:	1f 91       	pop	r17
    4c42:	ff 90       	pop	r15
    4c44:	ef 90       	pop	r14
    4c46:	0c 94 a1 1c 	jmp	0x3942	; 0x3942 <u8g2_SetBufferCurrTileRow>
u8g2_NextPage():
    4c4a:	f7 01       	movw	r30, r14
    4c4c:	80 81       	ld	r24, Z
    4c4e:	88 23       	and	r24, r24
    4c50:	11 f0       	breq	.+4      	; 0x4c56 <u8g2_ClearDisplay+0x62>
    4c52:	ce 01       	movw	r24, r28
    4c54:	ba df       	rcall	.-140    	; 0x4bca <u8g2_ClearBuffer>
    4c56:	61 2f       	mov	r22, r17
    4c58:	de cf       	rjmp	.-68     	; 0x4c16 <u8g2_ClearDisplay+0x22>

00004c5a <__vector_25>:
__vector_25():
    4c5a:	1f 92       	push	r1
    4c5c:	0f 92       	push	r0
    4c5e:	0f b6       	in	r0, 0x3f	; 63
    4c60:	0f 92       	push	r0
    4c62:	11 24       	eor	r1, r1
    4c64:	8f 93       	push	r24
    4c66:	9f 93       	push	r25
    4c68:	af 93       	push	r26
    4c6a:	bf 93       	push	r27
    4c6c:	80 91 b7 29 	lds	r24, 0x29B7	; 0x8029b7 <timer_millis>
    4c70:	90 91 b8 29 	lds	r25, 0x29B8	; 0x8029b8 <timer_millis+0x1>
    4c74:	a0 91 b9 29 	lds	r26, 0x29B9	; 0x8029b9 <timer_millis+0x2>
    4c78:	b0 91 ba 29 	lds	r27, 0x29BA	; 0x8029ba <timer_millis+0x3>
    4c7c:	01 96       	adiw	r24, 0x01	; 1
    4c7e:	a1 1d       	adc	r26, r1
    4c80:	b1 1d       	adc	r27, r1
    4c82:	80 93 b7 29 	sts	0x29B7, r24	; 0x8029b7 <timer_millis>
    4c86:	90 93 b8 29 	sts	0x29B8, r25	; 0x8029b8 <timer_millis+0x1>
    4c8a:	a0 93 b9 29 	sts	0x29B9, r26	; 0x8029b9 <timer_millis+0x2>
    4c8e:	b0 93 ba 29 	sts	0x29BA, r27	; 0x8029ba <timer_millis+0x3>
    4c92:	81 e0       	ldi	r24, 0x01	; 1
    4c94:	80 93 a6 0a 	sts	0x0AA6, r24	; 0x800aa6 <__TEXT_REGION_LENGTH__+0x7f4aa6>
    4c98:	bf 91       	pop	r27
    4c9a:	af 91       	pop	r26
    4c9c:	9f 91       	pop	r25
    4c9e:	8f 91       	pop	r24
    4ca0:	0f 90       	pop	r0
    4ca2:	0f be       	out	0x3f, r0	; 63
    4ca4:	0f 90       	pop	r0
    4ca6:	1f 90       	pop	r1
    4ca8:	18 95       	reti

00004caa <__vector_29>:
__vector_29():
    4caa:	1f 92       	push	r1
    4cac:	0f 92       	push	r0
    4cae:	0f b6       	in	r0, 0x3f	; 63
    4cb0:	0f 92       	push	r0
    4cb2:	11 24       	eor	r1, r1
    4cb4:	2f 93       	push	r18
    4cb6:	3f 93       	push	r19
    4cb8:	4f 93       	push	r20
    4cba:	5f 93       	push	r21
    4cbc:	6f 93       	push	r22
    4cbe:	7f 93       	push	r23
    4cc0:	8f 93       	push	r24
    4cc2:	9f 93       	push	r25
    4cc4:	af 93       	push	r26
    4cc6:	bf 93       	push	r27
    4cc8:	ef 93       	push	r30
    4cca:	ff 93       	push	r31
    4ccc:	85 e0       	ldi	r24, 0x05	; 5
    4cce:	0e 94 67 10 	call	0x20ce	; 0x20ce <port_interrupt_handler>
    4cd2:	ff 91       	pop	r31
    4cd4:	ef 91       	pop	r30
    4cd6:	bf 91       	pop	r27
    4cd8:	af 91       	pop	r26
    4cda:	9f 91       	pop	r25
    4cdc:	8f 91       	pop	r24
    4cde:	7f 91       	pop	r23
    4ce0:	6f 91       	pop	r22
    4ce2:	5f 91       	pop	r21
    4ce4:	4f 91       	pop	r20
    4ce6:	3f 91       	pop	r19
    4ce8:	2f 91       	pop	r18
    4cea:	0f 90       	pop	r0
    4cec:	0f be       	out	0x3f, r0	; 63
    4cee:	0f 90       	pop	r0
    4cf0:	1f 90       	pop	r1
    4cf2:	18 95       	reti

00004cf4 <__vector_35>:
__vector_35():
    4cf4:	1f 92       	push	r1
    4cf6:	0f 92       	push	r0
    4cf8:	0f b6       	in	r0, 0x3f	; 63
    4cfa:	0f 92       	push	r0
    4cfc:	11 24       	eor	r1, r1
    4cfe:	2f 93       	push	r18
    4d00:	3f 93       	push	r19
    4d02:	4f 93       	push	r20
    4d04:	5f 93       	push	r21
    4d06:	6f 93       	push	r22
    4d08:	7f 93       	push	r23
    4d0a:	8f 93       	push	r24
    4d0c:	9f 93       	push	r25
    4d0e:	af 93       	push	r26
    4d10:	bf 93       	push	r27
    4d12:	ef 93       	push	r30
    4d14:	ff 93       	push	r31
    4d16:	84 e0       	ldi	r24, 0x04	; 4
    4d18:	0e 94 67 10 	call	0x20ce	; 0x20ce <port_interrupt_handler>
    4d1c:	ff 91       	pop	r31
    4d1e:	ef 91       	pop	r30
    4d20:	bf 91       	pop	r27
    4d22:	af 91       	pop	r26
    4d24:	9f 91       	pop	r25
    4d26:	8f 91       	pop	r24
    4d28:	7f 91       	pop	r23
    4d2a:	6f 91       	pop	r22
    4d2c:	5f 91       	pop	r21
    4d2e:	4f 91       	pop	r20
    4d30:	3f 91       	pop	r19
    4d32:	2f 91       	pop	r18
    4d34:	0f 90       	pop	r0
    4d36:	0f be       	out	0x3f, r0	; 63
    4d38:	0f 90       	pop	r0
    4d3a:	1f 90       	pop	r1
    4d3c:	18 95       	reti

00004d3e <__vector_20>:
__vector_20():
    4d3e:	1f 92       	push	r1
    4d40:	0f 92       	push	r0
    4d42:	0f b6       	in	r0, 0x3f	; 63
    4d44:	0f 92       	push	r0
    4d46:	11 24       	eor	r1, r1
    4d48:	2f 93       	push	r18
    4d4a:	3f 93       	push	r19
    4d4c:	4f 93       	push	r20
    4d4e:	5f 93       	push	r21
    4d50:	6f 93       	push	r22
    4d52:	7f 93       	push	r23
    4d54:	8f 93       	push	r24
    4d56:	9f 93       	push	r25
    4d58:	af 93       	push	r26
    4d5a:	bf 93       	push	r27
    4d5c:	ef 93       	push	r30
    4d5e:	ff 93       	push	r31
    4d60:	83 e0       	ldi	r24, 0x03	; 3
    4d62:	0e 94 67 10 	call	0x20ce	; 0x20ce <port_interrupt_handler>
    4d66:	ff 91       	pop	r31
    4d68:	ef 91       	pop	r30
    4d6a:	bf 91       	pop	r27
    4d6c:	af 91       	pop	r26
    4d6e:	9f 91       	pop	r25
    4d70:	8f 91       	pop	r24
    4d72:	7f 91       	pop	r23
    4d74:	6f 91       	pop	r22
    4d76:	5f 91       	pop	r21
    4d78:	4f 91       	pop	r20
    4d7a:	3f 91       	pop	r19
    4d7c:	2f 91       	pop	r18
    4d7e:	0f 90       	pop	r0
    4d80:	0f be       	out	0x3f, r0	; 63
    4d82:	0f 90       	pop	r0
    4d84:	1f 90       	pop	r1
    4d86:	18 95       	reti

00004d88 <__vector_24>:
__vector_24():
    4d88:	1f 92       	push	r1
    4d8a:	0f 92       	push	r0
    4d8c:	0f b6       	in	r0, 0x3f	; 63
    4d8e:	0f 92       	push	r0
    4d90:	11 24       	eor	r1, r1
    4d92:	2f 93       	push	r18
    4d94:	3f 93       	push	r19
    4d96:	4f 93       	push	r20
    4d98:	5f 93       	push	r21
    4d9a:	6f 93       	push	r22
    4d9c:	7f 93       	push	r23
    4d9e:	8f 93       	push	r24
    4da0:	9f 93       	push	r25
    4da2:	af 93       	push	r26
    4da4:	bf 93       	push	r27
    4da6:	ef 93       	push	r30
    4da8:	ff 93       	push	r31
    4daa:	82 e0       	ldi	r24, 0x02	; 2
    4dac:	0e 94 67 10 	call	0x20ce	; 0x20ce <port_interrupt_handler>
    4db0:	ff 91       	pop	r31
    4db2:	ef 91       	pop	r30
    4db4:	bf 91       	pop	r27
    4db6:	af 91       	pop	r26
    4db8:	9f 91       	pop	r25
    4dba:	8f 91       	pop	r24
    4dbc:	7f 91       	pop	r23
    4dbe:	6f 91       	pop	r22
    4dc0:	5f 91       	pop	r21
    4dc2:	4f 91       	pop	r20
    4dc4:	3f 91       	pop	r19
    4dc6:	2f 91       	pop	r18
    4dc8:	0f 90       	pop	r0
    4dca:	0f be       	out	0x3f, r0	; 63
    4dcc:	0f 90       	pop	r0
    4dce:	1f 90       	pop	r1
    4dd0:	18 95       	reti

00004dd2 <__vector_34>:
__vector_34():
    4dd2:	1f 92       	push	r1
    4dd4:	0f 92       	push	r0
    4dd6:	0f b6       	in	r0, 0x3f	; 63
    4dd8:	0f 92       	push	r0
    4dda:	11 24       	eor	r1, r1
    4ddc:	2f 93       	push	r18
    4dde:	3f 93       	push	r19
    4de0:	4f 93       	push	r20
    4de2:	5f 93       	push	r21
    4de4:	6f 93       	push	r22
    4de6:	7f 93       	push	r23
    4de8:	8f 93       	push	r24
    4dea:	9f 93       	push	r25
    4dec:	af 93       	push	r26
    4dee:	bf 93       	push	r27
    4df0:	ef 93       	push	r30
    4df2:	ff 93       	push	r31
    4df4:	81 e0       	ldi	r24, 0x01	; 1
    4df6:	0e 94 67 10 	call	0x20ce	; 0x20ce <port_interrupt_handler>
    4dfa:	ff 91       	pop	r31
    4dfc:	ef 91       	pop	r30
    4dfe:	bf 91       	pop	r27
    4e00:	af 91       	pop	r26
    4e02:	9f 91       	pop	r25
    4e04:	8f 91       	pop	r24
    4e06:	7f 91       	pop	r23
    4e08:	6f 91       	pop	r22
    4e0a:	5f 91       	pop	r21
    4e0c:	4f 91       	pop	r20
    4e0e:	3f 91       	pop	r19
    4e10:	2f 91       	pop	r18
    4e12:	0f 90       	pop	r0
    4e14:	0f be       	out	0x3f, r0	; 63
    4e16:	0f 90       	pop	r0
    4e18:	1f 90       	pop	r1
    4e1a:	18 95       	reti

00004e1c <__vector_6>:
__vector_6():
    4e1c:	1f 92       	push	r1
    4e1e:	0f 92       	push	r0
    4e20:	0f b6       	in	r0, 0x3f	; 63
    4e22:	0f 92       	push	r0
    4e24:	11 24       	eor	r1, r1
    4e26:	2f 93       	push	r18
    4e28:	3f 93       	push	r19
    4e2a:	4f 93       	push	r20
    4e2c:	5f 93       	push	r21
    4e2e:	6f 93       	push	r22
    4e30:	7f 93       	push	r23
    4e32:	8f 93       	push	r24
    4e34:	9f 93       	push	r25
    4e36:	af 93       	push	r26
    4e38:	bf 93       	push	r27
    4e3a:	ef 93       	push	r30
    4e3c:	ff 93       	push	r31
    4e3e:	80 e0       	ldi	r24, 0x00	; 0
    4e40:	0e 94 67 10 	call	0x20ce	; 0x20ce <port_interrupt_handler>
    4e44:	ff 91       	pop	r31
    4e46:	ef 91       	pop	r30
    4e48:	bf 91       	pop	r27
    4e4a:	af 91       	pop	r26
    4e4c:	9f 91       	pop	r25
    4e4e:	8f 91       	pop	r24
    4e50:	7f 91       	pop	r23
    4e52:	6f 91       	pop	r22
    4e54:	5f 91       	pop	r21
    4e56:	4f 91       	pop	r20
    4e58:	3f 91       	pop	r19
    4e5a:	2f 91       	pop	r18
    4e5c:	0f 90       	pop	r0
    4e5e:	0f be       	out	0x3f, r0	; 63
    4e60:	0f 90       	pop	r0
    4e62:	1f 90       	pop	r1
    4e64:	18 95       	reti

00004e66 <__vector_18>:
__vector_18():
    4e66:	1f 92       	push	r1
    4e68:	0f 92       	push	r0
    4e6a:	0f b6       	in	r0, 0x3f	; 63
    4e6c:	0f 92       	push	r0
    4e6e:	11 24       	eor	r1, r1
    4e70:	2f 93       	push	r18
    4e72:	3f 93       	push	r19
    4e74:	4f 93       	push	r20
    4e76:	5f 93       	push	r21
    4e78:	6f 93       	push	r22
    4e7a:	7f 93       	push	r23
    4e7c:	8f 93       	push	r24
    4e7e:	9f 93       	push	r25
    4e80:	af 93       	push	r26
    4e82:	bf 93       	push	r27
    4e84:	ef 93       	push	r30
    4e86:	ff 93       	push	r31
    4e88:	8b eb       	ldi	r24, 0xBB	; 187
    4e8a:	99 e2       	ldi	r25, 0x29	; 41
    4e8c:	0e 94 b0 11 	call	0x2360	; 0x2360 <UartClass::_tx_data_empty_irq()>
    4e90:	ff 91       	pop	r31
    4e92:	ef 91       	pop	r30
    4e94:	bf 91       	pop	r27
    4e96:	af 91       	pop	r26
    4e98:	9f 91       	pop	r25
    4e9a:	8f 91       	pop	r24
    4e9c:	7f 91       	pop	r23
    4e9e:	6f 91       	pop	r22
    4ea0:	5f 91       	pop	r21
    4ea2:	4f 91       	pop	r20
    4ea4:	3f 91       	pop	r19
    4ea6:	2f 91       	pop	r18
    4ea8:	0f 90       	pop	r0
    4eaa:	0f be       	out	0x3f, r0	; 63
    4eac:	0f 90       	pop	r0
    4eae:	1f 90       	pop	r1
    4eb0:	18 95       	reti

00004eb2 <__vector_17>:
__vector_17():
    4eb2:	1f 92       	push	r1
    4eb4:	0f 92       	push	r0
    4eb6:	0f b6       	in	r0, 0x3f	; 63
    4eb8:	0f 92       	push	r0
    4eba:	11 24       	eor	r1, r1
    4ebc:	2f 93       	push	r18
    4ebe:	8f 93       	push	r24
    4ec0:	9f 93       	push	r25
    4ec2:	ef 93       	push	r30
    4ec4:	ff 93       	push	r31
_rx_complete_irq():
    4ec6:	e0 91 c7 29 	lds	r30, 0x29C7	; 0x8029c7 <Serial+0xc>
    4eca:	f0 91 c8 29 	lds	r31, 0x29C8	; 0x8029c8 <Serial+0xd>
    4ece:	81 81       	ldd	r24, Z+1	; 0x01
    4ed0:	81 fd       	sbrc	r24, 1
    4ed2:	1b c0       	rjmp	.+54     	; 0x4f0a <__vector_17+0x58>
    4ed4:	90 81       	ld	r25, Z
    4ed6:	80 91 d1 29 	lds	r24, 0x29D1	; 0x8029d1 <Serial+0x16>
    4eda:	8f 5f       	subi	r24, 0xFF	; 255
    4edc:	8f 73       	andi	r24, 0x3F	; 63
    4ede:	20 91 d2 29 	lds	r18, 0x29D2	; 0x8029d2 <Serial+0x17>
    4ee2:	82 17       	cp	r24, r18
    4ee4:	41 f0       	breq	.+16     	; 0x4ef6 <__vector_17+0x44>
    4ee6:	e0 91 d1 29 	lds	r30, 0x29D1	; 0x8029d1 <Serial+0x16>
    4eea:	f0 e0       	ldi	r31, 0x00	; 0
    4eec:	e5 54       	subi	r30, 0x45	; 69
    4eee:	f6 4d       	sbci	r31, 0xD6	; 214
    4ef0:	95 8f       	std	Z+29, r25	; 0x1d
    4ef2:	80 93 d1 29 	sts	0x29D1, r24	; 0x8029d1 <Serial+0x16>
__vector_17():
    4ef6:	ff 91       	pop	r31
    4ef8:	ef 91       	pop	r30
    4efa:	9f 91       	pop	r25
    4efc:	8f 91       	pop	r24
    4efe:	2f 91       	pop	r18
    4f00:	0f 90       	pop	r0
    4f02:	0f be       	out	0x3f, r0	; 63
    4f04:	0f 90       	pop	r0
    4f06:	1f 90       	pop	r1
    4f08:	18 95       	reti
_rx_complete_irq():
    4f0a:	80 81       	ld	r24, Z
    4f0c:	f4 cf       	rjmp	.-24     	; 0x4ef6 <__vector_17+0x44>

00004f0e <__vector_14>:
__vector_14():
    4f0e:	1f 92       	push	r1
    4f10:	0f 92       	push	r0
    4f12:	0f b6       	in	r0, 0x3f	; 63
    4f14:	0f 92       	push	r0
    4f16:	11 24       	eor	r1, r1
    4f18:	2f 93       	push	r18
    4f1a:	3f 93       	push	r19
    4f1c:	4f 93       	push	r20
    4f1e:	5f 93       	push	r21
    4f20:	6f 93       	push	r22
    4f22:	7f 93       	push	r23
    4f24:	8f 93       	push	r24
    4f26:	9f 93       	push	r25
    4f28:	af 93       	push	r26
    4f2a:	bf 93       	push	r27
    4f2c:	cf 93       	push	r28
    4f2e:	ef 93       	push	r30
    4f30:	ff 93       	push	r31
TWI_SlaveInterruptHandler():
    4f32:	c0 91 ab 08 	lds	r28, 0x08AB	; 0x8008ab <__TEXT_REGION_LENGTH__+0x7f48ab>
    4f36:	c2 ff       	sbrs	r28, 2
    4f38:	0a c0       	rjmp	.+20     	; 0x4f4e <__vector_14+0x40>
    4f3a:	10 92 cf 28 	sts	0x28CF, r1	; 0x8028cf <slave_bytesRead>
    4f3e:	10 92 ce 28 	sts	0x28CE, r1	; 0x8028ce <slave_bytesWritten>
    4f42:	10 92 cd 28 	sts	0x28CD, r1	; 0x8028cd <slave_bytesToWrite>
    4f46:	84 e0       	ldi	r24, 0x04	; 4
    4f48:	0e 94 d2 1d 	call	0x3ba4	; 0x3ba4 <TWI_SlaveTransactionFinished>
    4f4c:	12 c0       	rjmp	.+36     	; 0x4f72 <__vector_14+0x64>
    4f4e:	c6 ff       	sbrs	r28, 6
    4f50:	2d c0       	rjmp	.+90     	; 0x4fac <__vector_14+0x9e>
    4f52:	80 91 cc 28 	lds	r24, 0x28CC	; 0x8028cc <slave_callUserReceive>
    4f56:	81 30       	cpi	r24, 0x01	; 1
    4f58:	41 f4       	brne	.+16     	; 0x4f6a <__vector_14+0x5c>
    4f5a:	80 91 cf 28 	lds	r24, 0x28CF	; 0x8028cf <slave_bytesRead>
    4f5e:	90 e0       	ldi	r25, 0x00	; 0
    4f60:	f0 e0       	ldi	r31, 0x00	; 0
    4f62:	e0 e0       	ldi	r30, 0x00	; 0
    4f64:	09 95       	icall
    4f66:	10 92 cc 28 	sts	0x28CC, r1	; 0x8028cc <slave_callUserReceive>
    4f6a:	c0 ff       	sbrs	r28, 0
    4f6c:	14 c0       	rjmp	.+40     	; 0x4f96 <__vector_14+0x88>
    4f6e:	0e 94 df 1d 	call	0x3bbe	; 0x3bbe <TWI_SlaveAddressMatchHandler>
__vector_14():
    4f72:	ff 91       	pop	r31
    4f74:	ef 91       	pop	r30
    4f76:	cf 91       	pop	r28
    4f78:	bf 91       	pop	r27
    4f7a:	af 91       	pop	r26
    4f7c:	9f 91       	pop	r25
    4f7e:	8f 91       	pop	r24
    4f80:	7f 91       	pop	r23
    4f82:	6f 91       	pop	r22
    4f84:	5f 91       	pop	r21
    4f86:	4f 91       	pop	r20
    4f88:	3f 91       	pop	r19
    4f8a:	2f 91       	pop	r18
    4f8c:	0f 90       	pop	r0
    4f8e:	0f be       	out	0x3f, r0	; 63
    4f90:	0f 90       	pop	r0
    4f92:	1f 90       	pop	r1
    4f94:	18 95       	reti
TWI_SlaveStopHandler():
    4f96:	80 e4       	ldi	r24, 0x40	; 64
    4f98:	80 93 ab 08 	sts	0x08AB, r24	; 0x8008ab <__TEXT_REGION_LENGTH__+0x7f48ab>
    4f9c:	81 e0       	ldi	r24, 0x01	; 1
    4f9e:	0e 94 d2 1d 	call	0x3ba4	; 0x3ba4 <TWI_SlaveTransactionFinished>
TWI_SlaveInterruptHandler():
    4fa2:	80 91 ab 08 	lds	r24, 0x08AB	; 0x8008ab <__TEXT_REGION_LENGTH__+0x7f48ab>
    4fa6:	85 ff       	sbrs	r24, 5
    4fa8:	e4 cf       	rjmp	.-56     	; 0x4f72 <__vector_14+0x64>
    4faa:	e1 cf       	rjmp	.-62     	; 0x4f6e <__vector_14+0x60>
    4fac:	c7 ff       	sbrs	r28, 7
    4fae:	50 c0       	rjmp	.+160    	; 0x5050 <__vector_14+0x142>
    4fb0:	c3 ff       	sbrs	r28, 3
    4fb2:	08 c0       	rjmp	.+16     	; 0x4fc4 <__vector_14+0xb6>
    4fb4:	10 92 cf 28 	sts	0x28CF, r1	; 0x8028cf <slave_bytesRead>
    4fb8:	10 92 ce 28 	sts	0x28CE, r1	; 0x8028ce <slave_bytesWritten>
    4fbc:	10 92 cd 28 	sts	0x28CD, r1	; 0x8028cd <slave_bytesToWrite>
    4fc0:	83 e0       	ldi	r24, 0x03	; 3
    4fc2:	c2 cf       	rjmp	.-124    	; 0x4f48 <__vector_14+0x3a>
TWI_SlaveDataHandler():
    4fc4:	80 91 a9 08 	lds	r24, 0x08A9	; 0x8008a9 <__TEXT_REGION_LENGTH__+0x7f48a9>
    4fc8:	80 66       	ori	r24, 0x60	; 96
    4fca:	80 93 a9 08 	sts	0x08A9, r24	; 0x8008a9 <__TEXT_REGION_LENGTH__+0x7f48a9>
    4fce:	80 91 ab 08 	lds	r24, 0x08AB	; 0x8008ab <__TEXT_REGION_LENGTH__+0x7f48ab>
    4fd2:	81 ff       	sbrs	r24, 1
    4fd4:	26 c0       	rjmp	.+76     	; 0x5022 <__vector_14+0x114>
TWI_SlaveWriteHandler():
    4fd6:	80 91 ce 28 	lds	r24, 0x28CE	; 0x8028ce <slave_bytesWritten>
    4fda:	88 23       	and	r24, r24
    4fdc:	49 f0       	breq	.+18     	; 0x4ff0 <__vector_14+0xe2>
    4fde:	80 91 ab 08 	lds	r24, 0x08AB	; 0x8008ab <__TEXT_REGION_LENGTH__+0x7f48ab>
    4fe2:	84 ff       	sbrs	r24, 4
    4fe4:	05 c0       	rjmp	.+10     	; 0x4ff0 <__vector_14+0xe2>
    4fe6:	82 e0       	ldi	r24, 0x02	; 2
    4fe8:	80 93 aa 08 	sts	0x08AA, r24	; 0x8008aa <__TEXT_REGION_LENGTH__+0x7f48aa>
    4fec:	81 e0       	ldi	r24, 0x01	; 1
    4fee:	ac cf       	rjmp	.-168    	; 0x4f48 <__vector_14+0x3a>
    4ff0:	90 91 ce 28 	lds	r25, 0x28CE	; 0x8028ce <slave_bytesWritten>
    4ff4:	80 91 cd 28 	lds	r24, 0x28CD	; 0x8028cd <slave_bytesToWrite>
    4ff8:	98 17       	cp	r25, r24
    4ffa:	78 f4       	brcc	.+30     	; 0x501a <__vector_14+0x10c>
    4ffc:	e0 91 ce 28 	lds	r30, 0x28CE	; 0x8028ce <slave_bytesWritten>
    5000:	f0 e0       	ldi	r31, 0x00	; 0
    5002:	80 81       	ld	r24, Z
    5004:	80 93 ad 08 	sts	0x08AD, r24	; 0x8008ad <__TEXT_REGION_LENGTH__+0x7f48ad>
    5008:	80 91 ce 28 	lds	r24, 0x28CE	; 0x8028ce <slave_bytesWritten>
    500c:	8f 5f       	subi	r24, 0xFF	; 255
    500e:	80 93 ce 28 	sts	0x28CE, r24	; 0x8028ce <slave_bytesWritten>
TWI_SlaveReadHandler():
    5012:	83 e0       	ldi	r24, 0x03	; 3
    5014:	80 93 aa 08 	sts	0x08AA, r24	; 0x8008aa <__TEXT_REGION_LENGTH__+0x7f48aa>
    5018:	ac cf       	rjmp	.-168    	; 0x4f72 <__vector_14+0x64>
TWI_SlaveWriteHandler():
    501a:	82 e0       	ldi	r24, 0x02	; 2
    501c:	80 93 aa 08 	sts	0x08AA, r24	; 0x8008aa <__TEXT_REGION_LENGTH__+0x7f48aa>
    5020:	93 cf       	rjmp	.-218    	; 0x4f48 <__vector_14+0x3a>
TWI_SlaveReadHandler():
    5022:	90 91 cf 28 	lds	r25, 0x28CF	; 0x8028cf <slave_bytesRead>
    5026:	80 91 cb 28 	lds	r24, 0x28CB	; 0x8028cb <slave_bytesToRead>
    502a:	98 17       	cp	r25, r24
    502c:	60 f4       	brcc	.+24     	; 0x5046 <__vector_14+0x138>
    502e:	80 91 ad 08 	lds	r24, 0x08AD	; 0x8008ad <__TEXT_REGION_LENGTH__+0x7f48ad>
    5032:	e0 91 cf 28 	lds	r30, 0x28CF	; 0x8028cf <slave_bytesRead>
    5036:	f0 e0       	ldi	r31, 0x00	; 0
    5038:	80 83       	st	Z, r24
    503a:	80 91 cf 28 	lds	r24, 0x28CF	; 0x8028cf <slave_bytesRead>
    503e:	8f 5f       	subi	r24, 0xFF	; 255
    5040:	80 93 cf 28 	sts	0x28CF, r24	; 0x8028cf <slave_bytesRead>
    5044:	e6 cf       	rjmp	.-52     	; 0x5012 <__vector_14+0x104>
    5046:	86 e0       	ldi	r24, 0x06	; 6
    5048:	80 93 aa 08 	sts	0x08AA, r24	; 0x8008aa <__TEXT_REGION_LENGTH__+0x7f48aa>
    504c:	82 e0       	ldi	r24, 0x02	; 2
    504e:	7c cf       	rjmp	.-264    	; 0x4f48 <__vector_14+0x3a>
TWI_SlaveInterruptHandler():
    5050:	85 e0       	ldi	r24, 0x05	; 5
    5052:	7a cf       	rjmp	.-268    	; 0x4f48 <__vector_14+0x3a>

00005054 <__vector_15>:
__vector_15():
    5054:	1f 92       	push	r1
    5056:	0f 92       	push	r0
    5058:	0f b6       	in	r0, 0x3f	; 63
    505a:	0f 92       	push	r0
    505c:	11 24       	eor	r1, r1
    505e:	2f 93       	push	r18
    5060:	3f 93       	push	r19
    5062:	8f 93       	push	r24
    5064:	9f 93       	push	r25
    5066:	ef 93       	push	r30
    5068:	ff 93       	push	r31
TWI_MasterInterruptHandler():
    506a:	80 91 a5 08 	lds	r24, 0x08A5	; 0x8008a5 <__TEXT_REGION_LENGTH__+0x7f48a5>
    506e:	98 2f       	mov	r25, r24
    5070:	9c 70       	andi	r25, 0x0C	; 12
    5072:	c9 f0       	breq	.+50     	; 0x50a6 <__vector_15+0x52>
TWI_MasterArbitrationLostBusErrorHandler():
    5074:	80 91 a5 08 	lds	r24, 0x08A5	; 0x8008a5 <__TEXT_REGION_LENGTH__+0x7f48a5>
    5078:	94 e0       	ldi	r25, 0x04	; 4
    507a:	82 ff       	sbrs	r24, 2
    507c:	93 e0       	ldi	r25, 0x03	; 3
    507e:	90 93 80 29 	sts	0x2980, r25	; 0x802980 <master_result>
    5082:	80 93 a5 08 	sts	0x08A5, r24	; 0x8008a5 <__TEXT_REGION_LENGTH__+0x7f48a5>
    5086:	81 e0       	ldi	r24, 0x01	; 1
    5088:	80 93 84 29 	sts	0x2984, r24	; 0x802984 <twi_mode>
    508c:	10 92 81 29 	sts	0x2981, r1	; 0x802981 <master_trans_status>
__vector_15():
    5090:	ff 91       	pop	r31
    5092:	ef 91       	pop	r30
    5094:	9f 91       	pop	r25
    5096:	8f 91       	pop	r24
    5098:	3f 91       	pop	r19
    509a:	2f 91       	pop	r18
    509c:	0f 90       	pop	r0
    509e:	0f be       	out	0x3f, r0	; 63
    50a0:	0f 90       	pop	r0
    50a2:	1f 90       	pop	r1
    50a4:	18 95       	reti
TWI_MasterInterruptHandler():
    50a6:	86 ff       	sbrs	r24, 6
    50a8:	4c c0       	rjmp	.+152    	; 0x5142 <__vector_15+0xee>
TWI_MasterWriteHandler():
    50aa:	20 91 d3 28 	lds	r18, 0x28D3	; 0x8028d3 <master_bytesToWrite>
    50ae:	90 91 d2 28 	lds	r25, 0x28D2	; 0x8028d2 <master_bytesToRead>
    50b2:	80 91 a5 08 	lds	r24, 0x08A5	; 0x8008a5 <__TEXT_REGION_LENGTH__+0x7f48a5>
    50b6:	84 ff       	sbrs	r24, 4
    50b8:	10 c0       	rjmp	.+32     	; 0x50da <__vector_15+0x86>
    50ba:	80 91 d1 28 	lds	r24, 0x28D1	; 0x8028d1 <master_sendStop>
    50be:	88 23       	and	r24, r24
    50c0:	51 f0       	breq	.+20     	; 0x50d6 <__vector_15+0x82>
    50c2:	83 e0       	ldi	r24, 0x03	; 3
    50c4:	80 93 a4 08 	sts	0x08A4, r24	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
TWI_MasterTransactionFinished():
    50c8:	85 e0       	ldi	r24, 0x05	; 5
    50ca:	80 93 80 29 	sts	0x2980, r24	; 0x802980 <master_result>
    50ce:	10 92 81 29 	sts	0x2981, r1	; 0x802981 <master_trans_status>
    50d2:	81 e0       	ldi	r24, 0x01	; 1
    50d4:	31 c0       	rjmp	.+98     	; 0x5138 <__vector_15+0xe4>
TWI_MasterWriteHandler():
    50d6:	81 e0       	ldi	r24, 0x01	; 1
    50d8:	f5 cf       	rjmp	.-22     	; 0x50c4 <__vector_15+0x70>
    50da:	80 91 82 29 	lds	r24, 0x2982	; 0x802982 <master_bytesWritten>
    50de:	82 17       	cp	r24, r18
    50e0:	90 f4       	brcc	.+36     	; 0x5106 <__vector_15+0xb2>
    50e2:	e0 91 82 29 	lds	r30, 0x2982	; 0x802982 <master_bytesWritten>
    50e6:	80 91 d4 28 	lds	r24, 0x28D4	; 0x8028d4 <master_writeData>
    50ea:	90 91 d5 28 	lds	r25, 0x28D5	; 0x8028d5 <master_writeData+0x1>
    50ee:	e8 0f       	add	r30, r24
    50f0:	f9 2f       	mov	r31, r25
    50f2:	f1 1d       	adc	r31, r1
    50f4:	80 81       	ld	r24, Z
    50f6:	80 93 a8 08 	sts	0x08A8, r24	; 0x8008a8 <__TEXT_REGION_LENGTH__+0x7f48a8>
    50fa:	80 91 82 29 	lds	r24, 0x2982	; 0x802982 <master_bytesWritten>
    50fe:	8f 5f       	subi	r24, 0xFF	; 255
    5100:	80 93 82 29 	sts	0x2982, r24	; 0x802982 <master_bytesWritten>
    5104:	c5 cf       	rjmp	.-118    	; 0x5090 <__vector_15+0x3c>
    5106:	80 91 83 29 	lds	r24, 0x2983	; 0x802983 <master_bytesRead>
    510a:	89 17       	cp	r24, r25
    510c:	48 f4       	brcc	.+18     	; 0x5120 <__vector_15+0xcc>
    510e:	84 e0       	ldi	r24, 0x04	; 4
    5110:	80 93 84 29 	sts	0x2984, r24	; 0x802984 <twi_mode>
    5114:	80 91 d0 28 	lds	r24, 0x28D0	; 0x8028d0 <master_slaveAddress>
    5118:	81 60       	ori	r24, 0x01	; 1
    511a:	80 93 a7 08 	sts	0x08A7, r24	; 0x8008a7 <__TEXT_REGION_LENGTH__+0x7f48a7>
    511e:	b8 cf       	rjmp	.-144    	; 0x5090 <__vector_15+0x3c>
    5120:	80 91 d1 28 	lds	r24, 0x28D1	; 0x8028d1 <master_sendStop>
    5124:	88 23       	and	r24, r24
    5126:	59 f0       	breq	.+22     	; 0x513e <__vector_15+0xea>
    5128:	83 e0       	ldi	r24, 0x03	; 3
TWI_MasterReadHandler():
    512a:	80 93 a4 08 	sts	0x08A4, r24	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
TWI_MasterTransactionFinished():
    512e:	81 e0       	ldi	r24, 0x01	; 1
    5130:	80 93 80 29 	sts	0x2980, r24	; 0x802980 <master_result>
    5134:	10 92 81 29 	sts	0x2981, r1	; 0x802981 <master_trans_status>
    5138:	80 93 84 29 	sts	0x2984, r24	; 0x802984 <twi_mode>
    513c:	a9 cf       	rjmp	.-174    	; 0x5090 <__vector_15+0x3c>
TWI_MasterWriteHandler():
    513e:	81 e0       	ldi	r24, 0x01	; 1
    5140:	f4 cf       	rjmp	.-24     	; 0x512a <__vector_15+0xd6>
TWI_MasterInterruptHandler():
    5142:	87 ff       	sbrs	r24, 7
    5144:	3d c0       	rjmp	.+122    	; 0x51c0 <__vector_15+0x16c>
TWI_MasterReadHandler():
    5146:	90 91 83 29 	lds	r25, 0x2983	; 0x802983 <master_bytesRead>
    514a:	80 91 d2 28 	lds	r24, 0x28D2	; 0x8028d2 <master_bytesToRead>
    514e:	98 17       	cp	r25, r24
    5150:	d8 f4       	brcc	.+54     	; 0x5188 <__vector_15+0x134>
    5152:	80 91 a8 08 	lds	r24, 0x08A8	; 0x8008a8 <__TEXT_REGION_LENGTH__+0x7f48a8>
    5156:	e0 91 83 29 	lds	r30, 0x2983	; 0x802983 <master_bytesRead>
    515a:	20 91 c9 28 	lds	r18, 0x28C9	; 0x8028c9 <master_readData>
    515e:	30 91 ca 28 	lds	r19, 0x28CA	; 0x8028ca <master_readData+0x1>
    5162:	e2 0f       	add	r30, r18
    5164:	f3 2f       	mov	r31, r19
    5166:	f1 1d       	adc	r31, r1
    5168:	80 83       	st	Z, r24
    516a:	80 91 83 29 	lds	r24, 0x2983	; 0x802983 <master_bytesRead>
    516e:	8f 5f       	subi	r24, 0xFF	; 255
    5170:	80 93 83 29 	sts	0x2983, r24	; 0x802983 <master_bytesRead>
    5174:	90 91 d2 28 	lds	r25, 0x28D2	; 0x8028d2 <master_bytesToRead>
    5178:	80 91 83 29 	lds	r24, 0x2983	; 0x802983 <master_bytesRead>
    517c:	89 17       	cp	r24, r25
    517e:	c0 f4       	brcc	.+48     	; 0x51b0 <__vector_15+0x15c>
    5180:	82 e0       	ldi	r24, 0x02	; 2
    5182:	80 93 a4 08 	sts	0x08A4, r24	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
    5186:	84 cf       	rjmp	.-248    	; 0x5090 <__vector_15+0x3c>
    5188:	80 91 d1 28 	lds	r24, 0x28D1	; 0x8028d1 <master_sendStop>
    518c:	88 23       	and	r24, r24
    518e:	71 f0       	breq	.+28     	; 0x51ac <__vector_15+0x158>
    5190:	87 e0       	ldi	r24, 0x07	; 7
    5192:	80 93 a4 08 	sts	0x08A4, r24	; 0x8008a4 <__TEXT_REGION_LENGTH__+0x7f48a4>
TWI_MasterTransactionFinished():
    5196:	82 e0       	ldi	r24, 0x02	; 2
    5198:	80 93 80 29 	sts	0x2980, r24	; 0x802980 <master_result>
    519c:	10 92 81 29 	sts	0x2981, r1	; 0x802981 <master_trans_status>
    51a0:	81 e0       	ldi	r24, 0x01	; 1
    51a2:	80 93 84 29 	sts	0x2984, r24	; 0x802984 <twi_mode>
TWI_MasterReadHandler():
    51a6:	10 92 d2 28 	sts	0x28D2, r1	; 0x8028d2 <master_bytesToRead>
    51aa:	72 cf       	rjmp	.-284    	; 0x5090 <__vector_15+0x3c>
    51ac:	85 e0       	ldi	r24, 0x05	; 5
    51ae:	f1 cf       	rjmp	.-30     	; 0x5192 <__vector_15+0x13e>
    51b0:	80 91 d1 28 	lds	r24, 0x28D1	; 0x8028d1 <master_sendStop>
    51b4:	88 23       	and	r24, r24
    51b6:	11 f0       	breq	.+4      	; 0x51bc <__vector_15+0x168>
    51b8:	87 e0       	ldi	r24, 0x07	; 7
    51ba:	b7 cf       	rjmp	.-146    	; 0x512a <__vector_15+0xd6>
    51bc:	85 e0       	ldi	r24, 0x05	; 5
    51be:	b5 cf       	rjmp	.-150    	; 0x512a <__vector_15+0xd6>
TWI_MasterTransactionFinished():
    51c0:	86 e0       	ldi	r24, 0x06	; 6
    51c2:	83 cf       	rjmp	.-250    	; 0x50ca <__vector_15+0x76>

000051c4 <global constructors keyed to 65535_0_ADB_new_code5_11_01_2023.ino.cpp.o.20689>:
_GLOBAL__I_65535_0_ADB_new_code5_11_01_2023.ino.cpp.o.20689():
    51c4:	cf 93       	push	r28
    51c6:	df 93       	push	r29
    51c8:	10 92 bd 29 	sts	0x29BD, r1	; 0x8029bd <Serial+0x2>
    51cc:	10 92 be 29 	sts	0x29BE, r1	; 0x8029be <Serial+0x3>
    51d0:	48 ee       	ldi	r20, 0xE8	; 232
    51d2:	53 e0       	ldi	r21, 0x03	; 3
    51d4:	60 e0       	ldi	r22, 0x00	; 0
    51d6:	70 e0       	ldi	r23, 0x00	; 0
    51d8:	40 93 bf 29 	sts	0x29BF, r20	; 0x8029bf <Serial+0x4>
    51dc:	50 93 c0 29 	sts	0x29C0, r21	; 0x8029c0 <Serial+0x5>
    51e0:	60 93 c1 29 	sts	0x29C1, r22	; 0x8029c1 <Serial+0x6>
    51e4:	70 93 c2 29 	sts	0x29C2, r23	; 0x8029c2 <Serial+0x7>
    51e8:	87 e8       	ldi	r24, 0x87	; 135
    51ea:	98 eb       	ldi	r25, 0xB8	; 184
    51ec:	80 93 bb 29 	sts	0x29BB, r24	; 0x8029bb <Serial>
    51f0:	90 93 bc 29 	sts	0x29BC, r25	; 0x8029bc <Serial+0x1>
    51f4:	80 e0       	ldi	r24, 0x00	; 0
    51f6:	98 e0       	ldi	r25, 0x08	; 8
    51f8:	80 93 c7 29 	sts	0x29C7, r24	; 0x8029c7 <Serial+0xc>
    51fc:	90 93 c8 29 	sts	0x29C8, r25	; 0x8029c8 <Serial+0xd>
    5200:	91 e0       	ldi	r25, 0x01	; 1
    5202:	90 93 c9 29 	sts	0x29C9, r25	; 0x8029c9 <Serial+0xe>
    5206:	10 92 ca 29 	sts	0x29CA, r1	; 0x8029ca <Serial+0xf>
    520a:	10 92 cb 29 	sts	0x29CB, r1	; 0x8029cb <Serial+0x10>
    520e:	85 e0       	ldi	r24, 0x05	; 5
    5210:	80 93 cc 29 	sts	0x29CC, r24	; 0x8029cc <Serial+0x11>
    5214:	84 e0       	ldi	r24, 0x04	; 4
    5216:	80 93 cd 29 	sts	0x29CD, r24	; 0x8029cd <Serial+0x12>
    521a:	90 93 ce 29 	sts	0x29CE, r25	; 0x8029ce <Serial+0x13>
    521e:	10 92 cf 29 	sts	0x29CF, r1	; 0x8029cf <Serial+0x14>
    5222:	10 92 d0 29 	sts	0x29D0, r1	; 0x8029d0 <Serial+0x15>
    5226:	10 92 d1 29 	sts	0x29D1, r1	; 0x8029d1 <Serial+0x16>
    522a:	10 92 d2 29 	sts	0x29D2, r1	; 0x8029d2 <Serial+0x17>
    522e:	10 92 d3 29 	sts	0x29D3, r1	; 0x8029d3 <Serial+0x18>
    5232:	10 92 d4 29 	sts	0x29D4, r1	; 0x8029d4 <Serial+0x19>
    5236:	92 e1       	ldi	r25, 0x12	; 18
    5238:	90 93 d5 29 	sts	0x29D5, r25	; 0x8029d5 <Serial+0x1a>
    523c:	10 92 d6 29 	sts	0x29D6, r1	; 0x8029d6 <Serial+0x1b>
    5240:	10 92 d7 29 	sts	0x29D7, r1	; 0x8029d7 <Serial+0x1c>
    5244:	10 92 5a 2a 	sts	0x2A5A, r1	; 0x802a5a <Wire+0x2>
    5248:	10 92 5b 2a 	sts	0x2A5B, r1	; 0x802a5b <Wire+0x3>
    524c:	40 93 5c 2a 	sts	0x2A5C, r20	; 0x802a5c <Wire+0x4>
    5250:	50 93 5d 2a 	sts	0x2A5D, r21	; 0x802a5d <Wire+0x5>
    5254:	60 93 5e 2a 	sts	0x2A5E, r22	; 0x802a5e <Wire+0x6>
    5258:	70 93 5f 2a 	sts	0x2A5F, r23	; 0x802a5f <Wire+0x7>
    525c:	25 ea       	ldi	r18, 0xA5	; 165
    525e:	38 eb       	ldi	r19, 0xB8	; 184
    5260:	20 93 58 2a 	sts	0x2A58, r18	; 0x802a58 <Wire>
    5264:	30 93 59 2a 	sts	0x2A59, r19	; 0x802a59 <Wire+0x1>
    5268:	80 93 65 2a 	sts	0x2A65, r24	; 0x802a65 <DEFAULT_SPI_SETTINGS+0x1>
    526c:	81 e2       	ldi	r24, 0x21	; 33
    526e:	80 93 64 2a 	sts	0x2A64, r24	; 0x802a64 <DEFAULT_SPI_SETTINGS>
    5272:	10 92 f0 2f 	sts	0x2FF0, r1	; 0x802ff0 <u8g2+0x2>
    5276:	10 92 f1 2f 	sts	0x2FF1, r1	; 0x802ff1 <u8g2+0x3>
    527a:	83 ed       	ldi	r24, 0xD3	; 211
    527c:	9d e0       	ldi	r25, 0x0D	; 13
    527e:	80 93 6d 30 	sts	0x306D, r24	; 0x80306d <u8g2+0x7f>
    5282:	90 93 6e 30 	sts	0x306E, r25	; 0x80306e <u8g2+0x80>
    5286:	10 92 6f 30 	sts	0x306F, r1	; 0x80306f <u8g2+0x81>
    528a:	10 92 70 30 	sts	0x3070, r1	; 0x803070 <u8g2+0x82>
    528e:	10 92 0a 30 	sts	0x300A, r1	; 0x80300a <u8g2+0x1c>
    5292:	8b e0       	ldi	r24, 0x0B	; 11
    5294:	99 eb       	ldi	r25, 0xB9	; 185
    5296:	80 93 ee 2f 	sts	0x2FEE, r24	; 0x802fee <u8g2>
    529a:	90 93 ef 2f 	sts	0x2FEF, r25	; 0x802fef <u8g2+0x1>
    529e:	10 92 f2 2f 	sts	0x2FF2, r1	; 0x802ff2 <u8g2+0x4>
    52a2:	10 92 f3 2f 	sts	0x2FF3, r1	; 0x802ff3 <u8g2+0x5>
    52a6:	10 92 07 30 	sts	0x3007, r1	; 0x803007 <u8g2+0x19>
    52aa:	10 92 fe 2f 	sts	0x2FFE, r1	; 0x802ffe <u8g2+0x10>
    52ae:	10 92 ff 2f 	sts	0x2FFF, r1	; 0x802fff <u8g2+0x11>
    52b2:	10 92 00 30 	sts	0x3000, r1	; 0x803000 <u8g2+0x12>
    52b6:	10 92 01 30 	sts	0x3001, r1	; 0x803001 <u8g2+0x13>
    52ba:	8f ef       	ldi	r24, 0xFF	; 255
    52bc:	80 93 08 30 	sts	0x3008, r24	; 0x803008 <u8g2+0x1a>
    52c0:	80 93 0c 30 	sts	0x300C, r24	; 0x80300c <u8g2+0x1e>
    52c4:	e0 e1       	ldi	r30, 0x10	; 16
    52c6:	f0 e3       	ldi	r31, 0x30	; 48
    52c8:	df ef       	ldi	r29, 0xFF	; 255
    52ca:	d1 93       	st	Z+, r29
    52cc:	80 e3       	ldi	r24, 0x30	; 48
    52ce:	e6 32       	cpi	r30, 0x26	; 38
    52d0:	f8 07       	cpc	r31, r24
    52d2:	d9 f7       	brne	.-10     	; 0x52ca <global constructors keyed to 65535_0_ADB_new_code5_11_01_2023.ino.cpp.o.20689+0x106>
    52d4:	8e ed       	ldi	r24, 0xDE	; 222
    52d6:	96 e1       	ldi	r25, 0x16	; 22
    52d8:	80 93 f6 2f 	sts	0x2FF6, r24	; 0x802ff6 <u8g2+0x8>
    52dc:	90 93 f7 2f 	sts	0x2FF7, r25	; 0x802ff7 <u8g2+0x9>
    52e0:	84 e9       	ldi	r24, 0x94	; 148
    52e2:	97 e1       	ldi	r25, 0x17	; 23
    52e4:	80 93 f8 2f 	sts	0x2FF8, r24	; 0x802ff8 <u8g2+0xa>
    52e8:	90 93 f9 2f 	sts	0x2FF9, r25	; 0x802ff9 <u8g2+0xb>
    52ec:	8c e5       	ldi	r24, 0x5C	; 92
    52ee:	95 e1       	ldi	r25, 0x15	; 21
    52f0:	80 93 fa 2f 	sts	0x2FFA, r24	; 0x802ffa <u8g2+0xc>
    52f4:	90 93 fb 2f 	sts	0x2FFB, r25	; 0x802ffb <u8g2+0xd>
    52f8:	84 e1       	ldi	r24, 0x14	; 20
    52fa:	9d e1       	ldi	r25, 0x1D	; 29
    52fc:	80 93 fc 2f 	sts	0x2FFC, r24	; 0x802ffc <u8g2+0xe>
    5300:	90 93 fd 2f 	sts	0x2FFD, r25	; 0x802ffd <u8g2+0xf>
    5304:	30 e0       	ldi	r19, 0x00	; 0
    5306:	20 e0       	ldi	r18, 0x00	; 0
    5308:	40 e0       	ldi	r20, 0x00	; 0
    530a:	69 e0       	ldi	r22, 0x09	; 9
    530c:	82 ef       	ldi	r24, 0xF2	; 242
    530e:	9f e2       	ldi	r25, 0x2F	; 47
    5310:	0e 94 de 16 	call	0x2dbc	; 0x2dbc <u8x8_d_ssd1309_128x64_noname2>
    5314:	10 92 3d 30 	sts	0x303D, r1	; 0x80303d <u8g2+0x4f>
    5318:	10 92 3e 30 	sts	0x303E, r1	; 0x80303e <u8g2+0x50>
    531c:	8d ed       	ldi	r24, 0xDD	; 221
    531e:	9d e0       	ldi	r25, 0x0D	; 13
    5320:	80 93 26 30 	sts	0x3026, r24	; 0x803026 <u8g2+0x38>
    5324:	90 93 27 30 	sts	0x3027, r25	; 0x803027 <u8g2+0x39>
    5328:	86 e6       	ldi	r24, 0x66	; 102
    532a:	9a e2       	ldi	r25, 0x2A	; 42
    532c:	80 93 2a 30 	sts	0x302A, r24	; 0x80302a <u8g2+0x3c>
    5330:	90 93 2b 30 	sts	0x302B, r25	; 0x80302b <u8g2+0x3d>
    5334:	88 e0       	ldi	r24, 0x08	; 8
    5336:	80 93 2c 30 	sts	0x302C, r24	; 0x80302c <u8g2+0x3e>
    533a:	10 92 2d 30 	sts	0x302D, r1	; 0x80302d <u8g2+0x3f>
    533e:	10 92 4a 30 	sts	0x304A, r1	; 0x80304a <u8g2+0x5c>
    5342:	10 92 6a 30 	sts	0x306A, r1	; 0x80306a <u8g2+0x7c>
    5346:	c1 e0       	ldi	r28, 0x01	; 1
    5348:	c0 93 6b 30 	sts	0x306B, r28	; 0x80306b <u8g2+0x7d>
    534c:	c0 93 6c 30 	sts	0x306C, r28	; 0x80306c <u8g2+0x7e>
    5350:	83 e1       	ldi	r24, 0x13	; 19
    5352:	99 eb       	ldi	r25, 0xB9	; 185
    5354:	80 93 28 30 	sts	0x3028, r24	; 0x803028 <u8g2+0x3a>
    5358:	90 93 29 30 	sts	0x3029, r25	; 0x803029 <u8g2+0x3b>
    535c:	82 ef       	ldi	r24, 0xF2	; 242
    535e:	9f e2       	ldi	r25, 0x2F	; 47
    5360:	0e 94 d5 17 	call	0x2faa	; 0x2faa <u8g2_update_dimension_r0>
    5364:	10 92 39 30 	sts	0x3039, r1	; 0x803039 <u8g2+0x4b>
    5368:	10 92 3b 30 	sts	0x303B, r1	; 0x80303b <u8g2+0x4d>
    536c:	d0 93 3a 30 	sts	0x303A, r29	; 0x80303a <u8g2+0x4c>
    5370:	d0 93 3c 30 	sts	0x303C, r29	; 0x80303c <u8g2+0x4e>
    5374:	e0 91 28 30 	lds	r30, 0x3028	; 0x803028 <u8g2+0x3a>
    5378:	f0 91 29 30 	lds	r31, 0x3029	; 0x803029 <u8g2+0x3b>
    537c:	02 80       	ldd	r0, Z+2	; 0x02
    537e:	f3 81       	ldd	r31, Z+3	; 0x03
    5380:	e0 2d       	mov	r30, r0
    5382:	82 ef       	ldi	r24, 0xF2	; 242
    5384:	9f e2       	ldi	r25, 0x2F	; 47
    5386:	09 95       	icall
    5388:	80 e4       	ldi	r24, 0x40	; 64
    538a:	9e e0       	ldi	r25, 0x0E	; 14
    538c:	80 93 3f 30 	sts	0x303F, r24	; 0x80303f <u8g2+0x51>
    5390:	90 93 40 30 	sts	0x3040, r25	; 0x803040 <u8g2+0x52>
    5394:	10 92 4d 30 	sts	0x304D, r1	; 0x80304d <u8g2+0x5f>
    5398:	86 e0       	ldi	r24, 0x06	; 6
    539a:	80 93 10 30 	sts	0x3010, r24	; 0x803010 <u8g2+0x22>
    539e:	84 e0       	ldi	r24, 0x04	; 4
    53a0:	80 93 11 30 	sts	0x3011, r24	; 0x803011 <u8g2+0x23>
    53a4:	87 e0       	ldi	r24, 0x07	; 7
    53a6:	80 93 19 30 	sts	0x3019, r24	; 0x803019 <u8g2+0x2b>
    53aa:	85 e0       	ldi	r24, 0x05	; 5
    53ac:	80 93 1a 30 	sts	0x301A, r24	; 0x80301a <u8g2+0x2c>
    53b0:	8d e0       	ldi	r24, 0x0D	; 13
    53b2:	80 93 1b 30 	sts	0x301B, r24	; 0x80301b <u8g2+0x2d>
    53b6:	10 92 d1 2f 	sts	0x2FD1, r1	; 0x802fd1 <mySerial+0x2>
    53ba:	10 92 d2 2f 	sts	0x2FD2, r1	; 0x802fd2 <mySerial+0x3>
    53be:	88 ee       	ldi	r24, 0xE8	; 232
    53c0:	93 e0       	ldi	r25, 0x03	; 3
    53c2:	a0 e0       	ldi	r26, 0x00	; 0
    53c4:	b0 e0       	ldi	r27, 0x00	; 0
    53c6:	80 93 d3 2f 	sts	0x2FD3, r24	; 0x802fd3 <mySerial+0x4>
    53ca:	90 93 d4 2f 	sts	0x2FD4, r25	; 0x802fd4 <mySerial+0x5>
    53ce:	a0 93 d5 2f 	sts	0x2FD5, r26	; 0x802fd5 <mySerial+0x6>
    53d2:	b0 93 d6 2f 	sts	0x2FD6, r27	; 0x802fd6 <mySerial+0x7>
    53d6:	89 ef       	ldi	r24, 0xF9	; 249
    53d8:	98 eb       	ldi	r25, 0xB8	; 184
    53da:	80 93 cf 2f 	sts	0x2FCF, r24	; 0x802fcf <mySerial>
    53de:	90 93 d0 2f 	sts	0x2FD0, r25	; 0x802fd0 <mySerial+0x1>
    53e2:	10 92 e5 2f 	sts	0x2FE5, r1	; 0x802fe5 <mySerial+0x16>
    53e6:	10 92 e6 2f 	sts	0x2FE6, r1	; 0x802fe6 <mySerial+0x17>
    53ea:	10 92 e7 2f 	sts	0x2FE7, r1	; 0x802fe7 <mySerial+0x18>
    53ee:	10 92 e8 2f 	sts	0x2FE8, r1	; 0x802fe8 <mySerial+0x19>
    53f2:	10 92 e9 2f 	sts	0x2FE9, r1	; 0x802fe9 <mySerial+0x1a>
    53f6:	10 92 ea 2f 	sts	0x2FEA, r1	; 0x802fea <mySerial+0x1b>
    53fa:	10 92 eb 2f 	sts	0x2FEB, r1	; 0x802feb <mySerial+0x1c>
    53fe:	10 92 ec 2f 	sts	0x2FEC, r1	; 0x802fec <mySerial+0x1d>
    5402:	80 91 ed 2f 	lds	r24, 0x2FED	; 0x802fed <mySerial+0x1e>
    5406:	8e 7f       	andi	r24, 0xFE	; 254
    5408:	8d 7f       	andi	r24, 0xFD	; 253
    540a:	80 93 ed 2f 	sts	0x2FED, r24	; 0x802fed <mySerial+0x1e>
    540e:	81 fb       	bst	r24, 1
    5410:	66 27       	eor	r22, r22
    5412:	60 f9       	bld	r22, 0
    5414:	6c 27       	eor	r22, r28
    5416:	89 e1       	ldi	r24, 0x19	; 25
    5418:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <digitalWrite.part.2>
    541c:	61 e0       	ldi	r22, 0x01	; 1
    541e:	89 e1       	ldi	r24, 0x19	; 25
    5420:	0e 94 6a 0e 	call	0x1cd4	; 0x1cd4 <pinMode.part.1>
    5424:	80 e2       	ldi	r24, 0x20	; 32
    5426:	80 93 df 2f 	sts	0x2FDF, r24	; 0x802fdf <mySerial+0x10>
    542a:	84 ea       	ldi	r24, 0xA4	; 164
    542c:	94 e0       	ldi	r25, 0x04	; 4
    542e:	80 93 e0 2f 	sts	0x2FE0, r24	; 0x802fe0 <mySerial+0x11>
    5432:	90 93 e1 2f 	sts	0x2FE1, r25	; 0x802fe1 <mySerial+0x12>
    5436:	60 e0       	ldi	r22, 0x00	; 0
    5438:	88 e1       	ldi	r24, 0x18	; 24
    543a:	0e 94 6a 0e 	call	0x1cd4	; 0x1cd4 <pinMode.part.1>
    543e:	80 91 ed 2f 	lds	r24, 0x2FED	; 0x802fed <mySerial+0x1e>
    5442:	81 fd       	sbrc	r24, 1
    5444:	04 c0       	rjmp	.+8      	; 0x544e <global constructors keyed to 65535_0_ADB_new_code5_11_01_2023.ino.cpp.o.20689+0x28a>
    5446:	61 e0       	ldi	r22, 0x01	; 1
    5448:	88 e1       	ldi	r24, 0x18	; 24
    544a:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <digitalWrite.part.2>
    544e:	88 e1       	ldi	r24, 0x18	; 24
    5450:	80 93 db 2f 	sts	0x2FDB, r24	; 0x802fdb <mySerial+0xc>
    5454:	80 e1       	ldi	r24, 0x10	; 16
    5456:	80 93 dc 2f 	sts	0x2FDC, r24	; 0x802fdc <mySerial+0xd>
    545a:	88 ea       	ldi	r24, 0xA8	; 168
    545c:	94 e0       	ldi	r25, 0x04	; 4
    545e:	80 93 dd 2f 	sts	0x2FDD, r24	; 0x802fdd <mySerial+0xe>
    5462:	90 93 de 2f 	sts	0x2FDE, r25	; 0x802fde <mySerial+0xf>
    5466:	10 92 b3 2f 	sts	0x2FB3, r1	; 0x802fb3 <printer+0x2>
    546a:	10 92 b4 2f 	sts	0x2FB4, r1	; 0x802fb4 <printer+0x3>
    546e:	87 eb       	ldi	r24, 0xB7	; 183
    5470:	98 eb       	ldi	r25, 0xB8	; 184
    5472:	80 93 b1 2f 	sts	0x2FB1, r24	; 0x802fb1 <printer>
    5476:	90 93 b2 2f 	sts	0x2FB2, r25	; 0x802fb2 <printer+0x1>
    547a:	8f ec       	ldi	r24, 0xCF	; 207
    547c:	9f e2       	ldi	r25, 0x2F	; 47
    547e:	80 93 b5 2f 	sts	0x2FB5, r24	; 0x802fb5 <printer+0x4>
    5482:	90 93 b6 2f 	sts	0x2FB6, r25	; 0x802fb6 <printer+0x5>
    5486:	8f ef       	ldi	r24, 0xFF	; 255
    5488:	80 93 bf 2f 	sts	0x2FBF, r24	; 0x802fbf <printer+0xe>
    548c:	10 92 c2 2f 	sts	0x2FC2, r1	; 0x802fc2 <printer+0x11>
    5490:	82 e3       	ldi	r24, 0x32	; 50
    5492:	90 e0       	ldi	r25, 0x00	; 0
    5494:	80 93 79 2f 	sts	0x2F79, r24	; 0x802f79 <button0+0x2>
    5498:	90 93 7a 2f 	sts	0x2F7A, r25	; 0x802f7a <button0+0x3>
    549c:	80 e9       	ldi	r24, 0x90	; 144
    549e:	91 e0       	ldi	r25, 0x01	; 1
    54a0:	80 93 7b 2f 	sts	0x2F7B, r24	; 0x802f7b <button0+0x4>
    54a4:	90 93 7c 2f 	sts	0x2F7C, r25	; 0x802f7c <button0+0x5>
    54a8:	80 e2       	ldi	r24, 0x20	; 32
    54aa:	93 e0       	ldi	r25, 0x03	; 3
    54ac:	80 93 7d 2f 	sts	0x2F7D, r24	; 0x802f7d <button0+0x6>
    54b0:	90 93 7e 2f 	sts	0x2F7E, r25	; 0x802f7e <button0+0x7>
    54b4:	10 92 81 2f 	sts	0x2F81, r1	; 0x802f81 <button0+0xa>
    54b8:	10 92 82 2f 	sts	0x2F82, r1	; 0x802f82 <button0+0xb>
    54bc:	10 92 83 2f 	sts	0x2F83, r1	; 0x802f83 <button0+0xc>
    54c0:	10 92 84 2f 	sts	0x2F84, r1	; 0x802f84 <button0+0xd>
    54c4:	10 92 85 2f 	sts	0x2F85, r1	; 0x802f85 <button0+0xe>
    54c8:	10 92 86 2f 	sts	0x2F86, r1	; 0x802f86 <button0+0xf>
    54cc:	10 92 87 2f 	sts	0x2F87, r1	; 0x802f87 <button0+0x10>
    54d0:	10 92 88 2f 	sts	0x2F88, r1	; 0x802f88 <button0+0x11>
    54d4:	10 92 89 2f 	sts	0x2F89, r1	; 0x802f89 <button0+0x12>
    54d8:	10 92 8a 2f 	sts	0x2F8A, r1	; 0x802f8a <button0+0x13>
    54dc:	10 92 8b 2f 	sts	0x2F8B, r1	; 0x802f8b <button0+0x14>
    54e0:	10 92 8c 2f 	sts	0x2F8C, r1	; 0x802f8c <button0+0x15>
    54e4:	10 92 8d 2f 	sts	0x2F8D, r1	; 0x802f8d <button0+0x16>
    54e8:	10 92 8e 2f 	sts	0x2F8E, r1	; 0x802f8e <button0+0x17>
    54ec:	10 92 8f 2f 	sts	0x2F8F, r1	; 0x802f8f <button0+0x18>
    54f0:	10 92 90 2f 	sts	0x2F90, r1	; 0x802f90 <button0+0x19>
    54f4:	10 92 91 2f 	sts	0x2F91, r1	; 0x802f91 <button0+0x1a>
    54f8:	10 92 92 2f 	sts	0x2F92, r1	; 0x802f92 <button0+0x1b>
    54fc:	10 92 93 2f 	sts	0x2F93, r1	; 0x802f93 <button0+0x1c>
    5500:	10 92 94 2f 	sts	0x2F94, r1	; 0x802f94 <button0+0x1d>
    5504:	10 92 95 2f 	sts	0x2F95, r1	; 0x802f95 <button0+0x1e>
    5508:	10 92 96 2f 	sts	0x2F96, r1	; 0x802f96 <button0+0x1f>
    550c:	10 92 97 2f 	sts	0x2F97, r1	; 0x802f97 <button0+0x20>
    5510:	10 92 98 2f 	sts	0x2F98, r1	; 0x802f98 <button0+0x21>
    5514:	10 92 99 2f 	sts	0x2F99, r1	; 0x802f99 <button0+0x22>
    5518:	10 92 9a 2f 	sts	0x2F9A, r1	; 0x802f9a <button0+0x23>
    551c:	10 92 9b 2f 	sts	0x2F9B, r1	; 0x802f9b <button0+0x24>
    5520:	10 92 9c 2f 	sts	0x2F9C, r1	; 0x802f9c <button0+0x25>
    5524:	10 92 9f 2f 	sts	0x2F9F, r1	; 0x802f9f <button0+0x28>
    5528:	10 92 a0 2f 	sts	0x2FA0, r1	; 0x802fa0 <button0+0x29>
    552c:	10 92 a1 2f 	sts	0x2FA1, r1	; 0x802fa1 <button0+0x2a>
    5530:	10 92 a2 2f 	sts	0x2FA2, r1	; 0x802fa2 <button0+0x2b>
    5534:	10 92 a3 2f 	sts	0x2FA3, r1	; 0x802fa3 <button0+0x2c>
    5538:	10 92 a4 2f 	sts	0x2FA4, r1	; 0x802fa4 <button0+0x2d>
    553c:	10 92 a5 2f 	sts	0x2FA5, r1	; 0x802fa5 <button0+0x2e>
    5540:	10 92 a6 2f 	sts	0x2FA6, r1	; 0x802fa6 <button0+0x2f>
    5544:	10 92 a7 2f 	sts	0x2FA7, r1	; 0x802fa7 <button0+0x30>
    5548:	10 92 a8 2f 	sts	0x2FA8, r1	; 0x802fa8 <button0+0x31>
    554c:	c1 e0       	ldi	r28, 0x01	; 1
    554e:	d0 e0       	ldi	r29, 0x00	; 0
    5550:	c0 93 af 2f 	sts	0x2FAF, r28	; 0x802faf <button0+0x38>
    5554:	d0 93 b0 2f 	sts	0x2FB0, r29	; 0x802fb0 <button0+0x39>
    5558:	8a e0       	ldi	r24, 0x0A	; 10
    555a:	90 e0       	ldi	r25, 0x00	; 0
    555c:	80 93 77 2f 	sts	0x2F77, r24	; 0x802f77 <button0>
    5560:	90 93 78 2f 	sts	0x2F78, r25	; 0x802f78 <button0+0x1>
    5564:	10 92 7f 2f 	sts	0x2F7F, r1	; 0x802f7f <button0+0x8>
    5568:	10 92 80 2f 	sts	0x2F80, r1	; 0x802f80 <button0+0x9>
    556c:	62 e0       	ldi	r22, 0x02	; 2
    556e:	0e 94 9e 0e 	call	0x1d3c	; 0x1d3c <pinMode>
    5572:	65 ed       	ldi	r22, 0xD5	; 213
    5574:	79 eb       	ldi	r23, 0xB9	; 185
    5576:	87 e4       	ldi	r24, 0x47	; 71
    5578:	9f e2       	ldi	r25, 0x2F	; 47
    557a:	89 d9       	rcall	.-3310   	; 0x488e <String::String(char const*)>
    557c:	62 ee       	ldi	r22, 0xE2	; 226
    557e:	79 eb       	ldi	r23, 0xB9	; 185
    5580:	8d e4       	ldi	r24, 0x4D	; 77
    5582:	9f e2       	ldi	r25, 0x2F	; 47
    5584:	84 d9       	rcall	.-3320   	; 0x488e <String::String(char const*)>
    5586:	60 ef       	ldi	r22, 0xF0	; 240
    5588:	79 eb       	ldi	r23, 0xB9	; 185
    558a:	83 e5       	ldi	r24, 0x53	; 83
    558c:	9f e2       	ldi	r25, 0x2F	; 47
    558e:	7f d9       	rcall	.-3330   	; 0x488e <String::String(char const*)>
    5590:	61 e0       	ldi	r22, 0x01	; 1
    5592:	7a eb       	ldi	r23, 0xBA	; 186
    5594:	89 e5       	ldi	r24, 0x59	; 89
    5596:	9f e2       	ldi	r25, 0x2F	; 47
    5598:	7a d9       	rcall	.-3340   	; 0x488e <String::String(char const*)>
    559a:	6e e0       	ldi	r22, 0x0E	; 14
    559c:	7a eb       	ldi	r23, 0xBA	; 186
    559e:	8f e5       	ldi	r24, 0x5F	; 95
    55a0:	9f e2       	ldi	r25, 0x2F	; 47
    55a2:	75 d9       	rcall	.-3350   	; 0x488e <String::String(char const*)>
    55a4:	68 e6       	ldi	r22, 0x68	; 104
    55a6:	79 eb       	ldi	r23, 0xB9	; 185
    55a8:	85 e6       	ldi	r24, 0x65	; 101
    55aa:	9f e2       	ldi	r25, 0x2F	; 47
    55ac:	70 d9       	rcall	.-3360   	; 0x488e <String::String(char const*)>
    55ae:	69 e6       	ldi	r22, 0x69	; 105
    55b0:	79 eb       	ldi	r23, 0xB9	; 185
    55b2:	8b e6       	ldi	r24, 0x6B	; 107
    55b4:	9f e2       	ldi	r25, 0x2F	; 47
    55b6:	6b d9       	rcall	.-3370   	; 0x488e <String::String(char const*)>
    55b8:	69 e6       	ldi	r22, 0x69	; 105
    55ba:	79 eb       	ldi	r23, 0xB9	; 185
    55bc:	81 e7       	ldi	r24, 0x71	; 113
    55be:	9f e2       	ldi	r25, 0x2F	; 47
    55c0:	66 d9       	rcall	.-3380   	; 0x488e <String::String(char const*)>
    55c2:	6b e1       	ldi	r22, 0x1B	; 27
    55c4:	7a eb       	ldi	r23, 0xBA	; 186
    55c6:	83 ef       	ldi	r24, 0xF3	; 243
    55c8:	9e e2       	ldi	r25, 0x2E	; 46
    55ca:	61 d9       	rcall	.-3390   	; 0x488e <String::String(char const*)>
    55cc:	63 e2       	ldi	r22, 0x23	; 35
    55ce:	7a eb       	ldi	r23, 0xBA	; 186
    55d0:	89 ef       	ldi	r24, 0xF9	; 249
    55d2:	9e e2       	ldi	r25, 0x2E	; 46
    55d4:	5c d9       	rcall	.-3400   	; 0x488e <String::String(char const*)>
    55d6:	6d e2       	ldi	r22, 0x2D	; 45
    55d8:	7a eb       	ldi	r23, 0xBA	; 186
    55da:	8f ef       	ldi	r24, 0xFF	; 255
    55dc:	9e e2       	ldi	r25, 0x2E	; 46
    55de:	57 d9       	rcall	.-3410   	; 0x488e <String::String(char const*)>
    55e0:	65 e3       	ldi	r22, 0x35	; 53
    55e2:	7a eb       	ldi	r23, 0xBA	; 186
    55e4:	85 e0       	ldi	r24, 0x05	; 5
    55e6:	9f e2       	ldi	r25, 0x2F	; 47
    55e8:	52 d9       	rcall	.-3420   	; 0x488e <String::String(char const*)>
    55ea:	6e e3       	ldi	r22, 0x3E	; 62
    55ec:	7a eb       	ldi	r23, 0xBA	; 186
    55ee:	8b e0       	ldi	r24, 0x0B	; 11
    55f0:	9f e2       	ldi	r25, 0x2F	; 47
    55f2:	4d d9       	rcall	.-3430   	; 0x488e <String::String(char const*)>
    55f4:	69 e4       	ldi	r22, 0x49	; 73
    55f6:	7a eb       	ldi	r23, 0xBA	; 186
    55f8:	81 e1       	ldi	r24, 0x11	; 17
    55fa:	9f e2       	ldi	r25, 0x2F	; 47
    55fc:	48 d9       	rcall	.-3440   	; 0x488e <String::String(char const*)>
    55fe:	65 e5       	ldi	r22, 0x55	; 85
    5600:	7a eb       	ldi	r23, 0xBA	; 186
    5602:	87 e1       	ldi	r24, 0x17	; 23
    5604:	9f e2       	ldi	r25, 0x2F	; 47
    5606:	43 d9       	rcall	.-3450   	; 0x488e <String::String(char const*)>
    5608:	6e e5       	ldi	r22, 0x5E	; 94
    560a:	7a eb       	ldi	r23, 0xBA	; 186
    560c:	8d e1       	ldi	r24, 0x1D	; 29
    560e:	9f e2       	ldi	r25, 0x2F	; 47
    5610:	3e d9       	rcall	.-3460   	; 0x488e <String::String(char const*)>
    5612:	68 e6       	ldi	r22, 0x68	; 104
    5614:	7a eb       	ldi	r23, 0xBA	; 186
    5616:	83 e2       	ldi	r24, 0x23	; 35
    5618:	9f e2       	ldi	r25, 0x2F	; 47
    561a:	39 d9       	rcall	.-3470   	; 0x488e <String::String(char const*)>
    561c:	64 e7       	ldi	r22, 0x74	; 116
    561e:	7a eb       	ldi	r23, 0xBA	; 186
    5620:	89 e2       	ldi	r24, 0x29	; 41
    5622:	9f e2       	ldi	r25, 0x2F	; 47
    5624:	34 d9       	rcall	.-3480   	; 0x488e <String::String(char const*)>
    5626:	68 e6       	ldi	r22, 0x68	; 104
    5628:	79 eb       	ldi	r23, 0xB9	; 185
    562a:	8f e2       	ldi	r24, 0x2F	; 47
    562c:	9f e2       	ldi	r25, 0x2F	; 47
    562e:	2f d9       	rcall	.-3490   	; 0x488e <String::String(char const*)>
    5630:	69 e6       	ldi	r22, 0x69	; 105
    5632:	79 eb       	ldi	r23, 0xB9	; 185
    5634:	85 e3       	ldi	r24, 0x35	; 53
    5636:	9f e2       	ldi	r25, 0x2F	; 47
    5638:	2a d9       	rcall	.-3500   	; 0x488e <String::String(char const*)>
    563a:	69 e6       	ldi	r22, 0x69	; 105
    563c:	79 eb       	ldi	r23, 0xB9	; 185
    563e:	8b e3       	ldi	r24, 0x3B	; 59
    5640:	9f e2       	ldi	r25, 0x2F	; 47
    5642:	25 d9       	rcall	.-3510   	; 0x488e <String::String(char const*)>
    5644:	69 e6       	ldi	r22, 0x69	; 105
    5646:	79 eb       	ldi	r23, 0xB9	; 185
    5648:	81 e4       	ldi	r24, 0x41	; 65
    564a:	9f e2       	ldi	r25, 0x2F	; 47
    564c:	20 d9       	rcall	.-3520   	; 0x488e <String::String(char const*)>
    564e:	c0 93 e1 2e 	sts	0x2EE1, r28	; 0x802ee1 <animate+0x9>
    5652:	d0 93 e2 2e 	sts	0x2EE2, r29	; 0x802ee2 <animate+0xa>
    5656:	84 ef       	ldi	r24, 0xF4	; 244
    5658:	91 e0       	ldi	r25, 0x01	; 1
    565a:	a0 e0       	ldi	r26, 0x00	; 0
    565c:	b0 e0       	ldi	r27, 0x00	; 0
    565e:	80 93 d9 2e 	sts	0x2ED9, r24	; 0x802ed9 <animate+0x1>
    5662:	90 93 da 2e 	sts	0x2EDA, r25	; 0x802eda <animate+0x2>
    5666:	a0 93 db 2e 	sts	0x2EDB, r26	; 0x802edb <animate+0x3>
    566a:	b0 93 dc 2e 	sts	0x2EDC, r27	; 0x802edc <animate+0x4>
    566e:	10 92 dd 2e 	sts	0x2EDD, r1	; 0x802edd <animate+0x5>
    5672:	10 92 de 2e 	sts	0x2EDE, r1	; 0x802ede <animate+0x6>
    5676:	10 92 df 2e 	sts	0x2EDF, r1	; 0x802edf <animate+0x7>
    567a:	10 92 e0 2e 	sts	0x2EE0, r1	; 0x802ee0 <animate+0x8>
    567e:	23 e9       	ldi	r18, 0x93	; 147
    5680:	3f e1       	ldi	r19, 0x1F	; 31
    5682:	20 93 e9 2e 	sts	0x2EE9, r18	; 0x802ee9 <animate+0x11>
    5686:	30 93 ea 2e 	sts	0x2EEA, r19	; 0x802eea <animate+0x12>
    568a:	10 92 d8 2e 	sts	0x2ED8, r1	; 0x802ed8 <animate>
    568e:	10 92 eb 2e 	sts	0x2EEB, r1	; 0x802eeb <animate+0x13>
    5692:	10 92 ec 2e 	sts	0x2EEC, r1	; 0x802eec <animate+0x14>
    5696:	10 92 ed 2e 	sts	0x2EED, r1	; 0x802eed <animate+0x15>
    569a:	10 92 ee 2e 	sts	0x2EEE, r1	; 0x802eee <animate+0x16>
    569e:	10 92 e3 2e 	sts	0x2EE3, r1	; 0x802ee3 <animate+0xb>
    56a2:	10 92 e4 2e 	sts	0x2EE4, r1	; 0x802ee4 <animate+0xc>
    56a6:	10 92 e5 2e 	sts	0x2EE5, r1	; 0x802ee5 <animate+0xd>
    56aa:	10 92 e6 2e 	sts	0x2EE6, r1	; 0x802ee6 <animate+0xe>
    56ae:	22 e0       	ldi	r18, 0x02	; 2
    56b0:	30 e0       	ldi	r19, 0x00	; 0
    56b2:	20 93 c6 2e 	sts	0x2EC6, r18	; 0x802ec6 <motor+0x9>
    56b6:	30 93 c7 2e 	sts	0x2EC7, r19	; 0x802ec7 <motor+0xa>
    56ba:	48 ee       	ldi	r20, 0xE8	; 232
    56bc:	53 e0       	ldi	r21, 0x03	; 3
    56be:	60 e0       	ldi	r22, 0x00	; 0
    56c0:	70 e0       	ldi	r23, 0x00	; 0
    56c2:	40 93 be 2e 	sts	0x2EBE, r20	; 0x802ebe <motor+0x1>
    56c6:	50 93 bf 2e 	sts	0x2EBF, r21	; 0x802ebf <motor+0x2>
    56ca:	60 93 c0 2e 	sts	0x2EC0, r22	; 0x802ec0 <motor+0x3>
    56ce:	70 93 c1 2e 	sts	0x2EC1, r23	; 0x802ec1 <motor+0x4>
    56d2:	10 92 c2 2e 	sts	0x2EC2, r1	; 0x802ec2 <motor+0x5>
    56d6:	10 92 c3 2e 	sts	0x2EC3, r1	; 0x802ec3 <motor+0x6>
    56da:	10 92 c4 2e 	sts	0x2EC4, r1	; 0x802ec4 <motor+0x7>
    56de:	10 92 c5 2e 	sts	0x2EC5, r1	; 0x802ec5 <motor+0x8>
    56e2:	23 e7       	ldi	r18, 0x73	; 115
    56e4:	3f e1       	ldi	r19, 0x1F	; 31
    56e6:	20 93 ce 2e 	sts	0x2ECE, r18	; 0x802ece <motor+0x11>
    56ea:	30 93 cf 2e 	sts	0x2ECF, r19	; 0x802ecf <motor+0x12>
    56ee:	10 92 bd 2e 	sts	0x2EBD, r1	; 0x802ebd <motor>
    56f2:	10 92 d0 2e 	sts	0x2ED0, r1	; 0x802ed0 <motor+0x13>
    56f6:	10 92 d1 2e 	sts	0x2ED1, r1	; 0x802ed1 <motor+0x14>
    56fa:	10 92 d2 2e 	sts	0x2ED2, r1	; 0x802ed2 <motor+0x15>
    56fe:	10 92 d3 2e 	sts	0x2ED3, r1	; 0x802ed3 <motor+0x16>
    5702:	10 92 c8 2e 	sts	0x2EC8, r1	; 0x802ec8 <motor+0xb>
    5706:	10 92 c9 2e 	sts	0x2EC9, r1	; 0x802ec9 <motor+0xc>
    570a:	10 92 ca 2e 	sts	0x2ECA, r1	; 0x802eca <motor+0xd>
    570e:	10 92 cb 2e 	sts	0x2ECB, r1	; 0x802ecb <motor+0xe>
    5712:	c0 93 ab 2e 	sts	0x2EAB, r28	; 0x802eab <buzz+0x9>
    5716:	d0 93 ac 2e 	sts	0x2EAC, r29	; 0x802eac <buzz+0xa>
    571a:	80 93 a3 2e 	sts	0x2EA3, r24	; 0x802ea3 <buzz+0x1>
    571e:	90 93 a4 2e 	sts	0x2EA4, r25	; 0x802ea4 <buzz+0x2>
    5722:	a0 93 a5 2e 	sts	0x2EA5, r26	; 0x802ea5 <buzz+0x3>
    5726:	b0 93 a6 2e 	sts	0x2EA6, r27	; 0x802ea6 <buzz+0x4>
    572a:	10 92 a7 2e 	sts	0x2EA7, r1	; 0x802ea7 <buzz+0x5>
    572e:	10 92 a8 2e 	sts	0x2EA8, r1	; 0x802ea8 <buzz+0x6>
    5732:	10 92 a9 2e 	sts	0x2EA9, r1	; 0x802ea9 <buzz+0x7>
    5736:	10 92 aa 2e 	sts	0x2EAA, r1	; 0x802eaa <buzz+0x8>
    573a:	8f e1       	ldi	r24, 0x1F	; 31
    573c:	9f e1       	ldi	r25, 0x1F	; 31
    573e:	80 93 b3 2e 	sts	0x2EB3, r24	; 0x802eb3 <buzz+0x11>
    5742:	90 93 b4 2e 	sts	0x2EB4, r25	; 0x802eb4 <buzz+0x12>
    5746:	10 92 a2 2e 	sts	0x2EA2, r1	; 0x802ea2 <buzz>
    574a:	10 92 b5 2e 	sts	0x2EB5, r1	; 0x802eb5 <buzz+0x13>
    574e:	10 92 b6 2e 	sts	0x2EB6, r1	; 0x802eb6 <buzz+0x14>
    5752:	10 92 b7 2e 	sts	0x2EB7, r1	; 0x802eb7 <buzz+0x15>
    5756:	10 92 b8 2e 	sts	0x2EB8, r1	; 0x802eb8 <buzz+0x16>
    575a:	10 92 ad 2e 	sts	0x2EAD, r1	; 0x802ead <buzz+0xb>
    575e:	10 92 ae 2e 	sts	0x2EAE, r1	; 0x802eae <buzz+0xc>
    5762:	10 92 af 2e 	sts	0x2EAF, r1	; 0x802eaf <buzz+0xd>
    5766:	10 92 b0 2e 	sts	0x2EB0, r1	; 0x802eb0 <buzz+0xe>
    576a:	10 92 90 2e 	sts	0x2E90, r1	; 0x802e90 <Time_update+0x9>
    576e:	10 92 91 2e 	sts	0x2E91, r1	; 0x802e91 <Time_update+0xa>
    5772:	10 92 88 2e 	sts	0x2E88, r1	; 0x802e88 <Time_update+0x1>
    5776:	10 92 89 2e 	sts	0x2E89, r1	; 0x802e89 <Time_update+0x2>
    577a:	10 92 8a 2e 	sts	0x2E8A, r1	; 0x802e8a <Time_update+0x3>
    577e:	10 92 8b 2e 	sts	0x2E8B, r1	; 0x802e8b <Time_update+0x4>
    5782:	10 92 8c 2e 	sts	0x2E8C, r1	; 0x802e8c <Time_update+0x5>
    5786:	10 92 8d 2e 	sts	0x2E8D, r1	; 0x802e8d <Time_update+0x6>
    578a:	10 92 8e 2e 	sts	0x2E8E, r1	; 0x802e8e <Time_update+0x7>
    578e:	10 92 8f 2e 	sts	0x2E8F, r1	; 0x802e8f <Time_update+0x8>
    5792:	87 eb       	ldi	r24, 0xB7	; 183
    5794:	94 e2       	ldi	r25, 0x24	; 36
    5796:	80 93 98 2e 	sts	0x2E98, r24	; 0x802e98 <Time_update+0x11>
    579a:	90 93 99 2e 	sts	0x2E99, r25	; 0x802e99 <Time_update+0x12>
    579e:	10 92 87 2e 	sts	0x2E87, r1	; 0x802e87 <Time_update>
    57a2:	10 92 9a 2e 	sts	0x2E9A, r1	; 0x802e9a <Time_update+0x13>
    57a6:	10 92 9b 2e 	sts	0x2E9B, r1	; 0x802e9b <Time_update+0x14>
    57aa:	10 92 9c 2e 	sts	0x2E9C, r1	; 0x802e9c <Time_update+0x15>
    57ae:	10 92 9d 2e 	sts	0x2E9D, r1	; 0x802e9d <Time_update+0x16>
    57b2:	10 92 92 2e 	sts	0x2E92, r1	; 0x802e92 <Time_update+0xb>
    57b6:	10 92 93 2e 	sts	0x2E93, r1	; 0x802e93 <Time_update+0xc>
    57ba:	10 92 94 2e 	sts	0x2E94, r1	; 0x802e94 <Time_update+0xd>
    57be:	10 92 95 2e 	sts	0x2E95, r1	; 0x802e95 <Time_update+0xe>
    57c2:	10 92 75 2e 	sts	0x2E75, r1	; 0x802e75 <PrintData+0x9>
    57c6:	10 92 76 2e 	sts	0x2E76, r1	; 0x802e76 <PrintData+0xa>
    57ca:	10 92 6d 2e 	sts	0x2E6D, r1	; 0x802e6d <PrintData+0x1>
    57ce:	10 92 6e 2e 	sts	0x2E6E, r1	; 0x802e6e <PrintData+0x2>
    57d2:	10 92 6f 2e 	sts	0x2E6F, r1	; 0x802e6f <PrintData+0x3>
    57d6:	10 92 70 2e 	sts	0x2E70, r1	; 0x802e70 <PrintData+0x4>
    57da:	10 92 71 2e 	sts	0x2E71, r1	; 0x802e71 <PrintData+0x5>
    57de:	10 92 72 2e 	sts	0x2E72, r1	; 0x802e72 <PrintData+0x6>
    57e2:	10 92 73 2e 	sts	0x2E73, r1	; 0x802e73 <PrintData+0x7>
    57e6:	10 92 74 2e 	sts	0x2E74, r1	; 0x802e74 <PrintData+0x8>
    57ea:	8a ea       	ldi	r24, 0xAA	; 170
    57ec:	92 e2       	ldi	r25, 0x22	; 34
    57ee:	80 93 7d 2e 	sts	0x2E7D, r24	; 0x802e7d <PrintData+0x11>
    57f2:	90 93 7e 2e 	sts	0x2E7E, r25	; 0x802e7e <PrintData+0x12>
    57f6:	10 92 6c 2e 	sts	0x2E6C, r1	; 0x802e6c <PrintData>
    57fa:	10 92 7f 2e 	sts	0x2E7F, r1	; 0x802e7f <PrintData+0x13>
    57fe:	10 92 80 2e 	sts	0x2E80, r1	; 0x802e80 <PrintData+0x14>
    5802:	10 92 81 2e 	sts	0x2E81, r1	; 0x802e81 <PrintData+0x15>
    5806:	10 92 82 2e 	sts	0x2E82, r1	; 0x802e82 <PrintData+0x16>
    580a:	10 92 77 2e 	sts	0x2E77, r1	; 0x802e77 <PrintData+0xb>
    580e:	10 92 78 2e 	sts	0x2E78, r1	; 0x802e78 <PrintData+0xc>
    5812:	10 92 79 2e 	sts	0x2E79, r1	; 0x802e79 <PrintData+0xd>
    5816:	10 92 7a 2e 	sts	0x2E7A, r1	; 0x802e7a <PrintData+0xe>
    581a:	6b e1       	ldi	r22, 0x1B	; 27
    581c:	79 eb       	ldi	r23, 0xB9	; 185
    581e:	86 e6       	ldi	r24, 0x66	; 102
    5820:	9e e2       	ldi	r25, 0x2E	; 46
    5822:	df 91       	pop	r29
    5824:	cf 91       	pop	r28
    5826:	33 c8       	rjmp	.-3994   	; 0x488e <String::String(char const*)>

00005828 <main>:
main():
    5828:	cf 93       	push	r28
    582a:	df 93       	push	r29
    582c:	cd b7       	in	r28, 0x3d	; 61
    582e:	de b7       	in	r29, 0x3e	; 62
    5830:	2d 97       	sbiw	r28, 0x0d	; 13
    5832:	cd bf       	out	0x3d, r28	; 61
    5834:	de bf       	out	0x3e, r29	; 62
init():
    5836:	88 ed       	ldi	r24, 0xD8	; 216
    5838:	90 e0       	ldi	r25, 0x00	; 0
    583a:	84 bf       	out	0x34, r24	; 52
    583c:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__TEXT_REGION_LENGTH__+0x7f4061>
    5840:	80 91 02 06 	lds	r24, 0x0602	; 0x800602 <__TEXT_REGION_LENGTH__+0x7f4602>
    5844:	86 60       	ori	r24, 0x06	; 6
    5846:	80 93 02 06 	sts	0x0602, r24	; 0x800602 <__TEXT_REGION_LENGTH__+0x7f4602>
    584a:	80 91 00 06 	lds	r24, 0x0600	; 0x800600 <__TEXT_REGION_LENGTH__+0x7f4600>
    584e:	81 60       	ori	r24, 0x01	; 1
    5850:	80 93 00 06 	sts	0x0600, r24	; 0x800600 <__TEXT_REGION_LENGTH__+0x7f4600>
analogReference():
    5854:	80 91 02 06 	lds	r24, 0x0602	; 0x800602 <__TEXT_REGION_LENGTH__+0x7f4602>
    5858:	8f 7c       	andi	r24, 0xCF	; 207
    585a:	80 65       	ori	r24, 0x50	; 80
    585c:	80 93 02 06 	sts	0x0602, r24	; 0x800602 <__TEXT_REGION_LENGTH__+0x7f4602>
init():
    5860:	10 92 e2 05 	sts	0x05E2, r1	; 0x8005e2 <__TEXT_REGION_LENGTH__+0x7f45e2>
setup_timers():
    5864:	83 e0       	ldi	r24, 0x03	; 3
    5866:	80 93 e4 05 	sts	0x05E4, r24	; 0x8005e4 <__TEXT_REGION_LENGTH__+0x7f45e4>
    586a:	81 e0       	ldi	r24, 0x01	; 1
    586c:	80 93 03 0a 	sts	0x0A03, r24	; 0x800a03 <__TEXT_REGION_LENGTH__+0x7f4a03>
    5870:	9e ef       	ldi	r25, 0xFE	; 254
    5872:	90 93 27 0a 	sts	0x0A27, r25	; 0x800a27 <__TEXT_REGION_LENGTH__+0x7f4a27>
    5876:	90 93 26 0a 	sts	0x0A26, r25	; 0x800a26 <__TEXT_REGION_LENGTH__+0x7f4a26>
    587a:	80 e8       	ldi	r24, 0x80	; 128
    587c:	80 93 2d 0a 	sts	0x0A2D, r24	; 0x800a2d <__TEXT_REGION_LENGTH__+0x7f4a2d>
    5880:	80 93 2b 0a 	sts	0x0A2B, r24	; 0x800a2b <__TEXT_REGION_LENGTH__+0x7f4a2b>
    5884:	80 93 29 0a 	sts	0x0A29, r24	; 0x800a29 <__TEXT_REGION_LENGTH__+0x7f4a29>
    5888:	80 93 2c 0a 	sts	0x0A2C, r24	; 0x800a2c <__TEXT_REGION_LENGTH__+0x7f4a2c>
    588c:	80 93 2a 0a 	sts	0x0A2A, r24	; 0x800a2a <__TEXT_REGION_LENGTH__+0x7f4a2a>
    5890:	80 93 28 0a 	sts	0x0A28, r24	; 0x800a28 <__TEXT_REGION_LENGTH__+0x7f4a28>
    5894:	2b e0       	ldi	r18, 0x0B	; 11
    5896:	20 93 00 0a 	sts	0x0A00, r18	; 0x800a00 <__TEXT_REGION_LENGTH__+0x7f4a00>
    589a:	10 92 e5 05 	sts	0x05E5, r1	; 0x8005e5 <__TEXT_REGION_LENGTH__+0x7f45e5>
    589e:	37 e0       	ldi	r19, 0x07	; 7
    58a0:	30 93 81 0a 	sts	0x0A81, r19	; 0x800a81 <__TEXT_REGION_LENGTH__+0x7f4a81>
    58a4:	90 93 8c 0a 	sts	0x0A8C, r25	; 0x800a8c <__TEXT_REGION_LENGTH__+0x7f4a8c>
    58a8:	80 93 8d 0a 	sts	0x0A8D, r24	; 0x800a8d <__TEXT_REGION_LENGTH__+0x7f4a8d>
    58ac:	25 e0       	ldi	r18, 0x05	; 5
    58ae:	20 93 80 0a 	sts	0x0A80, r18	; 0x800a80 <__TEXT_REGION_LENGTH__+0x7f4a80>
    58b2:	30 93 91 0a 	sts	0x0A91, r19	; 0x800a91 <__TEXT_REGION_LENGTH__+0x7f4a91>
    58b6:	90 93 9c 0a 	sts	0x0A9C, r25	; 0x800a9c <__TEXT_REGION_LENGTH__+0x7f4a9c>
    58ba:	80 93 9d 0a 	sts	0x0A9D, r24	; 0x800a9d <__TEXT_REGION_LENGTH__+0x7f4a9d>
    58be:	20 93 90 0a 	sts	0x0A90, r18	; 0x800a90 <__TEXT_REGION_LENGTH__+0x7f4a90>
    58c2:	30 93 a1 0a 	sts	0x0AA1, r19	; 0x800aa1 <__TEXT_REGION_LENGTH__+0x7f4aa1>
    58c6:	90 93 ac 0a 	sts	0x0AAC, r25	; 0x800aac <__TEXT_REGION_LENGTH__+0x7f4aac>
    58ca:	80 93 ad 0a 	sts	0x0AAD, r24	; 0x800aad <__TEXT_REGION_LENGTH__+0x7f4aad>
    58ce:	20 93 a0 0a 	sts	0x0AA0, r18	; 0x800aa0 <__TEXT_REGION_LENGTH__+0x7f4aa0>
init():
    58d2:	10 92 a1 0a 	sts	0x0AA1, r1	; 0x800aa1 <__TEXT_REGION_LENGTH__+0x7f4aa1>
    58d6:	8f e7       	ldi	r24, 0x7F	; 127
    58d8:	9e e3       	ldi	r25, 0x3E	; 62
    58da:	80 93 ac 0a 	sts	0x0AAC, r24	; 0x800aac <__TEXT_REGION_LENGTH__+0x7f4aac>
    58de:	90 93 ad 0a 	sts	0x0AAD, r25	; 0x800aad <__TEXT_REGION_LENGTH__+0x7f4aad>
    58e2:	80 91 a5 0a 	lds	r24, 0x0AA5	; 0x800aa5 <__TEXT_REGION_LENGTH__+0x7f4aa5>
    58e6:	81 60       	ori	r24, 0x01	; 1
    58e8:	80 93 a5 0a 	sts	0x0AA5, r24	; 0x800aa5 <__TEXT_REGION_LENGTH__+0x7f4aa5>
    58ec:	10 92 a0 0a 	sts	0x0AA0, r1	; 0x800aa0 <__TEXT_REGION_LENGTH__+0x7f4aa0>
    58f0:	80 91 a0 0a 	lds	r24, 0x0AA0	; 0x800aa0 <__TEXT_REGION_LENGTH__+0x7f4aa0>
    58f4:	81 60       	ori	r24, 0x01	; 1
    58f6:	80 93 a0 0a 	sts	0x0AA0, r24	; 0x800aa0 <__TEXT_REGION_LENGTH__+0x7f4aa0>
    58fa:	78 94       	sei
setup():
    58fc:	41 e0       	ldi	r20, 0x01	; 1
    58fe:	60 e0       	ldi	r22, 0x00	; 0
    5900:	8b eb       	ldi	r24, 0xBB	; 187
    5902:	99 e2       	ldi	r25, 0x29	; 41
    5904:	0e 94 8d 11 	call	0x231a	; 0x231a <UartClass::pins(unsigned char, unsigned char)>
begin():
    5908:	8d e9       	ldi	r24, 0x9D	; 157
    590a:	91 e0       	ldi	r25, 0x01	; 1
    590c:	80 93 eb 2f 	sts	0x2FEB, r24	; 0x802feb <mySerial+0x1c>
    5910:	90 93 ec 2f 	sts	0x2FEC, r25	; 0x802fec <mySerial+0x1d>
    5914:	8d eb       	ldi	r24, 0xBD	; 189
    5916:	90 e0       	ldi	r25, 0x00	; 0
    5918:	80 93 e5 2f 	sts	0x2FE5, r24	; 0x802fe5 <mySerial+0x16>
    591c:	90 93 e6 2f 	sts	0x2FE6, r25	; 0x802fe6 <mySerial+0x17>
    5920:	8b e9       	ldi	r24, 0x9B	; 155
    5922:	91 e0       	ldi	r25, 0x01	; 1
    5924:	80 93 e7 2f 	sts	0x2FE7, r24	; 0x802fe7 <mySerial+0x18>
    5928:	90 93 e8 2f 	sts	0x2FE8, r25	; 0x802fe8 <mySerial+0x19>
    592c:	8c e2       	ldi	r24, 0x2C	; 44
    592e:	91 e0       	ldi	r25, 0x01	; 1
    5930:	80 93 e9 2f 	sts	0x2FE9, r24	; 0x802fe9 <mySerial+0x1a>
    5934:	90 93 ea 2f 	sts	0x2FEA, r25	; 0x802fea <mySerial+0x1b>
    5938:	80 91 db 2f 	lds	r24, 0x2FDB	; 0x802fdb <mySerial+0xc>
attachInterrupt():
    593c:	8b 31       	cpi	r24, 0x1B	; 27
    593e:	28 f4       	brcc	.+10     	; 0x594a <main+0x122>
    5940:	44 e0       	ldi	r20, 0x04	; 4
    5942:	65 ea       	ldi	r22, 0xA5	; 165
    5944:	7f e0       	ldi	r23, 0x0F	; 15
    5946:	0e 94 3a 10 	call	0x2074	; 0x2074 <attachInterrupt.part.0>
_delay_loop_2():
    594a:	80 91 eb 2f 	lds	r24, 0x2FEB	; 0x802feb <mySerial+0x1c>
    594e:	90 91 ec 2f 	lds	r25, 0x2FEC	; 0x802fec <mySerial+0x1d>
    5952:	01 97       	sbiw	r24, 0x01	; 1
    5954:	f1 f7       	brne	.-4      	; 0x5952 <main+0x12a>
listen():
    5956:	80 91 e9 2f 	lds	r24, 0x2FE9	; 0x802fe9 <mySerial+0x1a>
    595a:	90 91 ea 2f 	lds	r25, 0x2FEA	; 0x802fea <mySerial+0x1b>
    595e:	89 2b       	or	r24, r25
    5960:	49 f1       	breq	.+82     	; 0x59b4 <main+0x18c>
    5962:	e0 91 7e 29 	lds	r30, 0x297E	; 0x80297e <SoftwareSerial::active_object>
    5966:	f0 91 7f 29 	lds	r31, 0x297F	; 0x80297f <SoftwareSerial::active_object+0x1>
    596a:	2f e2       	ldi	r18, 0x2F	; 47
    596c:	ef 3c       	cpi	r30, 0xCF	; 207
    596e:	f2 07       	cpc	r31, r18
    5970:	09 f1       	breq	.+66     	; 0x59b4 <main+0x18c>
    5972:	30 97       	sbiw	r30, 0x00	; 0
    5974:	39 f0       	breq	.+14     	; 0x5984 <main+0x15c>
_ZN14SoftwareSerial11setRxIntMskEb():
    5976:	a3 89       	ldd	r26, Z+19	; 0x13
    5978:	b4 89       	ldd	r27, Z+20	; 0x14
    597a:	9c 91       	ld	r25, X
    597c:	85 89       	ldd	r24, Z+21	; 0x15
    597e:	80 95       	com	r24
    5980:	89 23       	and	r24, r25
    5982:	8c 93       	st	X, r24
listen():
    5984:	80 91 ed 2f 	lds	r24, 0x2FED	; 0x802fed <mySerial+0x1e>
    5988:	8e 7f       	andi	r24, 0xFE	; 254
    598a:	80 93 ed 2f 	sts	0x2FED, r24	; 0x802fed <mySerial+0x1e>
    598e:	10 92 7d 29 	sts	0x297D, r1	; 0x80297d <SoftwareSerial::_receive_buffer_tail>
    5992:	10 92 7c 29 	sts	0x297C, r1	; 0x80297c <SoftwareSerial::_receive_buffer_head>
    5996:	8f ec       	ldi	r24, 0xCF	; 207
    5998:	9f e2       	ldi	r25, 0x2F	; 47
    599a:	80 93 7e 29 	sts	0x297E, r24	; 0x80297e <SoftwareSerial::active_object>
    599e:	90 93 7f 29 	sts	0x297F, r25	; 0x80297f <SoftwareSerial::active_object+0x1>
_ZN14SoftwareSerial11setRxIntMskEb():
    59a2:	e0 91 e2 2f 	lds	r30, 0x2FE2	; 0x802fe2 <mySerial+0x13>
    59a6:	f0 91 e3 2f 	lds	r31, 0x2FE3	; 0x802fe3 <mySerial+0x14>
    59aa:	80 81       	ld	r24, Z
    59ac:	90 91 e4 2f 	lds	r25, 0x2FE4	; 0x802fe4 <mySerial+0x15>
    59b0:	89 2b       	or	r24, r25
    59b2:	80 83       	st	Z, r24
setup():
    59b4:	40 e8       	ldi	r20, 0x80	; 128
    59b6:	55 e2       	ldi	r21, 0x25	; 37
    59b8:	60 e0       	ldi	r22, 0x00	; 0
    59ba:	70 e0       	ldi	r23, 0x00	; 0
    59bc:	8b eb       	ldi	r24, 0xBB	; 187
    59be:	99 e2       	ldi	r25, 0x29	; 41
    59c0:	0e 94 d9 21 	call	0x43b2	; 0x43b2 <UartClass::begin(unsigned long)>
u8x8_InitDisplay():
    59c4:	e0 91 f6 2f 	lds	r30, 0x2FF6	; 0x802ff6 <u8g2+0x8>
    59c8:	f0 91 f7 2f 	lds	r31, 0x2FF7	; 0x802ff7 <u8g2+0x9>
    59cc:	30 e0       	ldi	r19, 0x00	; 0
    59ce:	20 e0       	ldi	r18, 0x00	; 0
    59d0:	40 e0       	ldi	r20, 0x00	; 0
    59d2:	6a e0       	ldi	r22, 0x0A	; 10
    59d4:	82 ef       	ldi	r24, 0xF2	; 242
    59d6:	9f e2       	ldi	r25, 0x2F	; 47
    59d8:	09 95       	icall
_ZN4U8G212clearDisplayEv():
    59da:	82 ef       	ldi	r24, 0xF2	; 242
    59dc:	9f e2       	ldi	r25, 0x2F	; 47
    59de:	0a d9       	rcall	.-3564   	; 0x4bf4 <u8g2_ClearDisplay>
u8x8_SetPowerSave():
    59e0:	e0 91 f6 2f 	lds	r30, 0x2FF6	; 0x802ff6 <u8g2+0x8>
    59e4:	f0 91 f7 2f 	lds	r31, 0x2FF7	; 0x802ff7 <u8g2+0x9>
    59e8:	30 e0       	ldi	r19, 0x00	; 0
    59ea:	20 e0       	ldi	r18, 0x00	; 0
    59ec:	40 e0       	ldi	r20, 0x00	; 0
    59ee:	6b e0       	ldi	r22, 0x0B	; 11
    59f0:	82 ef       	ldi	r24, 0xF2	; 242
    59f2:	9f e2       	ldi	r25, 0x2F	; 47
    59f4:	09 95       	icall
begin():
    59f6:	10 92 88 29 	sts	0x2988, r1	; 0x802988 <TwoWire::rxBufferIndex>
    59fa:	10 92 87 29 	sts	0x2987, r1	; 0x802987 <TwoWire::rxBufferLength>
    59fe:	10 92 86 29 	sts	0x2986, r1	; 0x802986 <TwoWire::txBufferIndex>
    5a02:	10 92 85 29 	sts	0x2985, r1	; 0x802985 <TwoWire::txBufferLength>
TWI_MasterInit():
    5a06:	80 91 84 29 	lds	r24, 0x2984	; 0x802984 <twi_mode>
    5a0a:	81 11       	cpse	r24, r1
    5a0c:	20 c0       	rjmp	.+64     	; 0x5a4e <main+0x226>
    5a0e:	80 91 e3 05 	lds	r24, 0x05E3	; 0x8005e3 <__TEXT_REGION_LENGTH__+0x7f45e3>
    5a12:	80 73       	andi	r24, 0x30	; 48
    5a14:	09 f0       	breq	.+2      	; 0x5a18 <main+0x1f0>
    5a16:	2a c1       	rjmp	.+596    	; 0x5c6c <main+0x444>
pinMode():
    5a18:	62 e0       	ldi	r22, 0x02	; 2
    5a1a:	82 e0       	ldi	r24, 0x02	; 2
    5a1c:	0e 94 6a 0e 	call	0x1cd4	; 0x1cd4 <pinMode.part.1>
    5a20:	62 e0       	ldi	r22, 0x02	; 2
    5a22:	83 e0       	ldi	r24, 0x03	; 3
    5a24:	0e 94 6a 0e 	call	0x1cd4	; 0x1cd4 <pinMode.part.1>
TWI_MasterInit():
    5a28:	81 e0       	ldi	r24, 0x01	; 1
    5a2a:	80 93 84 29 	sts	0x2984, r24	; 0x802984 <twi_mode>
    5a2e:	10 92 83 29 	sts	0x2983, r1	; 0x802983 <master_bytesRead>
    5a32:	10 92 82 29 	sts	0x2982, r1	; 0x802982 <master_bytesWritten>
    5a36:	10 92 81 29 	sts	0x2981, r1	; 0x802981 <master_trans_status>
    5a3a:	10 92 80 29 	sts	0x2980, r1	; 0x802980 <master_result>
    5a3e:	91 ec       	ldi	r25, 0xC1	; 193
    5a40:	90 93 a3 08 	sts	0x08A3, r25	; 0x8008a3 <__TEXT_REGION_LENGTH__+0x7f48a3>
TWI_MasterSetBaud():
    5a44:	93 e4       	ldi	r25, 0x43	; 67
    5a46:	90 93 a6 08 	sts	0x08A6, r25	; 0x8008a6 <__TEXT_REGION_LENGTH__+0x7f48a6>
TWI_MasterInit():
    5a4a:	80 93 a5 08 	sts	0x08A5, r24	; 0x8008a5 <__TEXT_REGION_LENGTH__+0x7f48a5>
setup():
    5a4e:	87 e8       	ldi	r24, 0x87	; 135
    5a50:	9e e2       	ldi	r25, 0x2E	; 46
    5a52:	0e 94 27 15 	call	0x2a4e	; 0x2a4e <Ticker::start()>
    5a56:	8c e6       	ldi	r24, 0x6C	; 108
    5a58:	9e e2       	ldi	r25, 0x2E	; 46
    5a5a:	0e 94 27 15 	call	0x2a4e	; 0x2a4e <Ticker::start()>
SETUP():
    5a5e:	62 e0       	ldi	r22, 0x02	; 2
    5a60:	88 e0       	ldi	r24, 0x08	; 8
    5a62:	0e 94 9e 0e 	call	0x1d3c	; 0x1d3c <pinMode>
    5a66:	62 e0       	ldi	r22, 0x02	; 2
    5a68:	89 e0       	ldi	r24, 0x09	; 9
    5a6a:	0e 94 9e 0e 	call	0x1d3c	; 0x1d3c <pinMode>
setup():
    5a6e:	62 e0       	ldi	r22, 0x02	; 2
    5a70:	8a e0       	ldi	r24, 0x0A	; 10
    5a72:	0e 94 9e 0e 	call	0x1d3c	; 0x1d3c <pinMode>
attachInterrupt():
    5a76:	43 e0       	ldi	r20, 0x03	; 3
    5a78:	61 e1       	ldi	r22, 0x11	; 17
    5a7a:	71 e2       	ldi	r23, 0x21	; 33
    5a7c:	88 e0       	ldi	r24, 0x08	; 8
    5a7e:	0e 94 3a 10 	call	0x2074	; 0x2074 <attachInterrupt.part.0>
    5a82:	43 e0       	ldi	r20, 0x03	; 3
    5a84:	69 ed       	ldi	r22, 0xD9	; 217
    5a86:	70 e2       	ldi	r23, 0x20	; 32
    5a88:	89 e0       	ldi	r24, 0x09	; 9
    5a8a:	0e 94 3a 10 	call	0x2074	; 0x2074 <attachInterrupt.part.0>
pinMode():
    5a8e:	61 e0       	ldi	r22, 0x01	; 1
    5a90:	82 e1       	ldi	r24, 0x12	; 18
    5a92:	0e 94 6a 0e 	call	0x1cd4	; 0x1cd4 <pinMode.part.1>
    5a96:	61 e0       	ldi	r22, 0x01	; 1
    5a98:	86 e1       	ldi	r24, 0x16	; 22
    5a9a:	0e 94 6a 0e 	call	0x1cd4	; 0x1cd4 <pinMode.part.1>
    5a9e:	61 e0       	ldi	r22, 0x01	; 1
    5aa0:	83 e1       	ldi	r24, 0x13	; 19
    5aa2:	0e 94 6a 0e 	call	0x1cd4	; 0x1cd4 <pinMode.part.1>
digitalWrite():
    5aa6:	60 e0       	ldi	r22, 0x00	; 0
    5aa8:	83 e1       	ldi	r24, 0x13	; 19
    5aaa:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <digitalWrite.part.2>
pinMode():
    5aae:	61 e0       	ldi	r22, 0x01	; 1
    5ab0:	8f e0       	ldi	r24, 0x0F	; 15
    5ab2:	0e 94 6a 0e 	call	0x1cd4	; 0x1cd4 <pinMode.part.1>
    5ab6:	61 e0       	ldi	r22, 0x01	; 1
    5ab8:	80 e1       	ldi	r24, 0x10	; 16
    5aba:	0e 94 6a 0e 	call	0x1cd4	; 0x1cd4 <pinMode.part.1>
    5abe:	61 e0       	ldi	r22, 0x01	; 1
    5ac0:	81 e1       	ldi	r24, 0x11	; 17
    5ac2:	0e 94 6a 0e 	call	0x1cd4	; 0x1cd4 <pinMode.part.1>
    5ac6:	61 e0       	ldi	r22, 0x01	; 1
    5ac8:	87 e1       	ldi	r24, 0x17	; 23
    5aca:	0e 94 6a 0e 	call	0x1cd4	; 0x1cd4 <pinMode.part.1>
digitalWrite():
    5ace:	61 e0       	ldi	r22, 0x01	; 1
    5ad0:	86 e1       	ldi	r24, 0x16	; 22
    5ad2:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <digitalWrite.part.2>
    5ad6:	60 e0       	ldi	r22, 0x00	; 0
    5ad8:	8f e0       	ldi	r24, 0x0F	; 15
    5ada:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <digitalWrite.part.2>
    5ade:	60 e0       	ldi	r22, 0x00	; 0
    5ae0:	80 e1       	ldi	r24, 0x10	; 16
    5ae2:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <digitalWrite.part.2>
    5ae6:	60 e0       	ldi	r22, 0x00	; 0
    5ae8:	81 e1       	ldi	r24, 0x11	; 17
    5aea:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <digitalWrite.part.2>
    5aee:	61 e0       	ldi	r22, 0x01	; 1
    5af0:	87 e1       	ldi	r24, 0x17	; 23
    5af2:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <digitalWrite.part.2>
attachClick():
    5af6:	8e e3       	ldi	r24, 0x3E	; 62
    5af8:	90 e2       	ldi	r25, 0x20	; 32
    5afa:	80 93 81 2f 	sts	0x2F81, r24	; 0x802f81 <button0+0xa>
    5afe:	90 93 82 2f 	sts	0x2F82, r25	; 0x802f82 <button0+0xb>
attachLongPressStart():
    5b02:	8f ea       	ldi	r24, 0xAF	; 175
    5b04:	9f e1       	ldi	r25, 0x1F	; 31
    5b06:	80 93 93 2f 	sts	0x2F93, r24	; 0x802f93 <button0+0x1c>
    5b0a:	90 93 94 2f 	sts	0x2F94, r25	; 0x802f94 <button0+0x1d>
attachDoubleClick():
    5b0e:	86 e8       	ldi	r24, 0x86	; 134
    5b10:	9f e0       	ldi	r25, 0x0F	; 15
    5b12:	80 93 87 2f 	sts	0x2F87, r24	; 0x802f87 <button0+0x10>
    5b16:	90 93 88 2f 	sts	0x2F88, r25	; 0x802f88 <button0+0x11>
    5b1a:	80 91 af 2f 	lds	r24, 0x2FAF	; 0x802faf <button0+0x38>
    5b1e:	90 91 b0 2f 	lds	r25, 0x2FB0	; 0x802fb0 <button0+0x39>
    5b22:	82 30       	cpi	r24, 0x02	; 2
    5b24:	91 05       	cpc	r25, r1
    5b26:	14 f4       	brge	.+4      	; 0x5b2c <main+0x304>
    5b28:	82 e0       	ldi	r24, 0x02	; 2
    5b2a:	90 e0       	ldi	r25, 0x00	; 0
    5b2c:	80 93 af 2f 	sts	0x2FAF, r24	; 0x802faf <button0+0x38>
    5b30:	90 93 b0 2f 	sts	0x2FB0, r25	; 0x802fb0 <button0+0x39>
attachInterrupt():
    5b34:	43 e0       	ldi	r20, 0x03	; 3
    5b36:	60 e1       	ldi	r22, 0x10	; 16
    5b38:	7f e1       	ldi	r23, 0x1F	; 31
    5b3a:	8c e0       	ldi	r24, 0x0C	; 12
    5b3c:	0e 94 3a 10 	call	0x2074	; 0x2074 <attachInterrupt.part.0>
digitalWrite():
    5b40:	61 e0       	ldi	r22, 0x01	; 1
    5b42:	83 e1       	ldi	r24, 0x13	; 19
    5b44:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <digitalWrite.part.2>
_ZN4U8G212clearDisplayEv():
    5b48:	82 ef       	ldi	r24, 0xF2	; 242
    5b4a:	9f e2       	ldi	r25, 0x2F	; 47
    5b4c:	53 d8       	rcall	.-3930   	; 0x4bf4 <u8g2_ClearDisplay>
_ZN4U8G211clearBufferEv():
    5b4e:	82 ef       	ldi	r24, 0xF2	; 242
    5b50:	9f e2       	ldi	r25, 0x2F	; 47
    5b52:	3b d8       	rcall	.-3978   	; 0x4bca <u8g2_ClearBuffer>
_ZN4U8G27setFontEPKh():
    5b54:	84 e6       	ldi	r24, 0x64	; 100
    5b56:	94 e0       	ldi	r25, 0x04	; 4
    5b58:	0e 94 20 1a 	call	0x3440	; 0x3440 <u8g2_SetFont.constprop.86>
setup():
    5b5c:	4d e7       	ldi	r20, 0x7D	; 125
    5b5e:	5a eb       	ldi	r21, 0xBA	; 186
    5b60:	6e e1       	ldi	r22, 0x1E	; 30
    5b62:	88 e2       	ldi	r24, 0x28	; 40
    5b64:	0e 94 9a 1c 	call	0x3934	; 0x3934 <U8G2::drawStr(unsigned char, unsigned char, char const*) [clone .constprop.90]>
    5b68:	46 e8       	ldi	r20, 0x86	; 134
    5b6a:	5a eb       	ldi	r21, 0xBA	; 186
    5b6c:	6d e2       	ldi	r22, 0x2D	; 45
    5b6e:	84 e1       	ldi	r24, 0x14	; 20
    5b70:	0e 94 9a 1c 	call	0x3934	; 0x3934 <U8G2::drawStr(unsigned char, unsigned char, char const*) [clone .constprop.90]>
_ZN4U8G210sendBufferEv():
    5b74:	0e 94 0e 1d 	call	0x3a1c	; 0x3a1c <u8g2_SendBuffer.constprop.82>
setup():
    5b78:	60 ed       	ldi	r22, 0xD0	; 208
    5b7a:	77 e0       	ldi	r23, 0x07	; 7
    5b7c:	80 e0       	ldi	r24, 0x00	; 0
    5b7e:	90 e0       	ldi	r25, 0x00	; 0
    5b80:	0e 94 59 0f 	call	0x1eb2	; 0x1eb2 <delay>
_ZN4U8G211clearBufferEv():
    5b84:	82 ef       	ldi	r24, 0xF2	; 242
    5b86:	9f e2       	ldi	r25, 0x2F	; 47
    5b88:	20 d8       	rcall	.-4032   	; 0x4bca <u8g2_ClearBuffer>
_ZN4U8G212clearDisplayEv():
    5b8a:	82 ef       	ldi	r24, 0xF2	; 242
    5b8c:	9f e2       	ldi	r25, 0x2F	; 47
    5b8e:	32 d8       	rcall	.-3996   	; 0x4bf4 <u8g2_ClearDisplay>
_ZN4U8G27setFontEPKh():
    5b90:	84 e6       	ldi	r24, 0x64	; 100
    5b92:	94 e0       	ldi	r25, 0x04	; 4
    5b94:	0e 94 20 1a 	call	0x3440	; 0x3440 <u8g2_SetFont.constprop.86>
u8g2_SetFontMode():
    5b98:	81 e0       	ldi	r24, 0x01	; 1
    5b9a:	80 93 4a 30 	sts	0x304A, r24	; 0x80304a <u8g2+0x5c>
_ZN4U8G212setDrawColorEh():
    5b9e:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <u8g2_SetDrawColor.constprop.20>
setup():
    5ba2:	44 e9       	ldi	r20, 0x94	; 148
    5ba4:	5a eb       	ldi	r21, 0xBA	; 186
    5ba6:	63 e2       	ldi	r22, 0x23	; 35
    5ba8:	88 e2       	ldi	r24, 0x28	; 40
    5baa:	0e 94 9a 1c 	call	0x3934	; 0x3934 <U8G2::drawStr(unsigned char, unsigned char, char const*) [clone .constprop.90]>
_ZN4U8G210sendBufferEv():
    5bae:	0e 94 0e 1d 	call	0x3a1c	; 0x3a1c <u8g2_SendBuffer.constprop.82>
setup():
    5bb2:	6c ed       	ldi	r22, 0xDC	; 220
    5bb4:	75 e0       	ldi	r23, 0x05	; 5
    5bb6:	80 e0       	ldi	r24, 0x00	; 0
    5bb8:	90 e0       	ldi	r25, 0x00	; 0
    5bba:	0e 94 59 0f 	call	0x1eb2	; 0x1eb2 <delay>
digitalWrite():
    5bbe:	60 e0       	ldi	r22, 0x00	; 0
    5bc0:	83 e1       	ldi	r24, 0x13	; 19
    5bc2:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <digitalWrite.part.2>
setup():
    5bc6:	10 92 b1 29 	sts	0x29B1, r1	; 0x8029b1 <encoder0Pos>
    5bca:	10 92 b2 29 	sts	0x29B2, r1	; 0x8029b2 <encoder0Pos+0x1>
_newState():
    5bce:	53 e0       	ldi	r21, 0x03	; 3
    5bd0:	25 2e       	mov	r2, r21
    5bd2:	31 2c       	mov	r3, r1
number2Digit():
    5bd4:	c0 90 63 bb 	lds	r12, 0xBB63	; 0x80bb63 <__bss_end+0x8aee>
    5bd8:	d0 90 64 bb 	lds	r13, 0xBB64	; 0x80bb64 <__bss_end+0x8aef>
    5bdc:	e0 90 65 bb 	lds	r14, 0xBB65	; 0x80bb65 <__bss_end+0x8af0>
    5be0:	8e 01       	movw	r16, r28
    5be2:	09 5f       	subi	r16, 0xF9	; 249
    5be4:	1f 4f       	sbci	r17, 0xFF	; 255
tick():
    5be6:	80 91 77 2f 	lds	r24, 0x2F77	; 0x802f77 <button0>
    5bea:	90 91 78 2f 	lds	r25, 0x2F78	; 0x802f78 <button0+0x1>
    5bee:	97 fd       	sbrc	r25, 7
    5bf0:	7d c0       	rjmp	.+250    	; 0x5cec <main+0x4c4>
    5bf2:	0e 94 10 0f 	call	0x1e20	; 0x1e20 <digitalRead>
    5bf6:	90 e0       	ldi	r25, 0x00	; 0
    5bf8:	e0 91 7f 2f 	lds	r30, 0x2F7F	; 0x802f7f <button0+0x8>
    5bfc:	f0 91 80 2f 	lds	r31, 0x2F80	; 0x802f80 <button0+0x9>
millis():
    5c00:	2f b7       	in	r18, 0x3f	; 63
    5c02:	f8 94       	cli
    5c04:	80 90 b7 29 	lds	r8, 0x29B7	; 0x8029b7 <timer_millis>
    5c08:	90 90 b8 29 	lds	r9, 0x29B8	; 0x8029b8 <timer_millis+0x1>
    5c0c:	a0 90 b9 29 	lds	r10, 0x29B9	; 0x8029b9 <timer_millis+0x2>
    5c10:	b0 90 ba 29 	lds	r11, 0x29BA	; 0x8029ba <timer_millis+0x3>
    5c14:	2f bf       	out	0x3f, r18	; 63
tick():
    5c16:	40 91 a9 2f 	lds	r20, 0x2FA9	; 0x802fa9 <button0+0x32>
    5c1a:	50 91 aa 2f 	lds	r21, 0x2FAA	; 0x802faa <button0+0x33>
    5c1e:	60 91 ab 2f 	lds	r22, 0x2FAB	; 0x802fab <button0+0x34>
    5c22:	70 91 ac 2f 	lds	r23, 0x2FAC	; 0x802fac <button0+0x35>
    5c26:	24 01       	movw	r4, r8
    5c28:	35 01       	movw	r6, r10
    5c2a:	44 1a       	sub	r4, r20
    5c2c:	55 0a       	sbc	r5, r21
    5c2e:	66 0a       	sbc	r6, r22
    5c30:	77 0a       	sbc	r7, r23
    5c32:	4a 86       	std	Y+10, r4	; 0x0a
    5c34:	5b 86       	std	Y+11, r5	; 0x0b
    5c36:	6c 86       	std	Y+12, r6	; 0x0c
    5c38:	7d 86       	std	Y+13, r7	; 0x0d
    5c3a:	20 91 a5 2f 	lds	r18, 0x2FA5	; 0x802fa5 <button0+0x2e>
    5c3e:	30 91 a6 2f 	lds	r19, 0x2FA6	; 0x802fa6 <button0+0x2f>
    5c42:	22 30       	cpi	r18, 0x02	; 2
    5c44:	31 05       	cpc	r19, r1
    5c46:	09 f4       	brne	.+2      	; 0x5c4a <main+0x422>
    5c48:	59 c1       	rjmp	.+690    	; 0x5efc <main+0x6d4>
    5c4a:	ec f4       	brge	.+58     	; 0x5c86 <main+0x45e>
    5c4c:	21 15       	cp	r18, r1
    5c4e:	31 05       	cpc	r19, r1
    5c50:	a1 f1       	breq	.+104    	; 0x5cba <main+0x492>
    5c52:	21 30       	cpi	r18, 0x01	; 1
    5c54:	31 05       	cpc	r19, r1
    5c56:	09 f4       	brne	.+2      	; 0x5c5a <main+0x432>
    5c58:	f2 c0       	rjmp	.+484    	; 0x5e3e <main+0x616>
_newState():
    5c5a:	20 93 a7 2f 	sts	0x2FA7, r18	; 0x802fa7 <button0+0x30>
    5c5e:	30 93 a8 2f 	sts	0x2FA8, r19	; 0x802fa8 <button0+0x31>
    5c62:	10 92 a5 2f 	sts	0x2FA5, r1	; 0x802fa5 <button0+0x2e>
    5c66:	10 92 a6 2f 	sts	0x2FA6, r1	; 0x802fa6 <button0+0x2f>
    5c6a:	40 c0       	rjmp	.+128    	; 0x5cec <main+0x4c4>
TWI_MasterInit():
    5c6c:	80 91 e3 05 	lds	r24, 0x05E3	; 0x8005e3 <__TEXT_REGION_LENGTH__+0x7f45e3>
    5c70:	80 73       	andi	r24, 0x30	; 48
    5c72:	80 32       	cpi	r24, 0x20	; 32
    5c74:	09 f0       	breq	.+2      	; 0x5c78 <main+0x450>
    5c76:	d8 ce       	rjmp	.-592    	; 0x5a28 <main+0x200>
pinMode():
    5c78:	62 e0       	ldi	r22, 0x02	; 2
    5c7a:	8a e0       	ldi	r24, 0x0A	; 10
    5c7c:	0e 94 6a 0e 	call	0x1cd4	; 0x1cd4 <pinMode.part.1>
    5c80:	62 e0       	ldi	r22, 0x02	; 2
    5c82:	8b e0       	ldi	r24, 0x0B	; 11
    5c84:	cf ce       	rjmp	.-610    	; 0x5a24 <main+0x1fc>
tick():
    5c86:	26 30       	cpi	r18, 0x06	; 6
    5c88:	31 05       	cpc	r19, r1
    5c8a:	09 f4       	brne	.+2      	; 0x5c8e <main+0x466>
    5c8c:	d4 c1       	rjmp	.+936    	; 0x6036 <main+0x80e>
    5c8e:	27 30       	cpi	r18, 0x07	; 7
    5c90:	31 05       	cpc	r19, r1
    5c92:	09 f4       	brne	.+2      	; 0x5c96 <main+0x46e>
    5c94:	ee c1       	rjmp	.+988    	; 0x6072 <main+0x84a>
    5c96:	23 30       	cpi	r18, 0x03	; 3
    5c98:	31 05       	cpc	r19, r1
    5c9a:	f9 f6       	brne	.-66     	; 0x5c5a <main+0x432>
    5c9c:	8e 17       	cp	r24, r30
    5c9e:	9f 07       	cpc	r25, r31
    5ca0:	09 f0       	breq	.+2      	; 0x5ca4 <main+0x47c>
    5ca2:	5e c1       	rjmp	.+700    	; 0x5f60 <main+0x738>
_newState():
    5ca4:	20 93 a7 2f 	sts	0x2FA7, r18	; 0x802fa7 <button0+0x30>
    5ca8:	30 93 a8 2f 	sts	0x2FA8, r19	; 0x802fa8 <button0+0x31>
    5cac:	81 e0       	ldi	r24, 0x01	; 1
    5cae:	90 e0       	ldi	r25, 0x00	; 0
    5cb0:	80 93 a5 2f 	sts	0x2FA5, r24	; 0x802fa5 <button0+0x2e>
    5cb4:	90 93 a6 2f 	sts	0x2FA6, r25	; 0x802fa6 <button0+0x2f>
    5cb8:	e7 c0       	rjmp	.+462    	; 0x5e88 <main+0x660>
tick():
    5cba:	8e 17       	cp	r24, r30
    5cbc:	9f 07       	cpc	r25, r31
    5cbe:	b1 f4       	brne	.+44     	; 0x5cec <main+0x4c4>
_newState():
    5cc0:	10 92 a7 2f 	sts	0x2FA7, r1	; 0x802fa7 <button0+0x30>
    5cc4:	10 92 a8 2f 	sts	0x2FA8, r1	; 0x802fa8 <button0+0x31>
    5cc8:	81 e0       	ldi	r24, 0x01	; 1
    5cca:	90 e0       	ldi	r25, 0x00	; 0
    5ccc:	80 93 a5 2f 	sts	0x2FA5, r24	; 0x802fa5 <button0+0x2e>
    5cd0:	90 93 a6 2f 	sts	0x2FA6, r25	; 0x802fa6 <button0+0x2f>
tick():
    5cd4:	80 92 a9 2f 	sts	0x2FA9, r8	; 0x802fa9 <button0+0x32>
    5cd8:	90 92 aa 2f 	sts	0x2FAA, r9	; 0x802faa <button0+0x33>
    5cdc:	a0 92 ab 2f 	sts	0x2FAB, r10	; 0x802fab <button0+0x34>
    5ce0:	b0 92 ac 2f 	sts	0x2FAC, r11	; 0x802fac <button0+0x35>
    5ce4:	10 92 ad 2f 	sts	0x2FAD, r1	; 0x802fad <button0+0x36>
    5ce8:	10 92 ae 2f 	sts	0x2FAE, r1	; 0x802fae <button0+0x37>
loop():
    5cec:	80 91 b5 29 	lds	r24, 0x29B5	; 0x8029b5 <menus>
    5cf0:	90 91 b6 29 	lds	r25, 0x29B6	; 0x8029b6 <menus+0x1>
    5cf4:	89 2b       	or	r24, r25
    5cf6:	09 f0       	breq	.+2      	; 0x5cfa <main+0x4d2>
    5cf8:	7e c0       	rjmp	.+252    	; 0x5df6 <main+0x5ce>
digitalWrite():
    5cfa:	61 e0       	ldi	r22, 0x01	; 1
    5cfc:	86 e1       	ldi	r24, 0x16	; 22
    5cfe:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <digitalWrite.part.2>
loop():
    5d02:	0e 94 2d 1f 	call	0x3e5a	; 0x3e5a <stopDispense()>
display_main_menu():
    5d06:	80 91 b1 29 	lds	r24, 0x29B1	; 0x8029b1 <encoder0Pos>
    5d0a:	90 91 b2 29 	lds	r25, 0x29B2	; 0x8029b2 <encoder0Pos+0x1>
    5d0e:	20 91 b3 29 	lds	r18, 0x29B3	; 0x8029b3 <previousPos>
    5d12:	30 91 b4 29 	lds	r19, 0x29B4	; 0x8029b4 <previousPos+0x1>
    5d16:	28 17       	cp	r18, r24
    5d18:	39 07       	cpc	r19, r25
    5d1a:	51 f0       	breq	.+20     	; 0x5d30 <main+0x508>
    5d1c:	80 91 b1 29 	lds	r24, 0x29B1	; 0x8029b1 <encoder0Pos>
    5d20:	90 91 b2 29 	lds	r25, 0x29B2	; 0x8029b2 <encoder0Pos+0x1>
    5d24:	80 93 b3 29 	sts	0x29B3, r24	; 0x8029b3 <previousPos>
    5d28:	90 93 b4 29 	sts	0x29B4, r25	; 0x8029b4 <previousPos+0x1>
    5d2c:	10 92 b0 29 	sts	0x29B0, r1	; 0x8029b0 <once>
    5d30:	80 91 b0 29 	lds	r24, 0x29B0	; 0x8029b0 <once>
    5d34:	81 11       	cpse	r24, r1
    5d36:	70 c0       	rjmp	.+224    	; 0x5e18 <main+0x5f0>
_ZN4U8G211clearBufferEv():
    5d38:	82 ef       	ldi	r24, 0xF2	; 242
    5d3a:	9f e2       	ldi	r25, 0x2F	; 47
    5d3c:	0e 94 e5 25 	call	0x4bca	; 0x4bca <u8g2_ClearBuffer>
_ZN4U8G27setFontEPKh():
    5d40:	84 e6       	ldi	r24, 0x64	; 100
    5d42:	94 e0       	ldi	r25, 0x04	; 4
    5d44:	0e 94 20 1a 	call	0x3440	; 0x3440 <u8g2_SetFont.constprop.86>
display_main_menu():
    5d48:	4d e9       	ldi	r20, 0x9D	; 157
    5d4a:	5a eb       	ldi	r21, 0xBA	; 186
    5d4c:	6a e0       	ldi	r22, 0x0A	; 10
    5d4e:	8e e1       	ldi	r24, 0x1E	; 30
    5d50:	0e 94 9a 1c 	call	0x3934	; 0x3934 <U8G2::drawStr(unsigned char, unsigned char, char const*) [clone .constprop.90]>
_ZN4U8G28drawLineEhhhh():
    5d54:	6d e0       	ldi	r22, 0x0D	; 13
    5d56:	8d e0       	ldi	r24, 0x0D	; 13
    5d58:	0e 94 2c 19 	call	0x3258	; 0x3258 <u8g2_DrawLine.constprop.83>
display_main_menu():
    5d5c:	47 ea       	ldi	r20, 0xA7	; 167
    5d5e:	5a eb       	ldi	r21, 0xBA	; 186
    5d60:	6e e1       	ldi	r22, 0x1E	; 30
    5d62:	80 e0       	ldi	r24, 0x00	; 0
    5d64:	0e 94 9a 1c 	call	0x3934	; 0x3934 <U8G2::drawStr(unsigned char, unsigned char, char const*) [clone .constprop.90]>
_ZN4U8G29setCursorEhh():
    5d68:	3a e0       	ldi	r19, 0x0A	; 10
    5d6a:	b3 2e       	mov	r11, r19
    5d6c:	b0 92 6f 30 	sts	0x306F, r11	; 0x80306f <u8g2+0x81>
    5d70:	8e e1       	ldi	r24, 0x1E	; 30
    5d72:	80 93 70 30 	sts	0x3070, r24	; 0x803070 <u8g2+0x82>
display_main_menu():
    5d76:	80 91 b1 29 	lds	r24, 0x29B1	; 0x8029b1 <encoder0Pos>
    5d7a:	90 91 b2 29 	lds	r25, 0x29B2	; 0x8029b2 <encoder0Pos+0x1>
    5d7e:	46 e0       	ldi	r20, 0x06	; 6
    5d80:	f4 2e       	mov	r15, r20
    5d82:	f8 9e       	mul	r15, r24
    5d84:	b0 01       	movw	r22, r0
    5d86:	f9 9e       	mul	r15, r25
    5d88:	70 0d       	add	r23, r0
    5d8a:	11 24       	eor	r1, r1
    5d8c:	69 5b       	subi	r22, 0xB9	; 185
    5d8e:	70 4d       	sbci	r23, 0xD0	; 208
    5d90:	8e ee       	ldi	r24, 0xEE	; 238
    5d92:	9f e2       	ldi	r25, 0x2F	; 47
    5d94:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <Print::print(String const&)>
_ZN4U8G29setCursorEhh():
    5d98:	b0 92 6f 30 	sts	0x306F, r11	; 0x80306f <u8g2+0x81>
    5d9c:	8d e2       	ldi	r24, 0x2D	; 45
    5d9e:	80 93 70 30 	sts	0x3070, r24	; 0x803070 <u8g2+0x82>
display_main_menu():
    5da2:	80 91 b1 29 	lds	r24, 0x29B1	; 0x8029b1 <encoder0Pos>
    5da6:	90 91 b2 29 	lds	r25, 0x29B2	; 0x8029b2 <encoder0Pos+0x1>
    5daa:	01 96       	adiw	r24, 0x01	; 1
    5dac:	f8 9e       	mul	r15, r24
    5dae:	b0 01       	movw	r22, r0
    5db0:	f9 9e       	mul	r15, r25
    5db2:	70 0d       	add	r23, r0
    5db4:	11 24       	eor	r1, r1
    5db6:	69 5b       	subi	r22, 0xB9	; 185
    5db8:	70 4d       	sbci	r23, 0xD0	; 208
    5dba:	8e ee       	ldi	r24, 0xEE	; 238
    5dbc:	9f e2       	ldi	r25, 0x2F	; 47
    5dbe:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <Print::print(String const&)>
_ZN4U8G29setCursorEhh():
    5dc2:	b0 92 6f 30 	sts	0x306F, r11	; 0x80306f <u8g2+0x81>
    5dc6:	8c e3       	ldi	r24, 0x3C	; 60
    5dc8:	80 93 70 30 	sts	0x3070, r24	; 0x803070 <u8g2+0x82>
display_main_menu():
    5dcc:	80 91 b1 29 	lds	r24, 0x29B1	; 0x8029b1 <encoder0Pos>
    5dd0:	90 91 b2 29 	lds	r25, 0x29B2	; 0x8029b2 <encoder0Pos+0x1>
    5dd4:	02 96       	adiw	r24, 0x02	; 2
    5dd6:	f8 9e       	mul	r15, r24
    5dd8:	b0 01       	movw	r22, r0
    5dda:	f9 9e       	mul	r15, r25
    5ddc:	70 0d       	add	r23, r0
    5dde:	11 24       	eor	r1, r1
    5de0:	69 5b       	subi	r22, 0xB9	; 185
    5de2:	70 4d       	sbci	r23, 0xD0	; 208
    5de4:	8e ee       	ldi	r24, 0xEE	; 238
    5de6:	9f e2       	ldi	r25, 0x2F	; 47
    5de8:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <Print::print(String const&)>
_ZN4U8G210sendBufferEv():
    5dec:	0e 94 0e 1d 	call	0x3a1c	; 0x3a1c <u8g2_SendBuffer.constprop.82>
display_main_menu():
    5df0:	81 e0       	ldi	r24, 0x01	; 1
    5df2:	80 93 b0 29 	sts	0x29B0, r24	; 0x8029b0 <once>
display_screens():
    5df6:	80 91 b5 29 	lds	r24, 0x29B5	; 0x8029b5 <menus>
    5dfa:	90 91 b6 29 	lds	r25, 0x29B6	; 0x8029b6 <menus+0x1>
    5dfe:	83 30       	cpi	r24, 0x03	; 3
    5e00:	91 05       	cpc	r25, r1
    5e02:	09 f4       	brne	.+2      	; 0x5e06 <main+0x5de>
    5e04:	27 c5       	rjmp	.+2638   	; 0x6854 <main+0x102c>
    5e06:	0c f0       	brlt	.+2      	; 0x5e0a <main+0x5e2>
    5e08:	65 c1       	rjmp	.+714    	; 0x60d4 <main+0x8ac>
    5e0a:	81 30       	cpi	r24, 0x01	; 1
    5e0c:	91 05       	cpc	r25, r1
    5e0e:	09 f4       	brne	.+2      	; 0x5e12 <main+0x5ea>
    5e10:	0a c2       	rjmp	.+1044   	; 0x6226 <main+0x9fe>
    5e12:	02 97       	sbiw	r24, 0x02	; 2
    5e14:	09 f4       	brne	.+2      	; 0x5e18 <main+0x5f0>
    5e16:	d6 c3       	rjmp	.+1964   	; 0x65c4 <main+0xd9c>
loop():
    5e18:	88 ed       	ldi	r24, 0xD8	; 216
    5e1a:	9e e2       	ldi	r25, 0x2E	; 46
    5e1c:	0e 94 af 14 	call	0x295e	; 0x295e <Ticker::update()>
    5e20:	8d eb       	ldi	r24, 0xBD	; 189
    5e22:	9e e2       	ldi	r25, 0x2E	; 46
    5e24:	0e 94 af 14 	call	0x295e	; 0x295e <Ticker::update()>
    5e28:	82 ea       	ldi	r24, 0xA2	; 162
    5e2a:	9e e2       	ldi	r25, 0x2E	; 46
    5e2c:	0e 94 af 14 	call	0x295e	; 0x295e <Ticker::update()>
    5e30:	87 e8       	ldi	r24, 0x87	; 135
    5e32:	9e e2       	ldi	r25, 0x2E	; 46
    5e34:	0e 94 af 14 	call	0x295e	; 0x295e <Ticker::update()>
main():
    5e38:	0e 94 65 12 	call	0x24ca	; 0x24ca <serialEventRun()>
    5e3c:	d4 ce       	rjmp	.-600    	; 0x5be6 <main+0x3be>
tick():
    5e3e:	8e 17       	cp	r24, r30
    5e40:	9f 07       	cpc	r25, r31
    5e42:	59 f1       	breq	.+86     	; 0x5e9a <main+0x672>
    5e44:	80 91 79 2f 	lds	r24, 0x2F79	; 0x802f79 <button0+0x2>
    5e48:	90 91 7a 2f 	lds	r25, 0x2F7A	; 0x802f7a <button0+0x3>
    5e4c:	b0 e0       	ldi	r27, 0x00	; 0
    5e4e:	a0 e0       	ldi	r26, 0x00	; 0
    5e50:	4a 85       	ldd	r20, Y+10	; 0x0a
    5e52:	5b 85       	ldd	r21, Y+11	; 0x0b
    5e54:	6c 85       	ldd	r22, Y+12	; 0x0c
    5e56:	7d 85       	ldd	r23, Y+13	; 0x0d
    5e58:	48 17       	cp	r20, r24
    5e5a:	59 07       	cpc	r21, r25
    5e5c:	6a 07       	cpc	r22, r26
    5e5e:	7b 07       	cpc	r23, r27
    5e60:	48 f4       	brcc	.+18     	; 0x5e74 <main+0x64c>
    5e62:	80 91 a7 2f 	lds	r24, 0x2FA7	; 0x802fa7 <button0+0x30>
    5e66:	90 91 a8 2f 	lds	r25, 0x2FA8	; 0x802fa8 <button0+0x31>
_newState():
    5e6a:	20 93 a7 2f 	sts	0x2FA7, r18	; 0x802fa7 <button0+0x30>
    5e6e:	30 93 a8 2f 	sts	0x2FA8, r19	; 0x802fa8 <button0+0x31>
    5e72:	3f c0       	rjmp	.+126    	; 0x5ef2 <main+0x6ca>
    5e74:	20 93 a7 2f 	sts	0x2FA7, r18	; 0x802fa7 <button0+0x30>
    5e78:	30 93 a8 2f 	sts	0x2FA8, r19	; 0x802fa8 <button0+0x31>
    5e7c:	62 e0       	ldi	r22, 0x02	; 2
    5e7e:	70 e0       	ldi	r23, 0x00	; 0
    5e80:	60 93 a5 2f 	sts	0x2FA5, r22	; 0x802fa5 <button0+0x2e>
    5e84:	70 93 a6 2f 	sts	0x2FA6, r23	; 0x802fa6 <button0+0x2f>
tick():
    5e88:	80 92 a9 2f 	sts	0x2FA9, r8	; 0x802fa9 <button0+0x32>
    5e8c:	90 92 aa 2f 	sts	0x2FAA, r9	; 0x802faa <button0+0x33>
    5e90:	a0 92 ab 2f 	sts	0x2FAB, r10	; 0x802fab <button0+0x34>
    5e94:	b0 92 ac 2f 	sts	0x2FAC, r11	; 0x802fac <button0+0x35>
    5e98:	29 cf       	rjmp	.-430    	; 0x5cec <main+0x4c4>
    5e9a:	80 91 7d 2f 	lds	r24, 0x2F7D	; 0x802f7d <button0+0x6>
    5e9e:	90 91 7e 2f 	lds	r25, 0x2F7E	; 0x802f7e <button0+0x7>
    5ea2:	b0 e0       	ldi	r27, 0x00	; 0
    5ea4:	a0 e0       	ldi	r26, 0x00	; 0
    5ea6:	4a 84       	ldd	r4, Y+10	; 0x0a
    5ea8:	5b 84       	ldd	r5, Y+11	; 0x0b
    5eaa:	6c 84       	ldd	r6, Y+12	; 0x0c
    5eac:	7d 84       	ldd	r7, Y+13	; 0x0d
    5eae:	84 15       	cp	r24, r4
    5eb0:	95 05       	cpc	r25, r5
    5eb2:	a6 05       	cpc	r26, r6
    5eb4:	b7 05       	cpc	r27, r7
    5eb6:	08 f0       	brcs	.+2      	; 0x5eba <main+0x692>
    5eb8:	19 cf       	rjmp	.-462    	; 0x5cec <main+0x4c4>
    5eba:	e0 91 93 2f 	lds	r30, 0x2F93	; 0x802f93 <button0+0x1c>
    5ebe:	f0 91 94 2f 	lds	r31, 0x2F94	; 0x802f94 <button0+0x1d>
    5ec2:	30 97       	sbiw	r30, 0x00	; 0
    5ec4:	09 f0       	breq	.+2      	; 0x5ec8 <main+0x6a0>
    5ec6:	09 95       	icall
    5ec8:	e0 91 95 2f 	lds	r30, 0x2F95	; 0x802f95 <button0+0x1e>
    5ecc:	f0 91 96 2f 	lds	r31, 0x2F96	; 0x802f96 <button0+0x1f>
    5ed0:	30 97       	sbiw	r30, 0x00	; 0
    5ed2:	29 f0       	breq	.+10     	; 0x5ede <main+0x6b6>
    5ed4:	80 91 97 2f 	lds	r24, 0x2F97	; 0x802f97 <button0+0x20>
    5ed8:	90 91 98 2f 	lds	r25, 0x2F98	; 0x802f98 <button0+0x21>
    5edc:	09 95       	icall
_newState():
    5ede:	80 91 a5 2f 	lds	r24, 0x2FA5	; 0x802fa5 <button0+0x2e>
    5ee2:	90 91 a6 2f 	lds	r25, 0x2FA6	; 0x802fa6 <button0+0x2f>
    5ee6:	80 93 a7 2f 	sts	0x2FA7, r24	; 0x802fa7 <button0+0x30>
    5eea:	90 93 a8 2f 	sts	0x2FA8, r25	; 0x802fa8 <button0+0x31>
    5eee:	86 e0       	ldi	r24, 0x06	; 6
    5ef0:	90 e0       	ldi	r25, 0x00	; 0
    5ef2:	80 93 a5 2f 	sts	0x2FA5, r24	; 0x802fa5 <button0+0x2e>
    5ef6:	90 93 a6 2f 	sts	0x2FA6, r25	; 0x802fa6 <button0+0x2f>
    5efa:	f8 ce       	rjmp	.-528    	; 0x5cec <main+0x4c4>
    5efc:	80 90 79 2f 	lds	r8, 0x2F79	; 0x802f79 <button0+0x2>
    5f00:	90 90 7a 2f 	lds	r9, 0x2F7A	; 0x802f7a <button0+0x3>
    5f04:	b1 2c       	mov	r11, r1
    5f06:	a1 2c       	mov	r10, r1
tick():
    5f08:	8e 17       	cp	r24, r30
    5f0a:	9f 07       	cpc	r25, r31
    5f0c:	f1 f4       	brne	.+60     	; 0x5f4a <main+0x722>
    5f0e:	4a 85       	ldd	r20, Y+10	; 0x0a
    5f10:	5b 85       	ldd	r21, Y+11	; 0x0b
    5f12:	6c 85       	ldd	r22, Y+12	; 0x0c
    5f14:	7d 85       	ldd	r23, Y+13	; 0x0d
    5f16:	48 15       	cp	r20, r8
    5f18:	59 05       	cpc	r21, r9
    5f1a:	6a 05       	cpc	r22, r10
    5f1c:	7b 05       	cpc	r23, r11
    5f1e:	08 f4       	brcc	.+2      	; 0x5f22 <main+0x6fa>
    5f20:	a0 cf       	rjmp	.-192    	; 0x5e62 <main+0x63a>
    5f22:	80 91 ad 2f 	lds	r24, 0x2FAD	; 0x802fad <button0+0x36>
    5f26:	90 91 ae 2f 	lds	r25, 0x2FAE	; 0x802fae <button0+0x37>
    5f2a:	01 96       	adiw	r24, 0x01	; 1
    5f2c:	80 93 ad 2f 	sts	0x2FAD, r24	; 0x802fad <button0+0x36>
    5f30:	90 93 ae 2f 	sts	0x2FAE, r25	; 0x802fae <button0+0x37>
_newState():
    5f34:	82 e0       	ldi	r24, 0x02	; 2
    5f36:	90 e0       	ldi	r25, 0x00	; 0
    5f38:	80 93 a7 2f 	sts	0x2FA7, r24	; 0x802fa7 <button0+0x30>
    5f3c:	90 93 a8 2f 	sts	0x2FA8, r25	; 0x802fa8 <button0+0x31>
    5f40:	20 92 a5 2f 	sts	0x2FA5, r2	; 0x802fa5 <button0+0x2e>
    5f44:	30 92 a6 2f 	sts	0x2FA6, r3	; 0x802fa6 <button0+0x2f>
    5f48:	d1 ce       	rjmp	.-606    	; 0x5cec <main+0x4c4>
tick():
    5f4a:	6a 85       	ldd	r22, Y+10	; 0x0a
    5f4c:	7b 85       	ldd	r23, Y+11	; 0x0b
    5f4e:	8c 85       	ldd	r24, Y+12	; 0x0c
    5f50:	9d 85       	ldd	r25, Y+13	; 0x0d
    5f52:	68 15       	cp	r22, r8
    5f54:	79 05       	cpc	r23, r9
    5f56:	8a 05       	cpc	r24, r10
    5f58:	9b 05       	cpc	r25, r11
    5f5a:	08 f4       	brcc	.+2      	; 0x5f5e <main+0x736>
    5f5c:	c7 ce       	rjmp	.-626    	; 0x5cec <main+0x4c4>
    5f5e:	e1 cf       	rjmp	.-62     	; 0x5f22 <main+0x6fa>
    5f60:	80 91 ad 2f 	lds	r24, 0x2FAD	; 0x802fad <button0+0x36>
    5f64:	90 91 ae 2f 	lds	r25, 0x2FAE	; 0x802fae <button0+0x37>
    5f68:	80 90 7b 2f 	lds	r8, 0x2F7B	; 0x802f7b <button0+0x4>
    5f6c:	90 90 7c 2f 	lds	r9, 0x2F7C	; 0x802f7c <button0+0x5>
    5f70:	b1 2c       	mov	r11, r1
    5f72:	a1 2c       	mov	r10, r1
    5f74:	4a 84       	ldd	r4, Y+10	; 0x0a
    5f76:	5b 84       	ldd	r5, Y+11	; 0x0b
    5f78:	6c 84       	ldd	r6, Y+12	; 0x0c
    5f7a:	7d 84       	ldd	r7, Y+13	; 0x0d
    5f7c:	84 14       	cp	r8, r4
    5f7e:	95 04       	cpc	r9, r5
    5f80:	a6 04       	cpc	r10, r6
    5f82:	b7 04       	cpc	r11, r7
    5f84:	40 f0       	brcs	.+16     	; 0x5f96 <main+0x76e>
    5f86:	20 91 af 2f 	lds	r18, 0x2FAF	; 0x802faf <button0+0x38>
    5f8a:	30 91 b0 2f 	lds	r19, 0x2FB0	; 0x802fb0 <button0+0x39>
    5f8e:	82 17       	cp	r24, r18
    5f90:	93 07       	cpc	r25, r19
    5f92:	09 f0       	breq	.+2      	; 0x5f96 <main+0x76e>
    5f94:	ab ce       	rjmp	.-682    	; 0x5cec <main+0x4c4>
    5f96:	81 30       	cpi	r24, 0x01	; 1
    5f98:	91 05       	cpc	r25, r1
    5f9a:	31 f5       	brne	.+76     	; 0x5fe8 <main+0x7c0>
    5f9c:	e0 91 81 2f 	lds	r30, 0x2F81	; 0x802f81 <button0+0xa>
    5fa0:	f0 91 82 2f 	lds	r31, 0x2F82	; 0x802f82 <button0+0xb>
    5fa4:	30 97       	sbiw	r30, 0x00	; 0
    5fa6:	09 f0       	breq	.+2      	; 0x5faa <main+0x782>
    5fa8:	09 95       	icall
    5faa:	e0 91 83 2f 	lds	r30, 0x2F83	; 0x802f83 <button0+0xc>
    5fae:	f0 91 84 2f 	lds	r31, 0x2F84	; 0x802f84 <button0+0xd>
    5fb2:	80 91 85 2f 	lds	r24, 0x2F85	; 0x802f85 <button0+0xe>
    5fb6:	90 91 86 2f 	lds	r25, 0x2F86	; 0x802f86 <button0+0xf>
    5fba:	30 97       	sbiw	r30, 0x00	; 0
    5fbc:	41 f5       	brne	.+80     	; 0x600e <main+0x7e6>
reset():
    5fbe:	10 92 a5 2f 	sts	0x2FA5, r1	; 0x802fa5 <button0+0x2e>
    5fc2:	10 92 a6 2f 	sts	0x2FA6, r1	; 0x802fa6 <button0+0x2f>
    5fc6:	10 92 a7 2f 	sts	0x2FA7, r1	; 0x802fa7 <button0+0x30>
    5fca:	10 92 a8 2f 	sts	0x2FA8, r1	; 0x802fa8 <button0+0x31>
    5fce:	10 92 ad 2f 	sts	0x2FAD, r1	; 0x802fad <button0+0x36>
    5fd2:	10 92 ae 2f 	sts	0x2FAE, r1	; 0x802fae <button0+0x37>
    5fd6:	10 92 a9 2f 	sts	0x2FA9, r1	; 0x802fa9 <button0+0x32>
    5fda:	10 92 aa 2f 	sts	0x2FAA, r1	; 0x802faa <button0+0x33>
    5fde:	10 92 ab 2f 	sts	0x2FAB, r1	; 0x802fab <button0+0x34>
    5fe2:	10 92 ac 2f 	sts	0x2FAC, r1	; 0x802fac <button0+0x35>
    5fe6:	82 ce       	rjmp	.-764    	; 0x5cec <main+0x4c4>
tick():
    5fe8:	02 97       	sbiw	r24, 0x02	; 2
    5fea:	99 f4       	brne	.+38     	; 0x6012 <main+0x7ea>
    5fec:	e0 91 87 2f 	lds	r30, 0x2F87	; 0x802f87 <button0+0x10>
    5ff0:	f0 91 88 2f 	lds	r31, 0x2F88	; 0x802f88 <button0+0x11>
    5ff4:	30 97       	sbiw	r30, 0x00	; 0
    5ff6:	09 f0       	breq	.+2      	; 0x5ffa <main+0x7d2>
    5ff8:	09 95       	icall
    5ffa:	e0 91 89 2f 	lds	r30, 0x2F89	; 0x802f89 <button0+0x12>
    5ffe:	f0 91 8a 2f 	lds	r31, 0x2F8A	; 0x802f8a <button0+0x13>
    6002:	80 91 8b 2f 	lds	r24, 0x2F8B	; 0x802f8b <button0+0x14>
    6006:	90 91 8c 2f 	lds	r25, 0x2F8C	; 0x802f8c <button0+0x15>
    600a:	30 97       	sbiw	r30, 0x00	; 0
    600c:	c1 f2       	breq	.-80     	; 0x5fbe <main+0x796>
    600e:	09 95       	icall
    6010:	d6 cf       	rjmp	.-84     	; 0x5fbe <main+0x796>
    6012:	e0 91 8d 2f 	lds	r30, 0x2F8D	; 0x802f8d <button0+0x16>
    6016:	f0 91 8e 2f 	lds	r31, 0x2F8E	; 0x802f8e <button0+0x17>
    601a:	30 97       	sbiw	r30, 0x00	; 0
    601c:	09 f0       	breq	.+2      	; 0x6020 <main+0x7f8>
    601e:	09 95       	icall
    6020:	e0 91 8f 2f 	lds	r30, 0x2F8F	; 0x802f8f <button0+0x18>
    6024:	f0 91 90 2f 	lds	r31, 0x2F90	; 0x802f90 <button0+0x19>
    6028:	30 97       	sbiw	r30, 0x00	; 0
    602a:	49 f2       	breq	.-110    	; 0x5fbe <main+0x796>
    602c:	80 91 91 2f 	lds	r24, 0x2F91	; 0x802f91 <button0+0x1a>
    6030:	90 91 92 2f 	lds	r25, 0x2F92	; 0x802f92 <button0+0x1b>
    6034:	ec cf       	rjmp	.-40     	; 0x600e <main+0x7e6>
    6036:	8e 17       	cp	r24, r30
    6038:	9f 07       	cpc	r25, r31
    603a:	39 f0       	breq	.+14     	; 0x604a <main+0x822>
_newState():
    603c:	20 93 a7 2f 	sts	0x2FA7, r18	; 0x802fa7 <button0+0x30>
    6040:	30 93 a8 2f 	sts	0x2FA8, r19	; 0x802fa8 <button0+0x31>
    6044:	87 e0       	ldi	r24, 0x07	; 7
    6046:	90 e0       	ldi	r25, 0x00	; 0
    6048:	33 ce       	rjmp	.-922    	; 0x5cb0 <main+0x488>
tick():
    604a:	e0 91 9f 2f 	lds	r30, 0x2F9F	; 0x802f9f <button0+0x28>
    604e:	f0 91 a0 2f 	lds	r31, 0x2FA0	; 0x802fa0 <button0+0x29>
    6052:	30 97       	sbiw	r30, 0x00	; 0
    6054:	09 f0       	breq	.+2      	; 0x6058 <main+0x830>
    6056:	09 95       	icall
    6058:	e0 91 a1 2f 	lds	r30, 0x2FA1	; 0x802fa1 <button0+0x2a>
    605c:	f0 91 a2 2f 	lds	r31, 0x2FA2	; 0x802fa2 <button0+0x2b>
    6060:	30 97       	sbiw	r30, 0x00	; 0
    6062:	09 f4       	brne	.+2      	; 0x6066 <main+0x83e>
    6064:	43 ce       	rjmp	.-890    	; 0x5cec <main+0x4c4>
    6066:	80 91 a3 2f 	lds	r24, 0x2FA3	; 0x802fa3 <button0+0x2c>
    606a:	90 91 a4 2f 	lds	r25, 0x2FA4	; 0x802fa4 <button0+0x2d>
    606e:	09 95       	icall
    6070:	3d ce       	rjmp	.-902    	; 0x5cec <main+0x4c4>
    6072:	80 90 79 2f 	lds	r8, 0x2F79	; 0x802f79 <button0+0x2>
    6076:	90 90 7a 2f 	lds	r9, 0x2F7A	; 0x802f7a <button0+0x3>
    607a:	b1 2c       	mov	r11, r1
    607c:	a1 2c       	mov	r10, r1
    607e:	8e 17       	cp	r24, r30
    6080:	9f 07       	cpc	r25, r31
    6082:	e9 f4       	brne	.+58     	; 0x60be <main+0x896>
    6084:	4a 85       	ldd	r20, Y+10	; 0x0a
    6086:	5b 85       	ldd	r21, Y+11	; 0x0b
    6088:	6c 85       	ldd	r22, Y+12	; 0x0c
    608a:	7d 85       	ldd	r23, Y+13	; 0x0d
    608c:	48 15       	cp	r20, r8
    608e:	59 05       	cpc	r21, r9
    6090:	6a 05       	cpc	r22, r10
    6092:	7b 05       	cpc	r23, r11
    6094:	08 f4       	brcc	.+2      	; 0x6098 <main+0x870>
    6096:	e5 ce       	rjmp	.-566    	; 0x5e62 <main+0x63a>
    6098:	e0 91 99 2f 	lds	r30, 0x2F99	; 0x802f99 <button0+0x22>
    609c:	f0 91 9a 2f 	lds	r31, 0x2F9A	; 0x802f9a <button0+0x23>
    60a0:	30 97       	sbiw	r30, 0x00	; 0
    60a2:	09 f0       	breq	.+2      	; 0x60a6 <main+0x87e>
    60a4:	09 95       	icall
    60a6:	e0 91 9b 2f 	lds	r30, 0x2F9B	; 0x802f9b <button0+0x24>
    60aa:	f0 91 9c 2f 	lds	r31, 0x2F9C	; 0x802f9c <button0+0x25>
    60ae:	80 91 9d 2f 	lds	r24, 0x2F9D	; 0x802f9d <button0+0x26>
    60b2:	90 91 9e 2f 	lds	r25, 0x2F9E	; 0x802f9e <button0+0x27>
    60b6:	30 97       	sbiw	r30, 0x00	; 0
    60b8:	09 f0       	breq	.+2      	; 0x60bc <main+0x894>
    60ba:	a9 cf       	rjmp	.-174    	; 0x600e <main+0x7e6>
    60bc:	80 cf       	rjmp	.-256    	; 0x5fbe <main+0x796>
    60be:	6a 85       	ldd	r22, Y+10	; 0x0a
    60c0:	7b 85       	ldd	r23, Y+11	; 0x0b
    60c2:	8c 85       	ldd	r24, Y+12	; 0x0c
    60c4:	9d 85       	ldd	r25, Y+13	; 0x0d
    60c6:	68 15       	cp	r22, r8
    60c8:	79 05       	cpc	r23, r9
    60ca:	8a 05       	cpc	r24, r10
    60cc:	9b 05       	cpc	r25, r11
    60ce:	08 f4       	brcc	.+2      	; 0x60d2 <main+0x8aa>
    60d0:	0d ce       	rjmp	.-998    	; 0x5cec <main+0x4c4>
    60d2:	e2 cf       	rjmp	.-60     	; 0x6098 <main+0x870>
display_screens():
    60d4:	84 30       	cpi	r24, 0x04	; 4
    60d6:	91 05       	cpc	r25, r1
    60d8:	09 f4       	brne	.+2      	; 0x60dc <main+0x8b4>
    60da:	3f c4       	rjmp	.+2174   	; 0x695a <main+0x1132>
    60dc:	05 97       	sbiw	r24, 0x05	; 5
    60de:	09 f0       	breq	.+2      	; 0x60e2 <main+0x8ba>
    60e0:	9b ce       	rjmp	.-714    	; 0x5e18 <main+0x5f0>
display_priming():
    60e2:	10 92 b3 29 	sts	0x29B3, r1	; 0x8029b3 <previousPos>
    60e6:	10 92 b4 29 	sts	0x29B4, r1	; 0x8029b4 <previousPos+0x1>
    60ea:	80 91 b1 29 	lds	r24, 0x29B1	; 0x8029b1 <encoder0Pos>
    60ee:	90 91 b2 29 	lds	r25, 0x29B2	; 0x8029b2 <encoder0Pos+0x1>
    60f2:	89 2b       	or	r24, r25
    60f4:	59 f0       	breq	.+22     	; 0x610c <main+0x8e4>
    60f6:	80 91 b1 29 	lds	r24, 0x29B1	; 0x8029b1 <encoder0Pos>
    60fa:	90 91 b2 29 	lds	r25, 0x29B2	; 0x8029b2 <encoder0Pos+0x1>
    60fe:	80 93 b3 29 	sts	0x29B3, r24	; 0x8029b3 <previousPos>
    6102:	90 93 b4 29 	sts	0x29B4, r25	; 0x8029b4 <previousPos+0x1>
    6106:	81 e0       	ldi	r24, 0x01	; 1
    6108:	80 93 05 28 	sts	0x2805, r24	; 0x802805 <change_flag>
    610c:	80 91 b0 29 	lds	r24, 0x29B0	; 0x8029b0 <once>
    6110:	81 11       	cpse	r24, r1
    6112:	2b c0       	rjmp	.+86     	; 0x616a <main+0x942>
    6114:	10 92 b1 29 	sts	0x29B1, r1	; 0x8029b1 <encoder0Pos>
    6118:	10 92 b2 29 	sts	0x29B2, r1	; 0x8029b2 <encoder0Pos+0x1>
_ZN4U8G211clearBufferEv():
    611c:	82 ef       	ldi	r24, 0xF2	; 242
    611e:	9f e2       	ldi	r25, 0x2F	; 47
    6120:	0e 94 e5 25 	call	0x4bca	; 0x4bca <u8g2_ClearBuffer>
_ZN4U8G27setFontEPKh():
    6124:	84 e6       	ldi	r24, 0x64	; 100
    6126:	94 e0       	ldi	r25, 0x04	; 4
    6128:	0e 94 20 1a 	call	0x3440	; 0x3440 <u8g2_SetFont.constprop.86>
display_priming():
    612c:	47 e2       	ldi	r20, 0x27	; 39
    612e:	5b eb       	ldi	r21, 0xBB	; 187
    6130:	6a e0       	ldi	r22, 0x0A	; 10
    6132:	84 e1       	ldi	r24, 0x14	; 20
    6134:	0e 94 9a 1c 	call	0x3934	; 0x3934 <U8G2::drawStr(unsigned char, unsigned char, char const*) [clone .constprop.90]>
_ZN4U8G28drawLineEhhhh():
    6138:	6d e0       	ldi	r22, 0x0D	; 13
    613a:	8d e0       	ldi	r24, 0x0D	; 13
    613c:	0e 94 2c 19 	call	0x3258	; 0x3258 <u8g2_DrawLine.constprop.83>
_ZN4U8G27setFontEPKh():
    6140:	84 e6       	ldi	r24, 0x64	; 100
    6142:	94 e0       	ldi	r25, 0x04	; 4
    6144:	0e 94 20 1a 	call	0x3440	; 0x3440 <u8g2_SetFont.constprop.86>
display_priming():
    6148:	44 e3       	ldi	r20, 0x34	; 52
    614a:	5b eb       	ldi	r21, 0xBB	; 187
    614c:	6e e1       	ldi	r22, 0x1E	; 30
    614e:	8d e0       	ldi	r24, 0x0D	; 13
    6150:	0e 94 9a 1c 	call	0x3934	; 0x3934 <U8G2::drawStr(unsigned char, unsigned char, char const*) [clone .constprop.90]>
    6154:	48 e4       	ldi	r20, 0x48	; 72
    6156:	5b eb       	ldi	r21, 0xBB	; 187
    6158:	6d e2       	ldi	r22, 0x2D	; 45
    615a:	8a e2       	ldi	r24, 0x2A	; 42
    615c:	0e 94 9a 1c 	call	0x3934	; 0x3934 <U8G2::drawStr(unsigned char, unsigned char, char const*) [clone .constprop.90]>
_ZN4U8G210sendBufferEv():
    6160:	0e 94 0e 1d 	call	0x3a1c	; 0x3a1c <u8g2_SendBuffer.constprop.82>
display_priming():
    6164:	81 e0       	ldi	r24, 0x01	; 1
    6166:	80 93 b0 29 	sts	0x29B0, r24	; 0x8029b0 <once>
    616a:	80 91 ae 29 	lds	r24, 0x29AE	; 0x8029ae <pos1>
    616e:	90 91 af 29 	lds	r25, 0x29AF	; 0x8029af <pos1+0x1>
    6172:	00 97       	sbiw	r24, 0x00	; 0
    6174:	09 f0       	breq	.+2      	; 0x6178 <main+0x950>
    6176:	78 c4       	rjmp	.+2288   	; 0x6a68 <main+0x1240>
    6178:	80 91 ad 29 	lds	r24, 0x29AD	; 0x8029ad <priming>
    617c:	81 30       	cpi	r24, 0x01	; 1
    617e:	81 f5       	brne	.+96     	; 0x61e0 <main+0x9b8>
    6180:	80 91 05 28 	lds	r24, 0x2805	; 0x802805 <change_flag>
    6184:	88 23       	and	r24, r24
    6186:	61 f1       	breq	.+88     	; 0x61e0 <main+0x9b8>
    6188:	0e 94 3a 1f 	call	0x3e74	; 0x3e74 <startDispense()>
    618c:	83 e0       	ldi	r24, 0x03	; 3
    618e:	90 e0       	ldi	r25, 0x00	; 0
    6190:	0e 94 42 1f 	call	0x3e84	; 0x3e84 <titrateModeSpeed(int)>
_ZN4U8G211clearBufferEv():
    6194:	82 ef       	ldi	r24, 0xF2	; 242
    6196:	9f e2       	ldi	r25, 0x2F	; 47
    6198:	0e 94 e5 25 	call	0x4bca	; 0x4bca <u8g2_ClearBuffer>
_ZN4U8G27setFontEPKh():
    619c:	84 e6       	ldi	r24, 0x64	; 100
    619e:	94 e0       	ldi	r25, 0x04	; 4
    61a0:	0e 94 20 1a 	call	0x3440	; 0x3440 <u8g2_SetFont.constprop.86>
display_priming():
    61a4:	47 e2       	ldi	r20, 0x27	; 39
    61a6:	5b eb       	ldi	r21, 0xBB	; 187
    61a8:	6a e0       	ldi	r22, 0x0A	; 10
    61aa:	84 e1       	ldi	r24, 0x14	; 20
    61ac:	0e 94 9a 1c 	call	0x3934	; 0x3934 <U8G2::drawStr(unsigned char, unsigned char, char const*) [clone .constprop.90]>
_ZN4U8G28drawLineEhhhh():
    61b0:	6d e0       	ldi	r22, 0x0D	; 13
    61b2:	8d e0       	ldi	r24, 0x0D	; 13
    61b4:	0e 94 2c 19 	call	0x3258	; 0x3258 <u8g2_DrawLine.constprop.83>
_ZN4U8G27setFontEPKh():
    61b8:	84 e6       	ldi	r24, 0x64	; 100
    61ba:	94 e0       	ldi	r25, 0x04	; 4
    61bc:	0e 94 20 1a 	call	0x3440	; 0x3440 <u8g2_SetFont.constprop.86>
display_priming():
    61c0:	40 e5       	ldi	r20, 0x50	; 80
    61c2:	5b eb       	ldi	r21, 0xBB	; 187
    61c4:	6e e1       	ldi	r22, 0x1E	; 30
    61c6:	8d e0       	ldi	r24, 0x0D	; 13
    61c8:	0e 94 9a 1c 	call	0x3934	; 0x3934 <U8G2::drawStr(unsigned char, unsigned char, char const*) [clone .constprop.90]>
    61cc:	48 e4       	ldi	r20, 0x48	; 72
    61ce:	5b eb       	ldi	r21, 0xBB	; 187
    61d0:	6d e2       	ldi	r22, 0x2D	; 45
    61d2:	8a e2       	ldi	r24, 0x2A	; 42
    61d4:	0e 94 9a 1c 	call	0x3934	; 0x3934 <U8G2::drawStr(unsigned char, unsigned char, char const*) [clone .constprop.90]>
_ZN4U8G210sendBufferEv():
    61d8:	0e 94 0e 1d 	call	0x3a1c	; 0x3a1c <u8g2_SendBuffer.constprop.82>
display_priming():
    61dc:	10 92 05 28 	sts	0x2805, r1	; 0x802805 <change_flag>
    61e0:	80 91 ad 29 	lds	r24, 0x29AD	; 0x8029ad <priming>
    61e4:	82 30       	cpi	r24, 0x02	; 2
    61e6:	09 f0       	breq	.+2      	; 0x61ea <main+0x9c2>
    61e8:	17 ce       	rjmp	.-978    	; 0x5e18 <main+0x5f0>
    61ea:	0e 94 2d 1f 	call	0x3e5a	; 0x3e5a <stopDispense()>
    61ee:	10 92 ad 29 	sts	0x29AD, r1	; 0x8029ad <priming>
    61f2:	10 92 b5 29 	sts	0x29B5, r1	; 0x8029b5 <menus>
    61f6:	10 92 b6 29 	sts	0x29B6, r1	; 0x8029b6 <menus+0x1>
    61fa:	81 e0       	ldi	r24, 0x01	; 1
    61fc:	80 93 05 28 	sts	0x2805, r24	; 0x802805 <change_flag>
    6200:	10 92 b0 29 	sts	0x29B0, r1	; 0x8029b0 <once>
    6204:	10 92 b3 29 	sts	0x29B3, r1	; 0x8029b3 <previousPos>
    6208:	10 92 b4 29 	sts	0x29B4, r1	; 0x8029b4 <previousPos+0x1>
    620c:	10 92 b1 29 	sts	0x29B1, r1	; 0x8029b1 <encoder0Pos>
    6210:	10 92 b2 29 	sts	0x29B2, r1	; 0x8029b2 <encoder0Pos+0x1>
    6214:	10 92 a7 29 	sts	0x29A7, r1	; 0x8029a7 <stepperCount>
    6218:	10 92 a8 29 	sts	0x29A8, r1	; 0x8029a8 <stepperCount+0x1>
    621c:	10 92 a9 29 	sts	0x29A9, r1	; 0x8029a9 <stepperCount+0x2>
    6220:	10 92 aa 29 	sts	0x29AA, r1	; 0x8029aa <stepperCount+0x3>
    6224:	bd c2       	rjmp	.+1402   	; 0x67a0 <main+0xf78>
display_titrate():
    6226:	80 91 00 28 	lds	r24, 0x2800	; 0x802800 <__DATA_REGION_ORIGIN__>
    622a:	88 23       	and	r24, r24
    622c:	71 f0       	breq	.+28     	; 0x624a <main+0xa22>
_ZN4U8G212clearDisplayEv():
    622e:	82 ef       	ldi	r24, 0xF2	; 242
    6230:	9f e2       	ldi	r25, 0x2F	; 47
    6232:	0e 94 fa 25 	call	0x4bf4	; 0x4bf4 <u8g2_ClearDisplay>
_ZN4U8G211clearBufferEv():
    6236:	82 ef       	ldi	r24, 0xF2	; 242
    6238:	9f e2       	ldi	r25, 0x2F	; 47
    623a:	0e 94 e5 25 	call	0x4bca	; 0x4bca <u8g2_ClearBuffer>
display_titrate():
    623e:	88 ed       	ldi	r24, 0xD8	; 216
    6240:	9e e2       	ldi	r25, 0x2E	; 46
    6242:	0e 94 27 15 	call	0x2a4e	; 0x2a4e <Ticker::start()>
    6246:	10 92 00 28 	sts	0x2800, r1	; 0x802800 <__DATA_REGION_ORIGIN__>
    624a:	80 91 ae 29 	lds	r24, 0x29AE	; 0x8029ae <pos1>
    624e:	90 91 af 29 	lds	r25, 0x29AF	; 0x8029af <pos1+0x1>
    6252:	00 97       	sbiw	r24, 0x00	; 0
    6254:	09 f0       	breq	.+2      	; 0x6258 <main+0xa30>
    6256:	5d c1       	rjmp	.+698    	; 0x6512 <main+0xcea>
    6258:	80 91 b1 29 	lds	r24, 0x29B1	; 0x8029b1 <encoder0Pos>
    625c:	90 91 b2 29 	lds	r25, 0x29B2	; 0x8029b2 <encoder0Pos+0x1>
    6260:	20 91 97 29 	lds	r18, 0x2997	; 0x802997 <titrateMode>
    6264:	28 17       	cp	r18, r24
    6266:	19 06       	cpc	r1, r25
    6268:	71 f0       	breq	.+28     	; 0x6286 <main+0xa5e>
    626a:	80 91 b1 29 	lds	r24, 0x29B1	; 0x8029b1 <encoder0Pos>
    626e:	90 91 b2 29 	lds	r25, 0x29B2	; 0x8029b2 <encoder0Pos+0x1>
    6272:	f8 2e       	mov	r15, r24
    6274:	80 93 97 29 	sts	0x2997, r24	; 0x802997 <titrateMode>
    6278:	99 27       	eor	r25, r25
    627a:	0e 94 42 1f 	call	0x3e84	; 0x3e84 <titrateModeSpeed(int)>
    627e:	f1 10       	cpse	r15, r1
    6280:	30 c1       	rjmp	.+608    	; 0x64e2 <main+0xcba>
    6282:	0e 94 2d 1f 	call	0x3e5a	; 0x3e5a <stopDispense()>
    6286:	80 91 b0 29 	lds	r24, 0x29B0	; 0x8029b0 <once>
    628a:	81 11       	cpse	r24, r1
    628c:	a7 c0       	rjmp	.+334    	; 0x63dc <main+0xbb4>
_ZN4U8G211clearBufferEv():
    628e:	82 ef       	ldi	r24, 0xF2	; 242
    6290:	9f e2       	ldi	r25, 0x2F	; 47
    6292:	0e 94 e5 25 	call	0x4bca	; 0x4bca <u8g2_ClearBuffer>
_ZN4U8G27setFontEPKh():
    6296:	84 e6       	ldi	r24, 0x64	; 100
    6298:	94 e0       	ldi	r25, 0x04	; 4
    629a:	0e 94 20 1a 	call	0x3440	; 0x3440 <u8g2_SetFont.constprop.86>
_ZN4U8G28drawLineEhhhh():
    629e:	6d e0       	ldi	r22, 0x0D	; 13
    62a0:	8d e0       	ldi	r24, 0x0D	; 13
    62a2:	0e 94 2c 19 	call	0x3258	; 0x3258 <u8g2_DrawLine.constprop.83>
display_titrate():
    62a6:	49 ea       	ldi	r20, 0xA9	; 169
    62a8:	5a eb       	ldi	r21, 0xBA	; 186
    62aa:	6a e0       	ldi	r22, 0x0A	; 10
    62ac:	89 e1       	ldi	r24, 0x19	; 25
    62ae:	0e 94 9a 1c 	call	0x3934	; 0x3934 <U8G2::drawStr(unsigned char, unsigned char, char const*) [clone .constprop.90]>
_ZN4U8G28drawLineEhhhh():
    62b2:	6c e1       	ldi	r22, 0x1C	; 28
    62b4:	8c e1       	ldi	r24, 0x1C	; 28
    62b6:	0e 94 2c 19 	call	0x3258	; 0x3258 <u8g2_DrawLine.constprop.83>
_ZN4U8G27setFontEPKh():
    62ba:	84 e6       	ldi	r24, 0x64	; 100
    62bc:	94 e0       	ldi	r25, 0x04	; 4
    62be:	0e 94 20 1a 	call	0x3440	; 0x3440 <u8g2_SetFont.constprop.86>
display_titrate():
    62c2:	48 e6       	ldi	r20, 0x68	; 104
    62c4:	59 eb       	ldi	r21, 0xB9	; 185
    62c6:	69 e1       	ldi	r22, 0x19	; 25
    62c8:	8c e1       	ldi	r24, 0x1C	; 28
    62ca:	0e 94 9a 1c 	call	0x3934	; 0x3934 <U8G2::drawStr(unsigned char, unsigned char, char const*) [clone .constprop.90]>
    62ce:	80 91 91 29 	lds	r24, 0x2991	; 0x802991 <User>
    62d2:	90 91 92 29 	lds	r25, 0x2992	; 0x802992 <User+0x1>
    62d6:	fc 01       	movw	r30, r24
    62d8:	ee 0f       	add	r30, r30
    62da:	ff 1f       	adc	r31, r31
    62dc:	e1 5d       	subi	r30, 0xD1	; 209
    62de:	f7 44       	sbci	r31, 0x47	; 71
    62e0:	20 81       	ld	r18, Z
    62e2:	20 93 6f 30 	sts	0x306F, r18	; 0x80306f <u8g2+0x81>
_ZN4U8G29setCursorEhh():
    62e6:	29 e1       	ldi	r18, 0x19	; 25
    62e8:	20 93 70 30 	sts	0x3070, r18	; 0x803070 <u8g2+0x82>
display_titrate():
    62ec:	26 e0       	ldi	r18, 0x06	; 6
    62ee:	28 9f       	mul	r18, r24
    62f0:	b0 01       	movw	r22, r0
    62f2:	29 9f       	mul	r18, r25
    62f4:	70 0d       	add	r23, r0
    62f6:	11 24       	eor	r1, r1
    62f8:	6d 50       	subi	r22, 0x0D	; 13
    62fa:	71 4d       	sbci	r23, 0xD1	; 209
    62fc:	8e ee       	ldi	r24, 0xEE	; 238
    62fe:	9f e2       	ldi	r25, 0x2F	; 47
    6300:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <Print::print(String const&)>
    6304:	44 e8       	ldi	r20, 0x84	; 132
    6306:	59 eb       	ldi	r21, 0xB9	; 185
    6308:	6c e3       	ldi	r22, 0x3C	; 60
    630a:	84 e6       	ldi	r24, 0x64	; 100
    630c:	0e 94 9a 1c 	call	0x3934	; 0x3934 <U8G2::drawStr(unsigned char, unsigned char, char const*) [clone .constprop.90]>
_ZN4U8G27setFontEPKh():
    6310:	80 e9       	ldi	r24, 0x90	; 144
    6312:	92 e0       	ldi	r25, 0x02	; 2
    6314:	0e 94 20 1a 	call	0x3440	; 0x3440 <u8g2_SetFont.constprop.86>
display_titrate():
    6318:	80 91 95 29 	lds	r24, 0x2995	; 0x802995 <totalDispense>
    631c:	90 91 96 29 	lds	r25, 0x2996	; 0x802996 <totalDispense+0x1>
_ZN4U8G29setCursorEhh():
    6320:	25 e0       	ldi	r18, 0x05	; 5
    6322:	20 93 6f 30 	sts	0x306F, r18	; 0x80306f <u8g2+0x81>
    6326:	bc e3       	ldi	r27, 0x3C	; 60
    6328:	fb 2e       	mov	r15, r27
    632a:	f0 92 70 30 	sts	0x3070, r15	; 0x803070 <u8g2+0x82>
number2Digit():
    632e:	cf 82       	std	Y+7, r12	; 0x07
    6330:	d8 86       	std	Y+8, r13	; 0x08
    6332:	e9 86       	std	Y+9, r14	; 0x09
display_titrate():
    6334:	64 e6       	ldi	r22, 0x64	; 100
    6336:	70 e0       	ldi	r23, 0x00	; 0
    6338:	b5 d7       	rcall	.+3946   	; 0x72a4 <__udivmodhi4>
    633a:	98 2e       	mov	r9, r24
    633c:	89 2e       	mov	r8, r25
number2Digit():
    633e:	7f 93       	push	r23
    6340:	6f 93       	push	r22
    6342:	86 eb       	ldi	r24, 0xB6	; 182
    6344:	a8 2e       	mov	r10, r24
    6346:	8a eb       	ldi	r24, 0xBA	; 186
    6348:	b8 2e       	mov	r11, r24
    634a:	bf 92       	push	r11
    634c:	af 92       	push	r10
    634e:	1f 93       	push	r17
    6350:	0f 93       	push	r16
    6352:	0e 94 bd 3b 	call	0x777a	; 0x777a <sprintf>
    6356:	b8 01       	movw	r22, r16
    6358:	ce 01       	movw	r24, r28
    635a:	01 96       	adiw	r24, 0x01	; 1
    635c:	0e 94 47 24 	call	0x488e	; 0x488e <String::String(char const*)>
display_titrate():
    6360:	be 01       	movw	r22, r28
    6362:	6f 5f       	subi	r22, 0xFF	; 255
    6364:	7f 4f       	sbci	r23, 0xFF	; 255
    6366:	8e ee       	ldi	r24, 0xEE	; 238
    6368:	9f e2       	ldi	r25, 0x2F	; 47
    636a:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <Print::print(String const&)>
__base_dtor ():
    636e:	89 81       	ldd	r24, Y+1	; 0x01
    6370:	9a 81       	ldd	r25, Y+2	; 0x02
    6372:	0e 94 5f 3a 	call	0x74be	; 0x74be <free>
display_titrate():
    6376:	45 ef       	ldi	r20, 0xF5	; 245
    6378:	5a eb       	ldi	r21, 0xBA	; 186
    637a:	6c e3       	ldi	r22, 0x3C	; 60
    637c:	88 e2       	ldi	r24, 0x28	; 40
    637e:	0e 94 9a 1c 	call	0x3934	; 0x3934 <U8G2::drawStr(unsigned char, unsigned char, char const*) [clone .constprop.90]>
_ZN4U8G29setCursorEhh():
    6382:	87 e3       	ldi	r24, 0x37	; 55
    6384:	80 93 6f 30 	sts	0x306F, r24	; 0x80306f <u8g2+0x81>
    6388:	f0 92 70 30 	sts	0x3070, r15	; 0x803070 <u8g2+0x82>
number2Digit():
    638c:	cf 82       	std	Y+7, r12	; 0x07
    638e:	d8 86       	std	Y+8, r13	; 0x08
    6390:	e9 86       	std	Y+9, r14	; 0x09
    6392:	8f 92       	push	r8
    6394:	9f 92       	push	r9
    6396:	bf 92       	push	r11
    6398:	af 92       	push	r10
    639a:	1f 93       	push	r17
    639c:	0f 93       	push	r16
    639e:	0e 94 bd 3b 	call	0x777a	; 0x777a <sprintf>
    63a2:	b8 01       	movw	r22, r16
    63a4:	ce 01       	movw	r24, r28
    63a6:	01 96       	adiw	r24, 0x01	; 1
    63a8:	0e 94 47 24 	call	0x488e	; 0x488e <String::String(char const*)>
display_titrate():
    63ac:	be 01       	movw	r22, r28
    63ae:	6f 5f       	subi	r22, 0xFF	; 255
    63b0:	7f 4f       	sbci	r23, 0xFF	; 255
    63b2:	8e ee       	ldi	r24, 0xEE	; 238
    63b4:	9f e2       	ldi	r25, 0x2F	; 47
    63b6:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <Print::print(String const&)>
__base_dtor ():
    63ba:	89 81       	ldd	r24, Y+1	; 0x01
    63bc:	9a 81       	ldd	r25, Y+2	; 0x02
    63be:	0e 94 5f 3a 	call	0x74be	; 0x74be <free>
display_titrate():
    63c2:	44 e8       	ldi	r20, 0x84	; 132
    63c4:	59 eb       	ldi	r21, 0xB9	; 185
    63c6:	6c e3       	ldi	r22, 0x3C	; 60
    63c8:	8a e5       	ldi	r24, 0x5A	; 90
    63ca:	0e 94 9a 1c 	call	0x3934	; 0x3934 <U8G2::drawStr(unsigned char, unsigned char, char const*) [clone .constprop.90]>
_ZN4U8G210sendBufferEv():
    63ce:	0e 94 0e 1d 	call	0x3a1c	; 0x3a1c <u8g2_SendBuffer.constprop.82>
display_titrate():
    63d2:	81 e0       	ldi	r24, 0x01	; 1
    63d4:	80 93 b0 29 	sts	0x29B0, r24	; 0x8029b0 <once>
    63d8:	cd bf       	out	0x3d, r28	; 61
    63da:	de bf       	out	0x3e, r29	; 62
    63dc:	80 90 a7 29 	lds	r8, 0x29A7	; 0x8029a7 <stepperCount>
    63e0:	90 90 a8 29 	lds	r9, 0x29A8	; 0x8029a8 <stepperCount+0x1>
    63e4:	a0 90 a9 29 	lds	r10, 0x29A9	; 0x8029a9 <stepperCount+0x2>
    63e8:	b0 90 aa 29 	lds	r11, 0x29AA	; 0x8029aa <stepperCount+0x3>
    63ec:	c5 01       	movw	r24, r10
    63ee:	b4 01       	movw	r22, r8
    63f0:	24 e1       	ldi	r18, 0x14	; 20
    63f2:	30 e0       	ldi	r19, 0x00	; 0
    63f4:	40 e0       	ldi	r20, 0x00	; 0
    63f6:	50 e0       	ldi	r21, 0x00	; 0
    63f8:	7c d7       	rcall	.+3832   	; 0x72f2 <__udivmodsi4>
    63fa:	67 2b       	or	r22, r23
    63fc:	68 2b       	or	r22, r24
    63fe:	69 2b       	or	r22, r25
    6400:	09 f0       	breq	.+2      	; 0x6404 <main+0xbdc>
    6402:	0a cd       	rjmp	.-1516   	; 0x5e18 <main+0x5f0>
    6404:	80 91 8d 29 	lds	r24, 0x298D	; 0x80298d <prev_stepperCount>
    6408:	90 91 8e 29 	lds	r25, 0x298E	; 0x80298e <prev_stepperCount+0x1>
    640c:	a0 91 8f 29 	lds	r26, 0x298F	; 0x80298f <prev_stepperCount+0x2>
    6410:	b0 91 90 29 	lds	r27, 0x2990	; 0x802990 <prev_stepperCount+0x3>
    6414:	88 16       	cp	r8, r24
    6416:	99 06       	cpc	r9, r25
    6418:	aa 06       	cpc	r10, r26
    641a:	bb 06       	cpc	r11, r27
    641c:	09 f4       	brne	.+2      	; 0x6420 <main+0xbf8>
    641e:	fc cc       	rjmp	.-1544   	; 0x5e18 <main+0x5f0>
    6420:	80 92 8d 29 	sts	0x298D, r8	; 0x80298d <prev_stepperCount>
    6424:	90 92 8e 29 	sts	0x298E, r9	; 0x80298e <prev_stepperCount+0x1>
    6428:	a0 92 8f 29 	sts	0x298F, r10	; 0x80298f <prev_stepperCount+0x2>
    642c:	b0 92 90 29 	sts	0x2990, r11	; 0x802990 <prev_stepperCount+0x3>
    6430:	20 91 97 29 	lds	r18, 0x2997	; 0x802997 <titrateMode>
    6434:	60 91 89 29 	lds	r22, 0x2989	; 0x802989 <tempVal>
    6438:	70 91 8a 29 	lds	r23, 0x298A	; 0x80298a <tempVal+0x1>
    643c:	80 91 8b 29 	lds	r24, 0x298B	; 0x80298b <tempVal+0x2>
    6440:	90 91 8c 29 	lds	r25, 0x298C	; 0x80298c <tempVal+0x3>
    6444:	23 30       	cpi	r18, 0x03	; 3
    6446:	09 f0       	breq	.+2      	; 0x644a <main+0xc22>
    6448:	a9 c0       	rjmp	.+338    	; 0x659c <main+0xd74>
    644a:	20 e0       	ldi	r18, 0x00	; 0
    644c:	30 e0       	ldi	r19, 0x00	; 0
    644e:	40 ef       	ldi	r20, 0xF0	; 240
    6450:	5f e3       	ldi	r21, 0x3F	; 63
    6452:	98 d6       	rcall	.+3376   	; 0x7184 <__addsf3>
    6454:	60 93 89 29 	sts	0x2989, r22	; 0x802989 <tempVal>
    6458:	70 93 8a 29 	sts	0x298A, r23	; 0x80298a <tempVal+0x1>
    645c:	80 93 8b 29 	sts	0x298B, r24	; 0x80298b <tempVal+0x2>
    6460:	90 93 8c 29 	sts	0x298C, r25	; 0x80298c <tempVal+0x3>
    6464:	60 91 89 29 	lds	r22, 0x2989	; 0x802989 <tempVal>
    6468:	70 91 8a 29 	lds	r23, 0x298A	; 0x80298a <tempVal+0x1>
    646c:	80 91 8b 29 	lds	r24, 0x298B	; 0x80298b <tempVal+0x2>
    6470:	90 91 8c 29 	lds	r25, 0x298C	; 0x80298c <tempVal+0x3>
    6474:	eb d6       	rcall	.+3542   	; 0x724c <__fixunssfsi>
    6476:	60 93 95 29 	sts	0x2995, r22	; 0x802995 <totalDispense>
    647a:	70 93 96 29 	sts	0x2996, r23	; 0x802996 <totalDispense+0x1>
    647e:	10 92 b0 29 	sts	0x29B0, r1	; 0x8029b0 <once>
    6482:	67 38       	cpi	r22, 0x87	; 135
    6484:	73 41       	sbci	r23, 0x13	; 19
    6486:	08 f4       	brcc	.+2      	; 0x648a <main+0xc62>
    6488:	c7 cc       	rjmp	.-1650   	; 0x5e18 <main+0x5f0>
    648a:	0e 94 2d 1f 	call	0x3e5a	; 0x3e5a <stopDispense()>
stop():
    648e:	10 92 d8 2e 	sts	0x2ED8, r1	; 0x802ed8 <animate>
    6492:	10 92 e3 2e 	sts	0x2EE3, r1	; 0x802ee3 <animate+0xb>
    6496:	10 92 e4 2e 	sts	0x2EE4, r1	; 0x802ee4 <animate+0xc>
    649a:	10 92 e5 2e 	sts	0x2EE5, r1	; 0x802ee5 <animate+0xd>
    649e:	10 92 e6 2e 	sts	0x2EE6, r1	; 0x802ee6 <animate+0xe>
    64a2:	10 92 e7 2e 	sts	0x2EE7, r1	; 0x802ee7 <animate+0xf>
    64a6:	10 92 e8 2e 	sts	0x2EE8, r1	; 0x802ee8 <animate+0x10>
digitalWrite():
    64aa:	61 e0       	ldi	r22, 0x01	; 1
    64ac:	83 e1       	ldi	r24, 0x13	; 19
    64ae:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <digitalWrite.part.2>
interval():
    64b2:	80 91 ab 2e 	lds	r24, 0x2EAB	; 0x802eab <buzz+0x9>
    64b6:	90 91 ac 2e 	lds	r25, 0x2EAC	; 0x802eac <buzz+0xa>
    64ba:	89 2b       	or	r24, r25
    64bc:	09 f4       	brne	.+2      	; 0x64c0 <main+0xc98>
    64be:	7d c0       	rjmp	.+250    	; 0x65ba <main+0xd92>
    64c0:	88 eb       	ldi	r24, 0xB8	; 184
    64c2:	9b e0       	ldi	r25, 0x0B	; 11
    64c4:	a0 e0       	ldi	r26, 0x00	; 0
    64c6:	b0 e0       	ldi	r27, 0x00	; 0
    64c8:	80 93 a3 2e 	sts	0x2EA3, r24	; 0x802ea3 <buzz+0x1>
    64cc:	90 93 a4 2e 	sts	0x2EA4, r25	; 0x802ea4 <buzz+0x2>
    64d0:	a0 93 a5 2e 	sts	0x2EA5, r26	; 0x802ea5 <buzz+0x3>
    64d4:	b0 93 a6 2e 	sts	0x2EA6, r27	; 0x802ea6 <buzz+0x4>
display_priming():
    64d8:	82 ea       	ldi	r24, 0xA2	; 162
    64da:	9e e2       	ldi	r25, 0x2E	; 46
    64dc:	0e 94 27 15 	call	0x2a4e	; 0x2a4e <Ticker::start()>
    64e0:	9b cc       	rjmp	.-1738   	; 0x5e18 <main+0x5f0>
display_titrate():
    64e2:	80 91 cc 2e 	lds	r24, 0x2ECC	; 0x802ecc <motor+0xf>
    64e6:	90 91 cd 2e 	lds	r25, 0x2ECD	; 0x802ecd <motor+0x10>
    64ea:	89 2b       	or	r24, r25
    64ec:	09 f0       	breq	.+2      	; 0x64f0 <main+0xcc8>
    64ee:	cb ce       	rjmp	.-618    	; 0x6286 <main+0xa5e>
    64f0:	80 91 95 29 	lds	r24, 0x2995	; 0x802995 <totalDispense>
    64f4:	90 91 96 29 	lds	r25, 0x2996	; 0x802996 <totalDispense+0x1>
    64f8:	88 38       	cpi	r24, 0x88	; 136
    64fa:	93 41       	sbci	r25, 0x13	; 19
    64fc:	08 f0       	brcs	.+2      	; 0x6500 <main+0xcd8>
    64fe:	c3 ce       	rjmp	.-634    	; 0x6286 <main+0xa5e>
    6500:	84 e1       	ldi	r24, 0x14	; 20
    6502:	90 e0       	ldi	r25, 0x00	; 0
    6504:	80 93 01 28 	sts	0x2801, r24	; 0x802801 <yPos>
    6508:	90 93 02 28 	sts	0x2802, r25	; 0x802802 <yPos+0x1>
    650c:	0e 94 3a 1f 	call	0x3e74	; 0x3e74 <startDispense()>
    6510:	ba ce       	rjmp	.-652    	; 0x6286 <main+0xa5e>
    6512:	01 97       	sbiw	r24, 0x01	; 1
    6514:	09 f0       	breq	.+2      	; 0x6518 <main+0xcf0>
    6516:	b7 ce       	rjmp	.-658    	; 0x6286 <main+0xa5e>
    6518:	80 91 93 29 	lds	r24, 0x2993	; 0x802993 <double_flag>
    651c:	90 91 94 29 	lds	r25, 0x2994	; 0x802994 <double_flag+0x1>
    6520:	01 97       	sbiw	r24, 0x01	; 1
    6522:	09 f0       	breq	.+2      	; 0x6526 <main+0xcfe>
    6524:	b0 ce       	rjmp	.-672    	; 0x6286 <main+0xa5e>
digitalWrite():
    6526:	60 e0       	ldi	r22, 0x00	; 0
    6528:	87 e1       	ldi	r24, 0x17	; 23
    652a:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <digitalWrite.part.2>
    652e:	61 e0       	ldi	r22, 0x01	; 1
    6530:	86 e1       	ldi	r24, 0x16	; 22
    6532:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <digitalWrite.part.2>
    6536:	61 e0       	ldi	r22, 0x01	; 1
    6538:	8f e0       	ldi	r24, 0x0F	; 15
    653a:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <digitalWrite.part.2>
    653e:	60 e0       	ldi	r22, 0x00	; 0
    6540:	80 e1       	ldi	r24, 0x10	; 16
    6542:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <digitalWrite.part.2>
    6546:	60 e0       	ldi	r22, 0x00	; 0
    6548:	81 e1       	ldi	r24, 0x11	; 17
    654a:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <digitalWrite.part.2>
    654e:	90 e4       	ldi	r25, 0x40	; 64
    6550:	a9 2e       	mov	r10, r25
    6552:	9f e1       	ldi	r25, 0x1F	; 31
    6554:	b9 2e       	mov	r11, r25
delayMicroseconds():
    6556:	2b ec       	ldi	r18, 0xCB	; 203
    6558:	82 2e       	mov	r8, r18
    655a:	27 e0       	ldi	r18, 0x07	; 7
    655c:	92 2e       	mov	r9, r18
digitalWrite():
    655e:	61 e0       	ldi	r22, 0x01	; 1
    6560:	82 e1       	ldi	r24, 0x12	; 18
    6562:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <digitalWrite.part.2>
delayMicroseconds():
    6566:	c4 01       	movw	r24, r8
    6568:	01 97       	sbiw	r24, 0x01	; 1
    656a:	f1 f7       	brne	.-4      	; 0x6568 <main+0xd40>
digitalWrite():
    656c:	60 e0       	ldi	r22, 0x00	; 0
    656e:	82 e1       	ldi	r24, 0x12	; 18
    6570:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <digitalWrite.part.2>
delayMicroseconds():
    6574:	c4 01       	movw	r24, r8
    6576:	01 97       	sbiw	r24, 0x01	; 1
    6578:	f1 f7       	brne	.-4      	; 0x6576 <main+0xd4e>
    657a:	81 e0       	ldi	r24, 0x01	; 1
    657c:	a8 1a       	sub	r10, r24
    657e:	b1 08       	sbc	r11, r1
display_titrate():
    6580:	71 f7       	brne	.-36     	; 0x655e <main+0xd36>
    6582:	10 92 ae 29 	sts	0x29AE, r1	; 0x8029ae <pos1>
    6586:	10 92 af 29 	sts	0x29AF, r1	; 0x8029af <pos1+0x1>
    658a:	10 92 b1 29 	sts	0x29B1, r1	; 0x8029b1 <encoder0Pos>
    658e:	10 92 b2 29 	sts	0x29B2, r1	; 0x8029b2 <encoder0Pos+0x1>
    6592:	10 92 93 29 	sts	0x2993, r1	; 0x802993 <double_flag>
    6596:	10 92 94 29 	sts	0x2994, r1	; 0x802994 <double_flag+0x1>
    659a:	75 ce       	rjmp	.-790    	; 0x6286 <main+0xa5e>
    659c:	22 30       	cpi	r18, 0x02	; 2
    659e:	29 f4       	brne	.+10     	; 0x65aa <main+0xd82>
    65a0:	20 e0       	ldi	r18, 0x00	; 0
    65a2:	30 e0       	ldi	r19, 0x00	; 0
    65a4:	40 e0       	ldi	r20, 0x00	; 0
    65a6:	5f e3       	ldi	r21, 0x3F	; 63
    65a8:	54 cf       	rjmp	.-344    	; 0x6452 <main+0xc2a>
    65aa:	21 30       	cpi	r18, 0x01	; 1
    65ac:	09 f0       	breq	.+2      	; 0x65b0 <main+0xd88>
    65ae:	5a cf       	rjmp	.-332    	; 0x6464 <main+0xc3c>
    65b0:	20 e0       	ldi	r18, 0x00	; 0
    65b2:	30 e0       	ldi	r19, 0x00	; 0
    65b4:	40 e7       	ldi	r20, 0x70	; 112
    65b6:	5e e3       	ldi	r21, 0x3E	; 62
    65b8:	4c cf       	rjmp	.-360    	; 0x6452 <main+0xc2a>
main():
    65ba:	80 ec       	ldi	r24, 0xC0	; 192
    65bc:	96 ec       	ldi	r25, 0xC6	; 198
    65be:	ad e2       	ldi	r26, 0x2D	; 45
    65c0:	b0 e0       	ldi	r27, 0x00	; 0
    65c2:	82 cf       	rjmp	.-252    	; 0x64c8 <main+0xca0>
display_dispense():
    65c4:	40 91 9b 29 	lds	r20, 0x299B	; 0x80299b <dispense_val>
    65c8:	50 91 9c 29 	lds	r21, 0x299C	; 0x80299c <dispense_val+0x1>
    65cc:	60 91 9d 29 	lds	r22, 0x299D	; 0x80299d <dispense_val+0x2>
    65d0:	70 91 9e 29 	lds	r23, 0x299E	; 0x80299e <dispense_val+0x3>
    65d4:	80 91 b3 29 	lds	r24, 0x29B3	; 0x8029b3 <previousPos>
    65d8:	90 91 b4 29 	lds	r25, 0x29B4	; 0x8029b4 <previousPos+0x1>
    65dc:	09 2e       	mov	r0, r25
    65de:	00 0c       	add	r0, r0
    65e0:	aa 0b       	sbc	r26, r26
    65e2:	bb 0b       	sbc	r27, r27
    65e4:	84 17       	cp	r24, r20
    65e6:	95 07       	cpc	r25, r21
    65e8:	a6 07       	cpc	r26, r22
    65ea:	b7 07       	cpc	r27, r23
    65ec:	31 f0       	breq	.+12     	; 0x65fa <main+0xdd2>
    65ee:	40 93 b3 29 	sts	0x29B3, r20	; 0x8029b3 <previousPos>
    65f2:	50 93 b4 29 	sts	0x29B4, r21	; 0x8029b4 <previousPos+0x1>
    65f6:	10 92 b0 29 	sts	0x29B0, r1	; 0x8029b0 <once>
    65fa:	80 91 b0 29 	lds	r24, 0x29B0	; 0x8029b0 <once>
    65fe:	81 11       	cpse	r24, r1
    6600:	5b c0       	rjmp	.+182    	; 0x66b8 <main+0xe90>
_ZN4U8G211clearBufferEv():
    6602:	82 ef       	ldi	r24, 0xF2	; 242
    6604:	9f e2       	ldi	r25, 0x2F	; 47
    6606:	0e 94 e5 25 	call	0x4bca	; 0x4bca <u8g2_ClearBuffer>
_ZN4U8G27setFontEPKh():
    660a:	84 e6       	ldi	r24, 0x64	; 100
    660c:	94 e0       	ldi	r25, 0x04	; 4
    660e:	0e 94 20 1a 	call	0x3440	; 0x3440 <u8g2_SetFont.constprop.86>
display_dispense():
    6612:	4b eb       	ldi	r20, 0xBB	; 187
    6614:	5a eb       	ldi	r21, 0xBA	; 186
    6616:	6a e0       	ldi	r22, 0x0A	; 10
    6618:	84 e1       	ldi	r24, 0x14	; 20
    661a:	0e 94 9a 1c 	call	0x3934	; 0x3934 <U8G2::drawStr(unsigned char, unsigned char, char const*) [clone .constprop.90]>
_ZN4U8G28drawLineEhhhh():
    661e:	6d e0       	ldi	r22, 0x0D	; 13
    6620:	8d e0       	ldi	r24, 0x0D	; 13
    6622:	0e 94 2c 19 	call	0x3258	; 0x3258 <u8g2_DrawLine.constprop.83>
    6626:	6c e1       	ldi	r22, 0x1C	; 28
    6628:	8c e1       	ldi	r24, 0x1C	; 28
    662a:	0e 94 2c 19 	call	0x3258	; 0x3258 <u8g2_DrawLine.constprop.83>
_ZN4U8G27setFontEPKh():
    662e:	84 e6       	ldi	r24, 0x64	; 100
    6630:	94 e0       	ldi	r25, 0x04	; 4
    6632:	0e 94 20 1a 	call	0x3440	; 0x3440 <u8g2_SetFont.constprop.86>
display_dispense():
    6636:	49 e6       	ldi	r20, 0x69	; 105
    6638:	59 eb       	ldi	r21, 0xB9	; 185
    663a:	69 e1       	ldi	r22, 0x19	; 25
    663c:	8c e1       	ldi	r24, 0x1C	; 28
    663e:	0e 94 9a 1c 	call	0x3934	; 0x3934 <U8G2::drawStr(unsigned char, unsigned char, char const*) [clone .constprop.90]>
    6642:	80 90 9b 29 	lds	r8, 0x299B	; 0x80299b <dispense_val>
    6646:	90 90 9c 29 	lds	r9, 0x299C	; 0x80299c <dispense_val+0x1>
    664a:	a0 90 9d 29 	lds	r10, 0x299D	; 0x80299d <dispense_val+0x2>
    664e:	b0 90 9e 29 	lds	r11, 0x299E	; 0x80299e <dispense_val+0x3>
_ZN4U8G27setFontEPKh():
    6652:	80 e9       	ldi	r24, 0x90	; 144
    6654:	92 e0       	ldi	r25, 0x02	; 2
    6656:	0e 94 20 1a 	call	0x3440	; 0x3440 <u8g2_SetFont.constprop.86>
_ZN4U8G29setCursorEhh():
    665a:	89 e1       	ldi	r24, 0x19	; 25
    665c:	80 93 6f 30 	sts	0x306F, r24	; 0x80306f <u8g2+0x81>
    6660:	7c e3       	ldi	r23, 0x3C	; 60
    6662:	f7 2e       	mov	r15, r23
    6664:	f0 92 70 30 	sts	0x3070, r15	; 0x803070 <u8g2+0x82>
display_dispense():
    6668:	c5 01       	movw	r24, r10
    666a:	b4 01       	movw	r22, r8
    666c:	2a e0       	ldi	r18, 0x0A	; 10
    666e:	30 e0       	ldi	r19, 0x00	; 0
    6670:	40 e0       	ldi	r20, 0x00	; 0
    6672:	50 e0       	ldi	r21, 0x00	; 0
    6674:	60 d6       	rcall	.+3264   	; 0x7336 <__divmodsi4>
    6676:	4b 01       	movw	r8, r22
    6678:	b9 01       	movw	r22, r18
    667a:	8e ee       	ldi	r24, 0xEE	; 238
    667c:	9f e2       	ldi	r25, 0x2F	; 47
    667e:	0e 94 27 22 	call	0x444e	; 0x444e <Print::print(int, int) [clone .constprop.47]>
    6682:	45 ef       	ldi	r20, 0xF5	; 245
    6684:	5a eb       	ldi	r21, 0xBA	; 186
    6686:	6c e3       	ldi	r22, 0x3C	; 60
    6688:	88 e2       	ldi	r24, 0x28	; 40
    668a:	0e 94 9a 1c 	call	0x3934	; 0x3934 <U8G2::drawStr(unsigned char, unsigned char, char const*) [clone .constprop.90]>
_ZN4U8G29setCursorEhh():
    668e:	87 e3       	ldi	r24, 0x37	; 55
    6690:	80 93 6f 30 	sts	0x306F, r24	; 0x80306f <u8g2+0x81>
    6694:	f0 92 70 30 	sts	0x3070, r15	; 0x803070 <u8g2+0x82>
display_dispense():
    6698:	b4 01       	movw	r22, r8
    669a:	8e ee       	ldi	r24, 0xEE	; 238
    669c:	9f e2       	ldi	r25, 0x2F	; 47
    669e:	0e 94 27 22 	call	0x444e	; 0x444e <Print::print(int, int) [clone .constprop.47]>
    66a2:	44 e8       	ldi	r20, 0x84	; 132
    66a4:	59 eb       	ldi	r21, 0xB9	; 185
    66a6:	6c e3       	ldi	r22, 0x3C	; 60
    66a8:	8a e5       	ldi	r24, 0x5A	; 90
    66aa:	0e 94 9a 1c 	call	0x3934	; 0x3934 <U8G2::drawStr(unsigned char, unsigned char, char const*) [clone .constprop.90]>
_ZN4U8G210sendBufferEv():
    66ae:	0e 94 0e 1d 	call	0x3a1c	; 0x3a1c <u8g2_SendBuffer.constprop.82>
display_dispense():
    66b2:	81 e0       	ldi	r24, 0x01	; 1
    66b4:	80 93 b0 29 	sts	0x29B0, r24	; 0x8029b0 <once>
    66b8:	80 91 ae 29 	lds	r24, 0x29AE	; 0x8029ae <pos1>
    66bc:	90 91 af 29 	lds	r25, 0x29AF	; 0x8029af <pos1+0x1>
    66c0:	00 97       	sbiw	r24, 0x00	; 0
    66c2:	09 f0       	breq	.+2      	; 0x66c6 <main+0xe9e>
    66c4:	82 c0       	rjmp	.+260    	; 0x67ca <main+0xfa2>
    66c6:	80 91 9a 29 	lds	r24, 0x299A	; 0x80299a <dispense_start>
    66ca:	88 23       	and	r24, r24
    66cc:	89 f1       	breq	.+98     	; 0x6730 <main+0xf08>
digitalWrite():
    66ce:	61 e0       	ldi	r22, 0x01	; 1
    66d0:	83 e1       	ldi	r24, 0x13	; 19
    66d2:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <digitalWrite.part.2>
interval():
    66d6:	80 91 ab 2e 	lds	r24, 0x2EAB	; 0x802eab <buzz+0x9>
    66da:	90 91 ac 2e 	lds	r25, 0x2EAC	; 0x802eac <buzz+0xa>
    66de:	89 2b       	or	r24, r25
    66e0:	09 f4       	brne	.+2      	; 0x66e4 <main+0xebc>
    66e2:	6e c0       	rjmp	.+220    	; 0x67c0 <main+0xf98>
    66e4:	84 ef       	ldi	r24, 0xF4	; 244
    66e6:	91 e0       	ldi	r25, 0x01	; 1
    66e8:	a0 e0       	ldi	r26, 0x00	; 0
    66ea:	b0 e0       	ldi	r27, 0x00	; 0
    66ec:	80 93 a3 2e 	sts	0x2EA3, r24	; 0x802ea3 <buzz+0x1>
    66f0:	90 93 a4 2e 	sts	0x2EA4, r25	; 0x802ea4 <buzz+0x2>
    66f4:	a0 93 a5 2e 	sts	0x2EA5, r26	; 0x802ea5 <buzz+0x3>
    66f8:	b0 93 a6 2e 	sts	0x2EA6, r27	; 0x802ea6 <buzz+0x4>
display_dispense():
    66fc:	82 ea       	ldi	r24, 0xA2	; 162
    66fe:	9e e2       	ldi	r25, 0x2E	; 46
    6700:	0e 94 27 15 	call	0x2a4e	; 0x2a4e <Ticker::start()>
    6704:	83 e0       	ldi	r24, 0x03	; 3
    6706:	90 e0       	ldi	r25, 0x00	; 0
    6708:	0e 94 42 1f 	call	0x3e84	; 0x3e84 <titrateModeSpeed(int)>
    670c:	84 e1       	ldi	r24, 0x14	; 20
    670e:	90 e0       	ldi	r25, 0x00	; 0
    6710:	80 93 01 28 	sts	0x2801, r24	; 0x802801 <yPos>
    6714:	90 93 02 28 	sts	0x2802, r25	; 0x802802 <yPos+0x1>
    6718:	20 92 b1 29 	sts	0x29B1, r2	; 0x8029b1 <encoder0Pos>
    671c:	30 92 b2 29 	sts	0x29B2, r3	; 0x8029b2 <encoder0Pos+0x1>
    6720:	88 ed       	ldi	r24, 0xD8	; 216
    6722:	9e e2       	ldi	r25, 0x2E	; 46
    6724:	0e 94 27 15 	call	0x2a4e	; 0x2a4e <Ticker::start()>
    6728:	0e 94 3a 1f 	call	0x3e74	; 0x3e74 <startDispense()>
    672c:	10 92 9a 29 	sts	0x299A, r1	; 0x80299a <dispense_start>
    6730:	20 91 9b 29 	lds	r18, 0x299B	; 0x80299b <dispense_val>
    6734:	30 91 9c 29 	lds	r19, 0x299C	; 0x80299c <dispense_val+0x1>
    6738:	40 91 9d 29 	lds	r20, 0x299D	; 0x80299d <dispense_val+0x2>
    673c:	50 91 9e 29 	lds	r21, 0x299E	; 0x80299e <dispense_val+0x3>
    6740:	a9 ec       	ldi	r26, 0xC9	; 201
    6742:	b3 e0       	ldi	r27, 0x03	; 3
    6744:	d4 d4       	rcall	.+2472   	; 0x70ee <__muluhisi3>
    6746:	80 90 a7 29 	lds	r8, 0x29A7	; 0x8029a7 <stepperCount>
    674a:	90 90 a8 29 	lds	r9, 0x29A8	; 0x8029a8 <stepperCount+0x1>
    674e:	a0 90 a9 29 	lds	r10, 0x29A9	; 0x8029a9 <stepperCount+0x2>
    6752:	b0 90 aa 29 	lds	r11, 0x29AA	; 0x8029aa <stepperCount+0x3>
    6756:	86 16       	cp	r8, r22
    6758:	97 06       	cpc	r9, r23
    675a:	a8 06       	cpc	r10, r24
    675c:	b9 06       	cpc	r11, r25
    675e:	08 f4       	brcc	.+2      	; 0x6762 <main+0xf3a>
    6760:	5b cb       	rjmp	.-2378   	; 0x5e18 <main+0x5f0>
    6762:	80 91 cc 2e 	lds	r24, 0x2ECC	; 0x802ecc <motor+0xf>
    6766:	90 91 cd 2e 	lds	r25, 0x2ECD	; 0x802ecd <motor+0x10>
    676a:	01 97       	sbiw	r24, 0x01	; 1
    676c:	09 f0       	breq	.+2      	; 0x6770 <main+0xf48>
    676e:	54 cb       	rjmp	.-2392   	; 0x5e18 <main+0x5f0>
    6770:	0e 94 2d 1f 	call	0x3e5a	; 0x3e5a <stopDispense()>
    6774:	10 92 a7 29 	sts	0x29A7, r1	; 0x8029a7 <stepperCount>
    6778:	10 92 a8 29 	sts	0x29A8, r1	; 0x8029a8 <stepperCount+0x1>
    677c:	10 92 a9 29 	sts	0x29A9, r1	; 0x8029a9 <stepperCount+0x2>
    6780:	10 92 aa 29 	sts	0x29AA, r1	; 0x8029aa <stepperCount+0x3>
stop():
    6784:	10 92 d8 2e 	sts	0x2ED8, r1	; 0x802ed8 <animate>
    6788:	10 92 e3 2e 	sts	0x2EE3, r1	; 0x802ee3 <animate+0xb>
    678c:	10 92 e4 2e 	sts	0x2EE4, r1	; 0x802ee4 <animate+0xc>
    6790:	10 92 e5 2e 	sts	0x2EE5, r1	; 0x802ee5 <animate+0xd>
    6794:	10 92 e6 2e 	sts	0x2EE6, r1	; 0x802ee6 <animate+0xe>
    6798:	10 92 e7 2e 	sts	0x2EE7, r1	; 0x802ee7 <animate+0xf>
    679c:	10 92 e8 2e 	sts	0x2EE8, r1	; 0x802ee8 <animate+0x10>
digitalWrite():
    67a0:	61 e0       	ldi	r22, 0x01	; 1
    67a2:	83 e1       	ldi	r24, 0x13	; 19
    67a4:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <digitalWrite.part.2>
interval():
    67a8:	80 91 ab 2e 	lds	r24, 0x2EAB	; 0x802eab <buzz+0x9>
    67ac:	90 91 ac 2e 	lds	r25, 0x2EAC	; 0x802eac <buzz+0xa>
    67b0:	89 2b       	or	r24, r25
    67b2:	09 f4       	brne	.+2      	; 0x67b6 <main+0xf8e>
    67b4:	9e c1       	rjmp	.+828    	; 0x6af2 <main+0x12ca>
    67b6:	8c eb       	ldi	r24, 0xBC	; 188
    67b8:	92 e0       	ldi	r25, 0x02	; 2
    67ba:	a0 e0       	ldi	r26, 0x00	; 0
    67bc:	b0 e0       	ldi	r27, 0x00	; 0
    67be:	84 ce       	rjmp	.-760    	; 0x64c8 <main+0xca0>
main():
    67c0:	80 e2       	ldi	r24, 0x20	; 32
    67c2:	91 ea       	ldi	r25, 0xA1	; 161
    67c4:	a7 e0       	ldi	r26, 0x07	; 7
    67c6:	b0 e0       	ldi	r27, 0x00	; 0
    67c8:	91 cf       	rjmp	.-222    	; 0x66ec <main+0xec4>
display_dispense():
    67ca:	01 97       	sbiw	r24, 0x01	; 1
    67cc:	09 f0       	breq	.+2      	; 0x67d0 <main+0xfa8>
    67ce:	b0 cf       	rjmp	.-160    	; 0x6730 <main+0xf08>
    67d0:	80 91 98 29 	lds	r24, 0x2998	; 0x802998 <double_flag1>
    67d4:	90 91 99 29 	lds	r25, 0x2999	; 0x802999 <double_flag1+0x1>
    67d8:	01 97       	sbiw	r24, 0x01	; 1
    67da:	09 f0       	breq	.+2      	; 0x67de <main+0xfb6>
    67dc:	a9 cf       	rjmp	.-174    	; 0x6730 <main+0xf08>
digitalWrite():
    67de:	60 e0       	ldi	r22, 0x00	; 0
    67e0:	87 e1       	ldi	r24, 0x17	; 23
    67e2:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <digitalWrite.part.2>
    67e6:	61 e0       	ldi	r22, 0x01	; 1
    67e8:	86 e1       	ldi	r24, 0x16	; 22
    67ea:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <digitalWrite.part.2>
    67ee:	61 e0       	ldi	r22, 0x01	; 1
    67f0:	8f e0       	ldi	r24, 0x0F	; 15
    67f2:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <digitalWrite.part.2>
    67f6:	60 e0       	ldi	r22, 0x00	; 0
    67f8:	80 e1       	ldi	r24, 0x10	; 16
    67fa:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <digitalWrite.part.2>
    67fe:	60 e0       	ldi	r22, 0x00	; 0
    6800:	81 e1       	ldi	r24, 0x11	; 17
    6802:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <digitalWrite.part.2>
    6806:	58 e8       	ldi	r21, 0x88	; 136
    6808:	a5 2e       	mov	r10, r21
    680a:	53 e1       	ldi	r21, 0x13	; 19
    680c:	b5 2e       	mov	r11, r21
delayMicroseconds():
    680e:	6b ec       	ldi	r22, 0xCB	; 203
    6810:	86 2e       	mov	r8, r22
    6812:	67 e0       	ldi	r22, 0x07	; 7
    6814:	96 2e       	mov	r9, r22
digitalWrite():
    6816:	61 e0       	ldi	r22, 0x01	; 1
    6818:	82 e1       	ldi	r24, 0x12	; 18
    681a:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <digitalWrite.part.2>
delayMicroseconds():
    681e:	c4 01       	movw	r24, r8
    6820:	01 97       	sbiw	r24, 0x01	; 1
    6822:	f1 f7       	brne	.-4      	; 0x6820 <main+0xff8>
digitalWrite():
    6824:	60 e0       	ldi	r22, 0x00	; 0
    6826:	82 e1       	ldi	r24, 0x12	; 18
    6828:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <digitalWrite.part.2>
delayMicroseconds():
    682c:	c4 01       	movw	r24, r8
    682e:	01 97       	sbiw	r24, 0x01	; 1
    6830:	f1 f7       	brne	.-4      	; 0x682e <main+0x1006>
    6832:	21 e0       	ldi	r18, 0x01	; 1
    6834:	a2 1a       	sub	r10, r18
    6836:	b1 08       	sbc	r11, r1
display_dispense():
    6838:	71 f7       	brne	.-36     	; 0x6816 <main+0xfee>
    683a:	10 92 ae 29 	sts	0x29AE, r1	; 0x8029ae <pos1>
    683e:	10 92 af 29 	sts	0x29AF, r1	; 0x8029af <pos1+0x1>
    6842:	10 92 b1 29 	sts	0x29B1, r1	; 0x8029b1 <encoder0Pos>
    6846:	10 92 b2 29 	sts	0x29B2, r1	; 0x8029b2 <encoder0Pos+0x1>
    684a:	10 92 98 29 	sts	0x2998, r1	; 0x802998 <double_flag1>
    684e:	10 92 99 29 	sts	0x2999, r1	; 0x802999 <double_flag1+0x1>
    6852:	6e cf       	rjmp	.-292    	; 0x6730 <main+0xf08>
select_mode():
    6854:	a0 90 03 28 	lds	r10, 0x2803	; 0x802803 <once_update>
    6858:	b0 90 04 28 	lds	r11, 0x2804	; 0x802804 <once_update+0x1>
    685c:	31 e0       	ldi	r19, 0x01	; 1
    685e:	a3 16       	cp	r10, r19
    6860:	b1 04       	cpc	r11, r1
    6862:	09 f0       	breq	.+2      	; 0x6866 <main+0x103e>
    6864:	d9 ca       	rjmp	.-2638   	; 0x5e18 <main+0x5f0>
_ZN4U8G211clearBufferEv():
    6866:	82 ef       	ldi	r24, 0xF2	; 242
    6868:	9f e2       	ldi	r25, 0x2F	; 47
    686a:	0e 94 e5 25 	call	0x4bca	; 0x4bca <u8g2_ClearBuffer>
_ZN4U8G27setFontEPKh():
    686e:	84 e6       	ldi	r24, 0x64	; 100
    6870:	94 e0       	ldi	r25, 0x04	; 4
    6872:	0e 94 20 1a 	call	0x3440	; 0x3440 <u8g2_SetFont.constprop.86>
select_mode():
    6876:	49 ec       	ldi	r20, 0xC9	; 201
    6878:	5a eb       	ldi	r21, 0xBA	; 186
    687a:	6a e0       	ldi	r22, 0x0A	; 10
    687c:	80 e2       	ldi	r24, 0x20	; 32
    687e:	0e 94 9a 1c 	call	0x3934	; 0x3934 <U8G2::drawStr(unsigned char, unsigned char, char const*) [clone .constprop.90]>
_ZN4U8G27setFontEPKh():
    6882:	84 e6       	ldi	r24, 0x64	; 100
    6884:	94 e0       	ldi	r25, 0x04	; 4
    6886:	0e 94 20 1a 	call	0x3440	; 0x3440 <u8g2_SetFont.constprop.86>
_ZN4U8G28drawLineEhhhh():
    688a:	6d e0       	ldi	r22, 0x0D	; 13
    688c:	8d e0       	ldi	r24, 0x0D	; 13
    688e:	0e 94 2c 19 	call	0x3258	; 0x3258 <u8g2_DrawLine.constprop.83>
select_mode():
    6892:	47 ea       	ldi	r20, 0xA7	; 167
    6894:	5a eb       	ldi	r21, 0xBA	; 186
    6896:	6a e1       	ldi	r22, 0x1A	; 26
    6898:	80 e0       	ldi	r24, 0x00	; 0
    689a:	0e 94 9a 1c 	call	0x3934	; 0x3934 <U8G2::drawStr(unsigned char, unsigned char, char const*) [clone .constprop.90]>
_ZN4U8G29setCursorEhh():
    689e:	3a e0       	ldi	r19, 0x0A	; 10
    68a0:	83 2e       	mov	r8, r19
    68a2:	80 92 6f 30 	sts	0x306F, r8	; 0x80306f <u8g2+0x81>
    68a6:	8b e1       	ldi	r24, 0x1B	; 27
    68a8:	80 93 70 30 	sts	0x3070, r24	; 0x803070 <u8g2+0x82>
select_mode():
    68ac:	80 91 b1 29 	lds	r24, 0x29B1	; 0x8029b1 <encoder0Pos>
    68b0:	90 91 b2 29 	lds	r25, 0x29B2	; 0x8029b2 <encoder0Pos+0x1>
    68b4:	46 e0       	ldi	r20, 0x06	; 6
    68b6:	94 2e       	mov	r9, r20
    68b8:	98 9e       	mul	r9, r24
    68ba:	b0 01       	movw	r22, r0
    68bc:	99 9e       	mul	r9, r25
    68be:	70 0d       	add	r23, r0
    68c0:	11 24       	eor	r1, r1
    68c2:	6d 50       	subi	r22, 0x0D	; 13
    68c4:	71 4d       	sbci	r23, 0xD1	; 209
    68c6:	8e ee       	ldi	r24, 0xEE	; 238
    68c8:	9f e2       	ldi	r25, 0x2F	; 47
    68ca:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <Print::print(String const&)>
_ZN4U8G29setCursorEhh():
    68ce:	80 92 6f 30 	sts	0x306F, r8	; 0x80306f <u8g2+0x81>
    68d2:	87 e2       	ldi	r24, 0x27	; 39
    68d4:	80 93 70 30 	sts	0x3070, r24	; 0x803070 <u8g2+0x82>
select_mode():
    68d8:	80 91 b1 29 	lds	r24, 0x29B1	; 0x8029b1 <encoder0Pos>
    68dc:	90 91 b2 29 	lds	r25, 0x29B2	; 0x8029b2 <encoder0Pos+0x1>
    68e0:	01 96       	adiw	r24, 0x01	; 1
    68e2:	98 9e       	mul	r9, r24
    68e4:	b0 01       	movw	r22, r0
    68e6:	99 9e       	mul	r9, r25
    68e8:	70 0d       	add	r23, r0
    68ea:	11 24       	eor	r1, r1
    68ec:	6d 50       	subi	r22, 0x0D	; 13
    68ee:	71 4d       	sbci	r23, 0xD1	; 209
    68f0:	8e ee       	ldi	r24, 0xEE	; 238
    68f2:	9f e2       	ldi	r25, 0x2F	; 47
    68f4:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <Print::print(String const&)>
_ZN4U8G29setCursorEhh():
    68f8:	80 92 6f 30 	sts	0x306F, r8	; 0x80306f <u8g2+0x81>
    68fc:	83 e3       	ldi	r24, 0x33	; 51
    68fe:	80 93 70 30 	sts	0x3070, r24	; 0x803070 <u8g2+0x82>
select_mode():
    6902:	80 91 b1 29 	lds	r24, 0x29B1	; 0x8029b1 <encoder0Pos>
    6906:	90 91 b2 29 	lds	r25, 0x29B2	; 0x8029b2 <encoder0Pos+0x1>
    690a:	02 96       	adiw	r24, 0x02	; 2
    690c:	98 9e       	mul	r9, r24
    690e:	b0 01       	movw	r22, r0
    6910:	99 9e       	mul	r9, r25
    6912:	70 0d       	add	r23, r0
    6914:	11 24       	eor	r1, r1
    6916:	6d 50       	subi	r22, 0x0D	; 13
    6918:	71 4d       	sbci	r23, 0xD1	; 209
    691a:	8e ee       	ldi	r24, 0xEE	; 238
    691c:	9f e2       	ldi	r25, 0x2F	; 47
    691e:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <Print::print(String const&)>
_ZN4U8G29setCursorEhh():
    6922:	80 92 6f 30 	sts	0x306F, r8	; 0x80306f <u8g2+0x81>
    6926:	8f e3       	ldi	r24, 0x3F	; 63
    6928:	80 93 70 30 	sts	0x3070, r24	; 0x803070 <u8g2+0x82>
select_mode():
    692c:	80 91 b1 29 	lds	r24, 0x29B1	; 0x8029b1 <encoder0Pos>
    6930:	90 91 b2 29 	lds	r25, 0x29B2	; 0x8029b2 <encoder0Pos+0x1>
    6934:	03 96       	adiw	r24, 0x03	; 3
    6936:	98 9e       	mul	r9, r24
    6938:	b0 01       	movw	r22, r0
    693a:	99 9e       	mul	r9, r25
    693c:	70 0d       	add	r23, r0
    693e:	11 24       	eor	r1, r1
    6940:	6d 50       	subi	r22, 0x0D	; 13
    6942:	71 4d       	sbci	r23, 0xD1	; 209
    6944:	8e ee       	ldi	r24, 0xEE	; 238
    6946:	9f e2       	ldi	r25, 0x2F	; 47
    6948:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <Print::print(String const&)>
_ZN4U8G210sendBufferEv():
    694c:	0e 94 0e 1d 	call	0x3a1c	; 0x3a1c <u8g2_SendBuffer.constprop.82>
select_mode():
    6950:	a0 92 9f 29 	sts	0x299F, r10	; 0x80299f <User_set_flag>
    6954:	b0 92 a0 29 	sts	0x29A0, r11	; 0x8029a0 <User_set_flag+0x1>
    6958:	5f ca       	rjmp	.-2882   	; 0x5e18 <main+0x5f0>
setting_mode():
    695a:	a0 90 03 28 	lds	r10, 0x2803	; 0x802803 <once_update>
    695e:	b0 90 04 28 	lds	r11, 0x2804	; 0x802804 <once_update+0x1>
    6962:	41 e0       	ldi	r20, 0x01	; 1
    6964:	a4 16       	cp	r10, r20
    6966:	b1 04       	cpc	r11, r1
    6968:	09 f0       	breq	.+2      	; 0x696c <main+0x1144>
    696a:	56 ca       	rjmp	.-2900   	; 0x5e18 <main+0x5f0>
_ZN4U8G211clearBufferEv():
    696c:	82 ef       	ldi	r24, 0xF2	; 242
    696e:	9f e2       	ldi	r25, 0x2F	; 47
    6970:	0e 94 e5 25 	call	0x4bca	; 0x4bca <u8g2_ClearBuffer>
_ZN4U8G27setFontEPKh():
    6974:	84 e6       	ldi	r24, 0x64	; 100
    6976:	94 e0       	ldi	r25, 0x04	; 4
    6978:	0e 94 20 1a 	call	0x3440	; 0x3440 <u8g2_SetFont.constprop.86>
setting_mode():
    697c:	45 ed       	ldi	r20, 0xD5	; 213
    697e:	5a eb       	ldi	r21, 0xBA	; 186
    6980:	69 e1       	ldi	r22, 0x19	; 25
    6982:	88 e2       	ldi	r24, 0x28	; 40
    6984:	0e 94 9a 1c 	call	0x3934	; 0x3934 <U8G2::drawStr(unsigned char, unsigned char, char const*) [clone .constprop.90]>
_ZN4U8G28drawLineEhhhh():
    6988:	6b e1       	ldi	r22, 0x1B	; 27
    698a:	8b e1       	ldi	r24, 0x1B	; 27
    698c:	0e 94 2c 19 	call	0x3258	; 0x3258 <u8g2_DrawLine.constprop.83>
setting_mode():
    6990:	80 91 a5 29 	lds	r24, 0x29A5	; 0x8029a5 <Save_flag>
    6994:	90 91 a6 29 	lds	r25, 0x29A6	; 0x8029a6 <Save_flag+0x1>
    6998:	81 30       	cpi	r24, 0x01	; 1
    699a:	91 05       	cpc	r25, r1
    699c:	e9 f4       	brne	.+58     	; 0x69d8 <main+0x11b0>
    699e:	4d ed       	ldi	r20, 0xDD	; 221
    69a0:	5a eb       	ldi	r21, 0xBA	; 186
    69a2:	68 e2       	ldi	r22, 0x28	; 40
    69a4:	81 e0       	ldi	r24, 0x01	; 1
    69a6:	0e 94 9a 1c 	call	0x3934	; 0x3934 <U8G2::drawStr(unsigned char, unsigned char, char const*) [clone .constprop.90]>
    69aa:	80 91 a3 29 	lds	r24, 0x29A3	; 0x8029a3 <disp_count>
    69ae:	90 91 a4 29 	lds	r25, 0x29A4	; 0x8029a4 <disp_count+0x1>
    69b2:	01 96       	adiw	r24, 0x01	; 1
    69b4:	80 93 a3 29 	sts	0x29A3, r24	; 0x8029a3 <disp_count>
    69b8:	90 93 a4 29 	sts	0x29A4, r25	; 0x8029a4 <disp_count+0x1>
    69bc:	85 36       	cpi	r24, 0x65	; 101
    69be:	91 05       	cpc	r25, r1
    69c0:	44 f0       	brlt	.+16     	; 0x69d2 <main+0x11aa>
    69c2:	10 92 a5 29 	sts	0x29A5, r1	; 0x8029a5 <Save_flag>
    69c6:	10 92 a6 29 	sts	0x29A6, r1	; 0x8029a6 <Save_flag+0x1>
    69ca:	10 92 b5 29 	sts	0x29B5, r1	; 0x8029b5 <menus>
    69ce:	10 92 b6 29 	sts	0x29B6, r1	; 0x8029b6 <menus+0x1>
_ZN4U8G210sendBufferEv():
    69d2:	0e 94 0e 1d 	call	0x3a1c	; 0x3a1c <u8g2_SendBuffer.constprop.82>
    69d6:	20 ca       	rjmp	.-3008   	; 0x5e18 <main+0x5f0>
setting_mode():
    69d8:	02 97       	sbiw	r24, 0x02	; 2
    69da:	f9 f4       	brne	.+62     	; 0x6a1a <main+0x11f2>
    69dc:	47 ef       	ldi	r20, 0xF7	; 247
    69de:	5a eb       	ldi	r21, 0xBA	; 186
    69e0:	68 e2       	ldi	r22, 0x28	; 40
    69e2:	81 e0       	ldi	r24, 0x01	; 1
    69e4:	0e 94 9a 1c 	call	0x3934	; 0x3934 <U8G2::drawStr(unsigned char, unsigned char, char const*) [clone .constprop.90]>
    69e8:	80 91 a3 29 	lds	r24, 0x29A3	; 0x8029a3 <disp_count>
    69ec:	90 91 a4 29 	lds	r25, 0x29A4	; 0x8029a4 <disp_count+0x1>
    69f0:	01 96       	adiw	r24, 0x01	; 1
    69f2:	80 93 a3 29 	sts	0x29A3, r24	; 0x8029a3 <disp_count>
    69f6:	90 93 a4 29 	sts	0x29A4, r25	; 0x8029a4 <disp_count+0x1>
    69fa:	85 36       	cpi	r24, 0x65	; 101
    69fc:	91 05       	cpc	r25, r1
    69fe:	4c f3       	brlt	.-46     	; 0x69d2 <main+0x11aa>
    6a00:	10 92 a5 29 	sts	0x29A5, r1	; 0x8029a5 <Save_flag>
    6a04:	10 92 a6 29 	sts	0x29A6, r1	; 0x8029a6 <Save_flag+0x1>
    6a08:	10 92 b5 29 	sts	0x29B5, r1	; 0x8029b5 <menus>
    6a0c:	10 92 b6 29 	sts	0x29B6, r1	; 0x8029b6 <menus+0x1>
    6a10:	10 92 b1 29 	sts	0x29B1, r1	; 0x8029b1 <encoder0Pos>
    6a14:	10 92 b2 29 	sts	0x29B2, r1	; 0x8029b2 <encoder0Pos+0x1>
    6a18:	dc cf       	rjmp	.-72     	; 0x69d2 <main+0x11aa>
    6a1a:	e0 91 b1 29 	lds	r30, 0x29B1	; 0x8029b1 <encoder0Pos>
    6a1e:	f0 91 b2 29 	lds	r31, 0x29B2	; 0x8029b2 <encoder0Pos+0x1>
    6a22:	ee 0f       	add	r30, r30
    6a24:	ff 1f       	adc	r31, r31
    6a26:	e9 5b       	subi	r30, 0xB9	; 185
    6a28:	f7 44       	sbci	r31, 0x47	; 71
    6a2a:	47 ea       	ldi	r20, 0xA7	; 167
    6a2c:	5a eb       	ldi	r21, 0xBA	; 186
    6a2e:	60 81       	ld	r22, Z
    6a30:	80 e0       	ldi	r24, 0x00	; 0
    6a32:	0e 94 9a 1c 	call	0x3934	; 0x3934 <U8G2::drawStr(unsigned char, unsigned char, char const*) [clone .constprop.90]>
    6a36:	42 e1       	ldi	r20, 0x12	; 18
    6a38:	5b eb       	ldi	r21, 0xBB	; 187
    6a3a:	68 e2       	ldi	r22, 0x28	; 40
    6a3c:	8a e0       	ldi	r24, 0x0A	; 10
    6a3e:	0e 94 9a 1c 	call	0x3934	; 0x3934 <U8G2::drawStr(unsigned char, unsigned char, char const*) [clone .constprop.90]>
    6a42:	4c e1       	ldi	r20, 0x1C	; 28
    6a44:	5b eb       	ldi	r21, 0xBB	; 187
    6a46:	63 e3       	ldi	r22, 0x33	; 51
    6a48:	8a e0       	ldi	r24, 0x0A	; 10
    6a4a:	0e 94 9a 1c 	call	0x3934	; 0x3934 <U8G2::drawStr(unsigned char, unsigned char, char const*) [clone .constprop.90]>
    6a4e:	10 92 a5 29 	sts	0x29A5, r1	; 0x8029a5 <Save_flag>
    6a52:	10 92 a6 29 	sts	0x29A6, r1	; 0x8029a6 <Save_flag+0x1>
    6a56:	10 92 a3 29 	sts	0x29A3, r1	; 0x8029a3 <disp_count>
    6a5a:	10 92 a4 29 	sts	0x29A4, r1	; 0x8029a4 <disp_count+0x1>
    6a5e:	a0 92 a1 29 	sts	0x29A1, r10	; 0x8029a1 <Print_flag>
    6a62:	b0 92 a2 29 	sts	0x29A2, r11	; 0x8029a2 <Print_flag+0x1>
    6a66:	b5 cf       	rjmp	.-150    	; 0x69d2 <main+0x11aa>
display_priming():
    6a68:	01 97       	sbiw	r24, 0x01	; 1
    6a6a:	09 f0       	breq	.+2      	; 0x6a6e <main+0x1246>
    6a6c:	b9 cb       	rjmp	.-2190   	; 0x61e0 <main+0x9b8>
    6a6e:	80 91 ab 29 	lds	r24, 0x29AB	; 0x8029ab <double_flag2>
    6a72:	90 91 ac 29 	lds	r25, 0x29AC	; 0x8029ac <double_flag2+0x1>
    6a76:	01 97       	sbiw	r24, 0x01	; 1
    6a78:	09 f0       	breq	.+2      	; 0x6a7c <main+0x1254>
    6a7a:	b2 cb       	rjmp	.-2204   	; 0x61e0 <main+0x9b8>
digitalWrite():
    6a7c:	60 e0       	ldi	r22, 0x00	; 0
    6a7e:	87 e1       	ldi	r24, 0x17	; 23
    6a80:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <digitalWrite.part.2>
    6a84:	61 e0       	ldi	r22, 0x01	; 1
    6a86:	86 e1       	ldi	r24, 0x16	; 22
    6a88:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <digitalWrite.part.2>
    6a8c:	61 e0       	ldi	r22, 0x01	; 1
    6a8e:	8f e0       	ldi	r24, 0x0F	; 15
    6a90:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <digitalWrite.part.2>
    6a94:	60 e0       	ldi	r22, 0x00	; 0
    6a96:	80 e1       	ldi	r24, 0x10	; 16
    6a98:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <digitalWrite.part.2>
    6a9c:	60 e0       	ldi	r22, 0x00	; 0
    6a9e:	81 e1       	ldi	r24, 0x11	; 17
    6aa0:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <digitalWrite.part.2>
    6aa4:	88 e8       	ldi	r24, 0x88	; 136
    6aa6:	a8 2e       	mov	r10, r24
    6aa8:	83 e1       	ldi	r24, 0x13	; 19
    6aaa:	b8 2e       	mov	r11, r24
delayMicroseconds():
    6aac:	9b ec       	ldi	r25, 0xCB	; 203
    6aae:	89 2e       	mov	r8, r25
    6ab0:	97 e0       	ldi	r25, 0x07	; 7
    6ab2:	99 2e       	mov	r9, r25
digitalWrite():
    6ab4:	61 e0       	ldi	r22, 0x01	; 1
    6ab6:	82 e1       	ldi	r24, 0x12	; 18
    6ab8:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <digitalWrite.part.2>
delayMicroseconds():
    6abc:	c4 01       	movw	r24, r8
    6abe:	01 97       	sbiw	r24, 0x01	; 1
    6ac0:	f1 f7       	brne	.-4      	; 0x6abe <main+0x1296>
digitalWrite():
    6ac2:	60 e0       	ldi	r22, 0x00	; 0
    6ac4:	82 e1       	ldi	r24, 0x12	; 18
    6ac6:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <digitalWrite.part.2>
delayMicroseconds():
    6aca:	c4 01       	movw	r24, r8
    6acc:	01 97       	sbiw	r24, 0x01	; 1
    6ace:	f1 f7       	brne	.-4      	; 0x6acc <main+0x12a4>
    6ad0:	51 e0       	ldi	r21, 0x01	; 1
    6ad2:	a5 1a       	sub	r10, r21
    6ad4:	b1 08       	sbc	r11, r1
display_priming():
    6ad6:	71 f7       	brne	.-36     	; 0x6ab4 <main+0x128c>
    6ad8:	10 92 ae 29 	sts	0x29AE, r1	; 0x8029ae <pos1>
    6adc:	10 92 af 29 	sts	0x29AF, r1	; 0x8029af <pos1+0x1>
    6ae0:	10 92 b1 29 	sts	0x29B1, r1	; 0x8029b1 <encoder0Pos>
    6ae4:	10 92 b2 29 	sts	0x29B2, r1	; 0x8029b2 <encoder0Pos+0x1>
    6ae8:	10 92 ab 29 	sts	0x29AB, r1	; 0x8029ab <double_flag2>
    6aec:	10 92 ac 29 	sts	0x29AC, r1	; 0x8029ac <double_flag2+0x1>
    6af0:	77 cb       	rjmp	.-2322   	; 0x61e0 <main+0x9b8>
main():
    6af2:	80 e6       	ldi	r24, 0x60	; 96
    6af4:	9e ea       	ldi	r25, 0xAE	; 174
    6af6:	aa e0       	ldi	r26, 0x0A	; 10
    6af8:	b0 e0       	ldi	r27, 0x00	; 0
    6afa:	e6 cc       	rjmp	.-1588   	; 0x64c8 <main+0xca0>

00006afc <_GLOBAL__sub_D_u8g2>:
_GLOBAL__sub_D_u8g2():
    6afc:	cf 93       	push	r28
    6afe:	df 93       	push	r29
__base_dtor ():
    6b00:	80 91 66 2e 	lds	r24, 0x2E66	; 0x802e66 <daY>
    6b04:	90 91 67 2e 	lds	r25, 0x2E67	; 0x802e67 <daY+0x1>
    6b08:	da d4       	rcall	.+2484   	; 0x74be <free>
_GLOBAL__sub_D_u8g2():
    6b0a:	c7 e4       	ldi	r28, 0x47	; 71
    6b0c:	df e2       	ldi	r29, 0x2F	; 47
__static_initialization_and_destruction_0():
    6b0e:	26 97       	sbiw	r28, 0x06	; 6
__base_dtor ():
    6b10:	88 81       	ld	r24, Y
    6b12:	99 81       	ldd	r25, Y+1	; 0x01
    6b14:	d4 d4       	rcall	.+2472   	; 0x74be <free>
__static_initialization_and_destruction_0():
    6b16:	2e e2       	ldi	r18, 0x2E	; 46
    6b18:	c3 3f       	cpi	r28, 0xF3	; 243
    6b1a:	d2 07       	cpc	r29, r18
    6b1c:	c1 f7       	brne	.-16     	; 0x6b0e <_GLOBAL__sub_D_u8g2+0x12>
_GLOBAL__sub_D_u8g2():
    6b1e:	c7 e7       	ldi	r28, 0x77	; 119
    6b20:	df e2       	ldi	r29, 0x2F	; 47
__static_initialization_and_destruction_0():
    6b22:	26 97       	sbiw	r28, 0x06	; 6
__base_dtor ():
    6b24:	88 81       	ld	r24, Y
    6b26:	99 81       	ldd	r25, Y+1	; 0x01
    6b28:	ca d4       	rcall	.+2452   	; 0x74be <free>
__static_initialization_and_destruction_0():
    6b2a:	8f e2       	ldi	r24, 0x2F	; 47
    6b2c:	c7 34       	cpi	r28, 0x47	; 71
    6b2e:	d8 07       	cpc	r29, r24
    6b30:	c1 f7       	brne	.-16     	; 0x6b22 <_GLOBAL__sub_D_u8g2+0x26>
__base_dtor ():
    6b32:	89 ef       	ldi	r24, 0xF9	; 249
    6b34:	98 eb       	ldi	r25, 0xB8	; 184
    6b36:	80 93 cf 2f 	sts	0x2FCF, r24	; 0x802fcf <mySerial>
    6b3a:	90 93 d0 2f 	sts	0x2FD0, r25	; 0x802fd0 <mySerial+0x1>
stopListening():
    6b3e:	80 91 7e 29 	lds	r24, 0x297E	; 0x80297e <SoftwareSerial::active_object>
    6b42:	90 91 7f 29 	lds	r25, 0x297F	; 0x80297f <SoftwareSerial::active_object+0x1>
    6b46:	8f 5c       	subi	r24, 0xCF	; 207
    6b48:	9f 42       	sbci	r25, 0x2F	; 47
    6b4a:	71 f4       	brne	.+28     	; 0x6b68 <_GLOBAL__sub_D_u8g2+0x6c>
_ZN14SoftwareSerial11setRxIntMskEb():
    6b4c:	e0 91 e2 2f 	lds	r30, 0x2FE2	; 0x802fe2 <mySerial+0x13>
    6b50:	f0 91 e3 2f 	lds	r31, 0x2FE3	; 0x802fe3 <mySerial+0x14>
    6b54:	90 81       	ld	r25, Z
    6b56:	80 91 e4 2f 	lds	r24, 0x2FE4	; 0x802fe4 <mySerial+0x15>
    6b5a:	80 95       	com	r24
    6b5c:	89 23       	and	r24, r25
    6b5e:	80 83       	st	Z, r24
stopListening():
    6b60:	10 92 7e 29 	sts	0x297E, r1	; 0x80297e <SoftwareSerial::active_object>
    6b64:	10 92 7f 29 	sts	0x297F, r1	; 0x80297f <SoftwareSerial::active_object+0x1>
_GLOBAL__sub_D_u8g2():
    6b68:	df 91       	pop	r29
    6b6a:	cf 91       	pop	r28
    6b6c:	08 95       	ret

00006b6e <vfprintf>:
vfprintf():
    6b6e:	ab e0       	ldi	r26, 0x0B	; 11
    6b70:	b0 e0       	ldi	r27, 0x00	; 0
    6b72:	ec eb       	ldi	r30, 0xBC	; 188
    6b74:	f5 e3       	ldi	r31, 0x35	; 53
    6b76:	c5 c2       	rjmp	.+1418   	; 0x7102 <__prologue_saves__>
    6b78:	7c 01       	movw	r14, r24
    6b7a:	3b 01       	movw	r6, r22
    6b7c:	8a 01       	movw	r16, r20
    6b7e:	fc 01       	movw	r30, r24
    6b80:	16 82       	std	Z+6, r1	; 0x06
    6b82:	17 82       	std	Z+7, r1	; 0x07
    6b84:	83 81       	ldd	r24, Z+3	; 0x03
    6b86:	81 ff       	sbrs	r24, 1
    6b88:	ba c1       	rjmp	.+884    	; 0x6efe <vfprintf+0x390>
    6b8a:	ce 01       	movw	r24, r28
    6b8c:	01 96       	adiw	r24, 0x01	; 1
    6b8e:	5c 01       	movw	r10, r24
    6b90:	f7 01       	movw	r30, r14
    6b92:	93 81       	ldd	r25, Z+3	; 0x03
    6b94:	f3 01       	movw	r30, r6
    6b96:	93 fd       	sbrc	r25, 3
    6b98:	85 91       	lpm	r24, Z+
    6b9a:	93 ff       	sbrs	r25, 3
    6b9c:	81 91       	ld	r24, Z+
    6b9e:	3f 01       	movw	r6, r30
    6ba0:	88 23       	and	r24, r24
    6ba2:	09 f4       	brne	.+2      	; 0x6ba6 <vfprintf+0x38>
    6ba4:	49 c1       	rjmp	.+658    	; 0x6e38 <vfprintf+0x2ca>
    6ba6:	85 32       	cpi	r24, 0x25	; 37
    6ba8:	39 f4       	brne	.+14     	; 0x6bb8 <vfprintf+0x4a>
    6baa:	93 fd       	sbrc	r25, 3
    6bac:	85 91       	lpm	r24, Z+
    6bae:	93 ff       	sbrs	r25, 3
    6bb0:	81 91       	ld	r24, Z+
    6bb2:	3f 01       	movw	r6, r30
    6bb4:	85 32       	cpi	r24, 0x25	; 37
    6bb6:	21 f4       	brne	.+8      	; 0x6bc0 <vfprintf+0x52>
    6bb8:	b7 01       	movw	r22, r14
    6bba:	90 e0       	ldi	r25, 0x00	; 0
    6bbc:	b9 d1       	rcall	.+882    	; 0x6f30 <fputc>
    6bbe:	e8 cf       	rjmp	.-48     	; 0x6b90 <vfprintf+0x22>
    6bc0:	91 2c       	mov	r9, r1
    6bc2:	21 2c       	mov	r2, r1
    6bc4:	31 2c       	mov	r3, r1
    6bc6:	ff e1       	ldi	r31, 0x1F	; 31
    6bc8:	f3 15       	cp	r31, r3
    6bca:	38 f0       	brcs	.+14     	; 0x6bda <vfprintf+0x6c>
    6bcc:	8b 32       	cpi	r24, 0x2B	; 43
    6bce:	11 f1       	breq	.+68     	; 0x6c14 <vfprintf+0xa6>
    6bd0:	90 f4       	brcc	.+36     	; 0x6bf6 <vfprintf+0x88>
    6bd2:	80 32       	cpi	r24, 0x20	; 32
    6bd4:	09 f1       	breq	.+66     	; 0x6c18 <vfprintf+0xaa>
    6bd6:	83 32       	cpi	r24, 0x23	; 35
    6bd8:	29 f1       	breq	.+74     	; 0x6c24 <vfprintf+0xb6>
    6bda:	37 fc       	sbrc	r3, 7
    6bdc:	3c c0       	rjmp	.+120    	; 0x6c56 <vfprintf+0xe8>
    6bde:	20 ed       	ldi	r18, 0xD0	; 208
    6be0:	28 0f       	add	r18, r24
    6be2:	2a 30       	cpi	r18, 0x0A	; 10
    6be4:	50 f5       	brcc	.+84     	; 0x6c3a <vfprintf+0xcc>
    6be6:	36 fe       	sbrs	r3, 6
    6be8:	20 c0       	rjmp	.+64     	; 0x6c2a <vfprintf+0xbc>
    6bea:	8a e0       	ldi	r24, 0x0A	; 10
    6bec:	98 9e       	mul	r9, r24
    6bee:	20 0d       	add	r18, r0
    6bf0:	11 24       	eor	r1, r1
    6bf2:	92 2e       	mov	r9, r18
    6bf4:	06 c0       	rjmp	.+12     	; 0x6c02 <vfprintf+0x94>
    6bf6:	8d 32       	cpi	r24, 0x2D	; 45
    6bf8:	91 f0       	breq	.+36     	; 0x6c1e <vfprintf+0xb0>
    6bfa:	80 33       	cpi	r24, 0x30	; 48
    6bfc:	71 f7       	brne	.-36     	; 0x6bda <vfprintf+0x6c>
    6bfe:	68 94       	set
    6c00:	30 f8       	bld	r3, 0
    6c02:	f3 01       	movw	r30, r6
    6c04:	93 fd       	sbrc	r25, 3
    6c06:	85 91       	lpm	r24, Z+
    6c08:	93 ff       	sbrs	r25, 3
    6c0a:	81 91       	ld	r24, Z+
    6c0c:	3f 01       	movw	r6, r30
    6c0e:	81 11       	cpse	r24, r1
    6c10:	da cf       	rjmp	.-76     	; 0x6bc6 <vfprintf+0x58>
    6c12:	21 c0       	rjmp	.+66     	; 0x6c56 <vfprintf+0xe8>
    6c14:	68 94       	set
    6c16:	31 f8       	bld	r3, 1
    6c18:	68 94       	set
    6c1a:	32 f8       	bld	r3, 2
    6c1c:	f2 cf       	rjmp	.-28     	; 0x6c02 <vfprintf+0x94>
    6c1e:	68 94       	set
    6c20:	33 f8       	bld	r3, 3
    6c22:	ef cf       	rjmp	.-34     	; 0x6c02 <vfprintf+0x94>
    6c24:	68 94       	set
    6c26:	34 f8       	bld	r3, 4
    6c28:	ec cf       	rjmp	.-40     	; 0x6c02 <vfprintf+0x94>
    6c2a:	ea e0       	ldi	r30, 0x0A	; 10
    6c2c:	2e 9e       	mul	r2, r30
    6c2e:	20 0d       	add	r18, r0
    6c30:	11 24       	eor	r1, r1
    6c32:	22 2e       	mov	r2, r18
    6c34:	68 94       	set
    6c36:	35 f8       	bld	r3, 5
    6c38:	e4 cf       	rjmp	.-56     	; 0x6c02 <vfprintf+0x94>
    6c3a:	8e 32       	cpi	r24, 0x2E	; 46
    6c3c:	29 f4       	brne	.+10     	; 0x6c48 <vfprintf+0xda>
    6c3e:	36 fc       	sbrc	r3, 6
    6c40:	fb c0       	rjmp	.+502    	; 0x6e38 <vfprintf+0x2ca>
    6c42:	68 94       	set
    6c44:	36 f8       	bld	r3, 6
    6c46:	dd cf       	rjmp	.-70     	; 0x6c02 <vfprintf+0x94>
    6c48:	8c 36       	cpi	r24, 0x6C	; 108
    6c4a:	19 f4       	brne	.+6      	; 0x6c52 <vfprintf+0xe4>
    6c4c:	68 94       	set
    6c4e:	37 f8       	bld	r3, 7
    6c50:	d8 cf       	rjmp	.-80     	; 0x6c02 <vfprintf+0x94>
    6c52:	88 36       	cpi	r24, 0x68	; 104
    6c54:	b1 f2       	breq	.-84     	; 0x6c02 <vfprintf+0x94>
    6c56:	98 2f       	mov	r25, r24
    6c58:	9f 7d       	andi	r25, 0xDF	; 223
    6c5a:	95 54       	subi	r25, 0x45	; 69
    6c5c:	93 30       	cpi	r25, 0x03	; 3
    6c5e:	d8 f0       	brcs	.+54     	; 0x6c96 <vfprintf+0x128>
    6c60:	83 36       	cpi	r24, 0x63	; 99
    6c62:	91 f1       	breq	.+100    	; 0x6cc8 <vfprintf+0x15a>
    6c64:	83 37       	cpi	r24, 0x73	; 115
    6c66:	b1 f1       	breq	.+108    	; 0x6cd4 <vfprintf+0x166>
    6c68:	83 35       	cpi	r24, 0x53	; 83
    6c6a:	09 f0       	breq	.+2      	; 0x6c6e <vfprintf+0x100>
    6c6c:	5e c0       	rjmp	.+188    	; 0x6d2a <vfprintf+0x1bc>
    6c6e:	28 01       	movw	r4, r16
    6c70:	f2 e0       	ldi	r31, 0x02	; 2
    6c72:	4f 0e       	add	r4, r31
    6c74:	51 1c       	adc	r5, r1
    6c76:	f8 01       	movw	r30, r16
    6c78:	c0 80       	ld	r12, Z
    6c7a:	d1 80       	ldd	r13, Z+1	; 0x01
    6c7c:	69 2d       	mov	r22, r9
    6c7e:	70 e0       	ldi	r23, 0x00	; 0
    6c80:	36 fc       	sbrc	r3, 6
    6c82:	02 c0       	rjmp	.+4      	; 0x6c88 <vfprintf+0x11a>
    6c84:	6f ef       	ldi	r22, 0xFF	; 255
    6c86:	7f ef       	ldi	r23, 0xFF	; 255
    6c88:	c6 01       	movw	r24, r12
    6c8a:	3c d1       	rcall	.+632    	; 0x6f04 <strnlen_P>
    6c8c:	4c 01       	movw	r8, r24
    6c8e:	68 94       	set
    6c90:	37 f8       	bld	r3, 7
    6c92:	82 01       	movw	r16, r4
    6c94:	0a c0       	rjmp	.+20     	; 0x6caa <vfprintf+0x13c>
    6c96:	0c 5f       	subi	r16, 0xFC	; 252
    6c98:	1f 4f       	sbci	r17, 0xFF	; 255
    6c9a:	ff e3       	ldi	r31, 0x3F	; 63
    6c9c:	f9 83       	std	Y+1, r31	; 0x01
    6c9e:	88 24       	eor	r8, r8
    6ca0:	83 94       	inc	r8
    6ca2:	91 2c       	mov	r9, r1
    6ca4:	65 01       	movw	r12, r10
    6ca6:	e8 94       	clt
    6ca8:	37 f8       	bld	r3, 7
    6caa:	33 fe       	sbrs	r3, 3
    6cac:	2a c0       	rjmp	.+84     	; 0x6d02 <vfprintf+0x194>
    6cae:	52 2c       	mov	r5, r2
    6cb0:	81 14       	cp	r8, r1
    6cb2:	91 04       	cpc	r9, r1
    6cb4:	59 f5       	brne	.+86     	; 0x6d0c <vfprintf+0x19e>
    6cb6:	55 20       	and	r5, r5
    6cb8:	09 f4       	brne	.+2      	; 0x6cbc <vfprintf+0x14e>
    6cba:	6a cf       	rjmp	.-300    	; 0x6b90 <vfprintf+0x22>
    6cbc:	b7 01       	movw	r22, r14
    6cbe:	80 e2       	ldi	r24, 0x20	; 32
    6cc0:	90 e0       	ldi	r25, 0x00	; 0
    6cc2:	36 d1       	rcall	.+620    	; 0x6f30 <fputc>
    6cc4:	5a 94       	dec	r5
    6cc6:	f7 cf       	rjmp	.-18     	; 0x6cb6 <vfprintf+0x148>
    6cc8:	f8 01       	movw	r30, r16
    6cca:	80 81       	ld	r24, Z
    6ccc:	89 83       	std	Y+1, r24	; 0x01
    6cce:	0e 5f       	subi	r16, 0xFE	; 254
    6cd0:	1f 4f       	sbci	r17, 0xFF	; 255
    6cd2:	e5 cf       	rjmp	.-54     	; 0x6c9e <vfprintf+0x130>
    6cd4:	28 01       	movw	r4, r16
    6cd6:	f2 e0       	ldi	r31, 0x02	; 2
    6cd8:	4f 0e       	add	r4, r31
    6cda:	51 1c       	adc	r5, r1
    6cdc:	f8 01       	movw	r30, r16
    6cde:	c0 80       	ld	r12, Z
    6ce0:	d1 80       	ldd	r13, Z+1	; 0x01
    6ce2:	69 2d       	mov	r22, r9
    6ce4:	70 e0       	ldi	r23, 0x00	; 0
    6ce6:	36 fc       	sbrc	r3, 6
    6ce8:	02 c0       	rjmp	.+4      	; 0x6cee <vfprintf+0x180>
    6cea:	6f ef       	ldi	r22, 0xFF	; 255
    6cec:	7f ef       	ldi	r23, 0xFF	; 255
    6cee:	c6 01       	movw	r24, r12
    6cf0:	14 d1       	rcall	.+552    	; 0x6f1a <strnlen>
    6cf2:	4c 01       	movw	r8, r24
    6cf4:	82 01       	movw	r16, r4
    6cf6:	d7 cf       	rjmp	.-82     	; 0x6ca6 <vfprintf+0x138>
    6cf8:	b7 01       	movw	r22, r14
    6cfa:	80 e2       	ldi	r24, 0x20	; 32
    6cfc:	90 e0       	ldi	r25, 0x00	; 0
    6cfe:	18 d1       	rcall	.+560    	; 0x6f30 <fputc>
    6d00:	2a 94       	dec	r2
    6d02:	28 14       	cp	r2, r8
    6d04:	19 04       	cpc	r1, r9
    6d06:	09 f0       	breq	.+2      	; 0x6d0a <vfprintf+0x19c>
    6d08:	b8 f7       	brcc	.-18     	; 0x6cf8 <vfprintf+0x18a>
    6d0a:	d1 cf       	rjmp	.-94     	; 0x6cae <vfprintf+0x140>
    6d0c:	f6 01       	movw	r30, r12
    6d0e:	37 fc       	sbrc	r3, 7
    6d10:	85 91       	lpm	r24, Z+
    6d12:	37 fe       	sbrs	r3, 7
    6d14:	81 91       	ld	r24, Z+
    6d16:	6f 01       	movw	r12, r30
    6d18:	b7 01       	movw	r22, r14
    6d1a:	90 e0       	ldi	r25, 0x00	; 0
    6d1c:	09 d1       	rcall	.+530    	; 0x6f30 <fputc>
    6d1e:	51 10       	cpse	r5, r1
    6d20:	5a 94       	dec	r5
    6d22:	f1 e0       	ldi	r31, 0x01	; 1
    6d24:	8f 1a       	sub	r8, r31
    6d26:	91 08       	sbc	r9, r1
    6d28:	c3 cf       	rjmp	.-122    	; 0x6cb0 <vfprintf+0x142>
    6d2a:	84 36       	cpi	r24, 0x64	; 100
    6d2c:	19 f0       	breq	.+6      	; 0x6d34 <vfprintf+0x1c6>
    6d2e:	89 36       	cpi	r24, 0x69	; 105
    6d30:	09 f0       	breq	.+2      	; 0x6d34 <vfprintf+0x1c6>
    6d32:	73 c0       	rjmp	.+230    	; 0x6e1a <vfprintf+0x2ac>
    6d34:	f8 01       	movw	r30, r16
    6d36:	37 fe       	sbrs	r3, 7
    6d38:	67 c0       	rjmp	.+206    	; 0x6e08 <vfprintf+0x29a>
    6d3a:	60 81       	ld	r22, Z
    6d3c:	71 81       	ldd	r23, Z+1	; 0x01
    6d3e:	82 81       	ldd	r24, Z+2	; 0x02
    6d40:	93 81       	ldd	r25, Z+3	; 0x03
    6d42:	0c 5f       	subi	r16, 0xFC	; 252
    6d44:	1f 4f       	sbci	r17, 0xFF	; 255
    6d46:	f3 2d       	mov	r31, r3
    6d48:	ff 76       	andi	r31, 0x6F	; 111
    6d4a:	3f 2e       	mov	r3, r31
    6d4c:	97 ff       	sbrs	r25, 7
    6d4e:	09 c0       	rjmp	.+18     	; 0x6d62 <vfprintf+0x1f4>
    6d50:	90 95       	com	r25
    6d52:	80 95       	com	r24
    6d54:	70 95       	com	r23
    6d56:	61 95       	neg	r22
    6d58:	7f 4f       	sbci	r23, 0xFF	; 255
    6d5a:	8f 4f       	sbci	r24, 0xFF	; 255
    6d5c:	9f 4f       	sbci	r25, 0xFF	; 255
    6d5e:	68 94       	set
    6d60:	37 f8       	bld	r3, 7
    6d62:	2a e0       	ldi	r18, 0x0A	; 10
    6d64:	30 e0       	ldi	r19, 0x00	; 0
    6d66:	a5 01       	movw	r20, r10
    6d68:	13 d1       	rcall	.+550    	; 0x6f90 <__ultoa_invert>
    6d6a:	c8 2e       	mov	r12, r24
    6d6c:	ca 18       	sub	r12, r10
    6d6e:	8c 2c       	mov	r8, r12
    6d70:	43 2c       	mov	r4, r3
    6d72:	36 fe       	sbrs	r3, 6
    6d74:	0c c0       	rjmp	.+24     	; 0x6d8e <vfprintf+0x220>
    6d76:	e8 94       	clt
    6d78:	40 f8       	bld	r4, 0
    6d7a:	c9 14       	cp	r12, r9
    6d7c:	40 f4       	brcc	.+16     	; 0x6d8e <vfprintf+0x220>
    6d7e:	34 fe       	sbrs	r3, 4
    6d80:	05 c0       	rjmp	.+10     	; 0x6d8c <vfprintf+0x21e>
    6d82:	32 fc       	sbrc	r3, 2
    6d84:	03 c0       	rjmp	.+6      	; 0x6d8c <vfprintf+0x21e>
    6d86:	f3 2d       	mov	r31, r3
    6d88:	fe 7e       	andi	r31, 0xEE	; 238
    6d8a:	4f 2e       	mov	r4, r31
    6d8c:	89 2c       	mov	r8, r9
    6d8e:	44 fe       	sbrs	r4, 4
    6d90:	90 c0       	rjmp	.+288    	; 0x6eb2 <vfprintf+0x344>
    6d92:	fe 01       	movw	r30, r28
    6d94:	ec 0d       	add	r30, r12
    6d96:	f1 1d       	adc	r31, r1
    6d98:	80 81       	ld	r24, Z
    6d9a:	80 33       	cpi	r24, 0x30	; 48
    6d9c:	09 f0       	breq	.+2      	; 0x6da0 <vfprintf+0x232>
    6d9e:	82 c0       	rjmp	.+260    	; 0x6ea4 <vfprintf+0x336>
    6da0:	24 2d       	mov	r18, r4
    6da2:	29 7e       	andi	r18, 0xE9	; 233
    6da4:	42 2e       	mov	r4, r18
    6da6:	84 2d       	mov	r24, r4
    6da8:	88 70       	andi	r24, 0x08	; 8
    6daa:	58 2e       	mov	r5, r24
    6dac:	43 fc       	sbrc	r4, 3
    6dae:	8f c0       	rjmp	.+286    	; 0x6ece <vfprintf+0x360>
    6db0:	40 fe       	sbrs	r4, 0
    6db2:	89 c0       	rjmp	.+274    	; 0x6ec6 <vfprintf+0x358>
    6db4:	9c 2c       	mov	r9, r12
    6db6:	82 14       	cp	r8, r2
    6db8:	18 f4       	brcc	.+6      	; 0x6dc0 <vfprintf+0x252>
    6dba:	2c 0c       	add	r2, r12
    6dbc:	92 2c       	mov	r9, r2
    6dbe:	98 18       	sub	r9, r8
    6dc0:	44 fe       	sbrs	r4, 4
    6dc2:	8b c0       	rjmp	.+278    	; 0x6eda <vfprintf+0x36c>
    6dc4:	b7 01       	movw	r22, r14
    6dc6:	80 e3       	ldi	r24, 0x30	; 48
    6dc8:	90 e0       	ldi	r25, 0x00	; 0
    6dca:	b2 d0       	rcall	.+356    	; 0x6f30 <fputc>
    6dcc:	42 fe       	sbrs	r4, 2
    6dce:	08 c0       	rjmp	.+16     	; 0x6de0 <vfprintf+0x272>
    6dd0:	88 e7       	ldi	r24, 0x78	; 120
    6dd2:	90 e0       	ldi	r25, 0x00	; 0
    6dd4:	41 fe       	sbrs	r4, 1
    6dd6:	02 c0       	rjmp	.+4      	; 0x6ddc <vfprintf+0x26e>
    6dd8:	88 e5       	ldi	r24, 0x58	; 88
    6dda:	90 e0       	ldi	r25, 0x00	; 0
    6ddc:	b7 01       	movw	r22, r14
    6dde:	a8 d0       	rcall	.+336    	; 0x6f30 <fputc>
    6de0:	c9 14       	cp	r12, r9
    6de2:	08 f4       	brcc	.+2      	; 0x6de6 <vfprintf+0x278>
    6de4:	86 c0       	rjmp	.+268    	; 0x6ef2 <vfprintf+0x384>
    6de6:	ca 94       	dec	r12
    6de8:	d1 2c       	mov	r13, r1
    6dea:	9f ef       	ldi	r25, 0xFF	; 255
    6dec:	c9 1a       	sub	r12, r25
    6dee:	d9 0a       	sbc	r13, r25
    6df0:	ca 0c       	add	r12, r10
    6df2:	db 1c       	adc	r13, r11
    6df4:	f6 01       	movw	r30, r12
    6df6:	82 91       	ld	r24, -Z
    6df8:	6f 01       	movw	r12, r30
    6dfa:	b7 01       	movw	r22, r14
    6dfc:	90 e0       	ldi	r25, 0x00	; 0
    6dfe:	98 d0       	rcall	.+304    	; 0x6f30 <fputc>
    6e00:	ac 14       	cp	r10, r12
    6e02:	bd 04       	cpc	r11, r13
    6e04:	b9 f7       	brne	.-18     	; 0x6df4 <vfprintf+0x286>
    6e06:	57 cf       	rjmp	.-338    	; 0x6cb6 <vfprintf+0x148>
    6e08:	60 81       	ld	r22, Z
    6e0a:	71 81       	ldd	r23, Z+1	; 0x01
    6e0c:	07 2e       	mov	r0, r23
    6e0e:	00 0c       	add	r0, r0
    6e10:	88 0b       	sbc	r24, r24
    6e12:	99 0b       	sbc	r25, r25
    6e14:	0e 5f       	subi	r16, 0xFE	; 254
    6e16:	1f 4f       	sbci	r17, 0xFF	; 255
    6e18:	96 cf       	rjmp	.-212    	; 0x6d46 <vfprintf+0x1d8>
    6e1a:	d3 2c       	mov	r13, r3
    6e1c:	e8 94       	clt
    6e1e:	d4 f8       	bld	r13, 4
    6e20:	2a e0       	ldi	r18, 0x0A	; 10
    6e22:	30 e0       	ldi	r19, 0x00	; 0
    6e24:	85 37       	cpi	r24, 0x75	; 117
    6e26:	31 f1       	breq	.+76     	; 0x6e74 <vfprintf+0x306>
    6e28:	23 2d       	mov	r18, r3
    6e2a:	29 7f       	andi	r18, 0xF9	; 249
    6e2c:	d2 2e       	mov	r13, r18
    6e2e:	8f 36       	cpi	r24, 0x6F	; 111
    6e30:	f9 f0       	breq	.+62     	; 0x6e70 <vfprintf+0x302>
    6e32:	40 f4       	brcc	.+16     	; 0x6e44 <vfprintf+0x2d6>
    6e34:	88 35       	cpi	r24, 0x58	; 88
    6e36:	a1 f0       	breq	.+40     	; 0x6e60 <vfprintf+0x2f2>
    6e38:	f7 01       	movw	r30, r14
    6e3a:	86 81       	ldd	r24, Z+6	; 0x06
    6e3c:	97 81       	ldd	r25, Z+7	; 0x07
    6e3e:	2b 96       	adiw	r28, 0x0b	; 11
    6e40:	e2 e1       	ldi	r30, 0x12	; 18
    6e42:	78 c1       	rjmp	.+752    	; 0x7134 <__epilogue_restores__>
    6e44:	80 37       	cpi	r24, 0x70	; 112
    6e46:	49 f0       	breq	.+18     	; 0x6e5a <vfprintf+0x2ec>
    6e48:	88 37       	cpi	r24, 0x78	; 120
    6e4a:	b1 f7       	brne	.-20     	; 0x6e38 <vfprintf+0x2ca>
    6e4c:	d4 fe       	sbrs	r13, 4
    6e4e:	02 c0       	rjmp	.+4      	; 0x6e54 <vfprintf+0x2e6>
    6e50:	68 94       	set
    6e52:	d2 f8       	bld	r13, 2
    6e54:	20 e1       	ldi	r18, 0x10	; 16
    6e56:	30 e0       	ldi	r19, 0x00	; 0
    6e58:	0d c0       	rjmp	.+26     	; 0x6e74 <vfprintf+0x306>
    6e5a:	68 94       	set
    6e5c:	d4 f8       	bld	r13, 4
    6e5e:	f6 cf       	rjmp	.-20     	; 0x6e4c <vfprintf+0x2de>
    6e60:	34 fe       	sbrs	r3, 4
    6e62:	03 c0       	rjmp	.+6      	; 0x6e6a <vfprintf+0x2fc>
    6e64:	82 2f       	mov	r24, r18
    6e66:	86 60       	ori	r24, 0x06	; 6
    6e68:	d8 2e       	mov	r13, r24
    6e6a:	20 e1       	ldi	r18, 0x10	; 16
    6e6c:	32 e0       	ldi	r19, 0x02	; 2
    6e6e:	02 c0       	rjmp	.+4      	; 0x6e74 <vfprintf+0x306>
    6e70:	28 e0       	ldi	r18, 0x08	; 8
    6e72:	30 e0       	ldi	r19, 0x00	; 0
    6e74:	f8 01       	movw	r30, r16
    6e76:	d7 fe       	sbrs	r13, 7
    6e78:	0e c0       	rjmp	.+28     	; 0x6e96 <vfprintf+0x328>
    6e7a:	60 81       	ld	r22, Z
    6e7c:	71 81       	ldd	r23, Z+1	; 0x01
    6e7e:	82 81       	ldd	r24, Z+2	; 0x02
    6e80:	93 81       	ldd	r25, Z+3	; 0x03
    6e82:	0c 5f       	subi	r16, 0xFC	; 252
    6e84:	1f 4f       	sbci	r17, 0xFF	; 255
    6e86:	a5 01       	movw	r20, r10
    6e88:	83 d0       	rcall	.+262    	; 0x6f90 <__ultoa_invert>
    6e8a:	c8 2e       	mov	r12, r24
    6e8c:	ca 18       	sub	r12, r10
    6e8e:	3d 2c       	mov	r3, r13
    6e90:	e8 94       	clt
    6e92:	37 f8       	bld	r3, 7
    6e94:	6c cf       	rjmp	.-296    	; 0x6d6e <vfprintf+0x200>
    6e96:	60 81       	ld	r22, Z
    6e98:	71 81       	ldd	r23, Z+1	; 0x01
    6e9a:	90 e0       	ldi	r25, 0x00	; 0
    6e9c:	80 e0       	ldi	r24, 0x00	; 0
    6e9e:	0e 5f       	subi	r16, 0xFE	; 254
    6ea0:	1f 4f       	sbci	r17, 0xFF	; 255
    6ea2:	f1 cf       	rjmp	.-30     	; 0x6e86 <vfprintf+0x318>
    6ea4:	42 fc       	sbrc	r4, 2
    6ea6:	02 c0       	rjmp	.+4      	; 0x6eac <vfprintf+0x33e>
    6ea8:	83 94       	inc	r8
    6eaa:	7d cf       	rjmp	.-262    	; 0x6da6 <vfprintf+0x238>
    6eac:	83 94       	inc	r8
    6eae:	83 94       	inc	r8
    6eb0:	7a cf       	rjmp	.-268    	; 0x6da6 <vfprintf+0x238>
    6eb2:	84 2d       	mov	r24, r4
    6eb4:	86 78       	andi	r24, 0x86	; 134
    6eb6:	09 f4       	brne	.+2      	; 0x6eba <vfprintf+0x34c>
    6eb8:	76 cf       	rjmp	.-276    	; 0x6da6 <vfprintf+0x238>
    6eba:	f6 cf       	rjmp	.-20     	; 0x6ea8 <vfprintf+0x33a>
    6ebc:	b7 01       	movw	r22, r14
    6ebe:	80 e2       	ldi	r24, 0x20	; 32
    6ec0:	90 e0       	ldi	r25, 0x00	; 0
    6ec2:	36 d0       	rcall	.+108    	; 0x6f30 <fputc>
    6ec4:	83 94       	inc	r8
    6ec6:	82 14       	cp	r8, r2
    6ec8:	c8 f3       	brcs	.-14     	; 0x6ebc <vfprintf+0x34e>
    6eca:	51 2c       	mov	r5, r1
    6ecc:	79 cf       	rjmp	.-270    	; 0x6dc0 <vfprintf+0x252>
    6ece:	52 2c       	mov	r5, r2
    6ed0:	58 18       	sub	r5, r8
    6ed2:	82 14       	cp	r8, r2
    6ed4:	08 f4       	brcc	.+2      	; 0x6ed8 <vfprintf+0x36a>
    6ed6:	74 cf       	rjmp	.-280    	; 0x6dc0 <vfprintf+0x252>
    6ed8:	f8 cf       	rjmp	.-16     	; 0x6eca <vfprintf+0x35c>
    6eda:	84 2d       	mov	r24, r4
    6edc:	86 78       	andi	r24, 0x86	; 134
    6ede:	09 f4       	brne	.+2      	; 0x6ee2 <vfprintf+0x374>
    6ee0:	7f cf       	rjmp	.-258    	; 0x6de0 <vfprintf+0x272>
    6ee2:	8b e2       	ldi	r24, 0x2B	; 43
    6ee4:	41 fe       	sbrs	r4, 1
    6ee6:	80 e2       	ldi	r24, 0x20	; 32
    6ee8:	47 fc       	sbrc	r4, 7
    6eea:	8d e2       	ldi	r24, 0x2D	; 45
    6eec:	b7 01       	movw	r22, r14
    6eee:	90 e0       	ldi	r25, 0x00	; 0
    6ef0:	76 cf       	rjmp	.-276    	; 0x6dde <vfprintf+0x270>
    6ef2:	b7 01       	movw	r22, r14
    6ef4:	80 e3       	ldi	r24, 0x30	; 48
    6ef6:	90 e0       	ldi	r25, 0x00	; 0
    6ef8:	1b d0       	rcall	.+54     	; 0x6f30 <fputc>
    6efa:	9a 94       	dec	r9
    6efc:	71 cf       	rjmp	.-286    	; 0x6de0 <vfprintf+0x272>
    6efe:	8f ef       	ldi	r24, 0xFF	; 255
    6f00:	9f ef       	ldi	r25, 0xFF	; 255
    6f02:	9d cf       	rjmp	.-198    	; 0x6e3e <vfprintf+0x2d0>

00006f04 <strnlen_P>:
strnlen_P():
    6f04:	fc 01       	movw	r30, r24
    6f06:	05 90       	lpm	r0, Z+
    6f08:	61 50       	subi	r22, 0x01	; 1
    6f0a:	70 40       	sbci	r23, 0x00	; 0
    6f0c:	01 10       	cpse	r0, r1
    6f0e:	d8 f7       	brcc	.-10     	; 0x6f06 <strnlen_P+0x2>
    6f10:	80 95       	com	r24
    6f12:	90 95       	com	r25
    6f14:	8e 0f       	add	r24, r30
    6f16:	9f 1f       	adc	r25, r31
    6f18:	08 95       	ret

00006f1a <strnlen>:
strnlen():
    6f1a:	fc 01       	movw	r30, r24
    6f1c:	61 50       	subi	r22, 0x01	; 1
    6f1e:	70 40       	sbci	r23, 0x00	; 0
    6f20:	01 90       	ld	r0, Z+
    6f22:	01 10       	cpse	r0, r1
    6f24:	d8 f7       	brcc	.-10     	; 0x6f1c <strnlen+0x2>
    6f26:	80 95       	com	r24
    6f28:	90 95       	com	r25
    6f2a:	8e 0f       	add	r24, r30
    6f2c:	9f 1f       	adc	r25, r31
    6f2e:	08 95       	ret

00006f30 <fputc>:
fputc():
    6f30:	0f 93       	push	r16
    6f32:	1f 93       	push	r17
    6f34:	cf 93       	push	r28
    6f36:	df 93       	push	r29
    6f38:	18 2f       	mov	r17, r24
    6f3a:	09 2f       	mov	r16, r25
    6f3c:	eb 01       	movw	r28, r22
    6f3e:	8b 81       	ldd	r24, Y+3	; 0x03
    6f40:	81 fd       	sbrc	r24, 1
    6f42:	09 c0       	rjmp	.+18     	; 0x6f56 <fputc+0x26>
    6f44:	1f ef       	ldi	r17, 0xFF	; 255
    6f46:	0f ef       	ldi	r16, 0xFF	; 255
    6f48:	81 2f       	mov	r24, r17
    6f4a:	90 2f       	mov	r25, r16
    6f4c:	df 91       	pop	r29
    6f4e:	cf 91       	pop	r28
    6f50:	1f 91       	pop	r17
    6f52:	0f 91       	pop	r16
    6f54:	08 95       	ret
    6f56:	82 ff       	sbrs	r24, 2
    6f58:	14 c0       	rjmp	.+40     	; 0x6f82 <fputc+0x52>
    6f5a:	2e 81       	ldd	r18, Y+6	; 0x06
    6f5c:	3f 81       	ldd	r19, Y+7	; 0x07
    6f5e:	8c 81       	ldd	r24, Y+4	; 0x04
    6f60:	9d 81       	ldd	r25, Y+5	; 0x05
    6f62:	28 17       	cp	r18, r24
    6f64:	39 07       	cpc	r19, r25
    6f66:	3c f4       	brge	.+14     	; 0x6f76 <fputc+0x46>
    6f68:	e8 81       	ld	r30, Y
    6f6a:	f9 81       	ldd	r31, Y+1	; 0x01
    6f6c:	cf 01       	movw	r24, r30
    6f6e:	01 96       	adiw	r24, 0x01	; 1
    6f70:	88 83       	st	Y, r24
    6f72:	99 83       	std	Y+1, r25	; 0x01
    6f74:	10 83       	st	Z, r17
    6f76:	8e 81       	ldd	r24, Y+6	; 0x06
    6f78:	9f 81       	ldd	r25, Y+7	; 0x07
    6f7a:	01 96       	adiw	r24, 0x01	; 1
    6f7c:	8e 83       	std	Y+6, r24	; 0x06
    6f7e:	9f 83       	std	Y+7, r25	; 0x07
    6f80:	e3 cf       	rjmp	.-58     	; 0x6f48 <fputc+0x18>
    6f82:	e8 85       	ldd	r30, Y+8	; 0x08
    6f84:	f9 85       	ldd	r31, Y+9	; 0x09
    6f86:	81 2f       	mov	r24, r17
    6f88:	09 95       	icall
    6f8a:	89 2b       	or	r24, r25
    6f8c:	a1 f3       	breq	.-24     	; 0x6f76 <fputc+0x46>
    6f8e:	da cf       	rjmp	.-76     	; 0x6f44 <fputc+0x14>

00006f90 <__ultoa_invert>:
__ultoa_invert():
    6f90:	fa 01       	movw	r30, r20
    6f92:	aa 27       	eor	r26, r26
    6f94:	28 30       	cpi	r18, 0x08	; 8
    6f96:	51 f1       	breq	.+84     	; 0x6fec <__ultoa_invert+0x5c>
    6f98:	20 31       	cpi	r18, 0x10	; 16
    6f9a:	81 f1       	breq	.+96     	; 0x6ffc <__ultoa_invert+0x6c>
    6f9c:	e8 94       	clt
    6f9e:	6f 93       	push	r22
    6fa0:	6e 7f       	andi	r22, 0xFE	; 254
    6fa2:	6e 5f       	subi	r22, 0xFE	; 254
    6fa4:	7f 4f       	sbci	r23, 0xFF	; 255
    6fa6:	8f 4f       	sbci	r24, 0xFF	; 255
    6fa8:	9f 4f       	sbci	r25, 0xFF	; 255
    6faa:	af 4f       	sbci	r26, 0xFF	; 255
    6fac:	b1 e0       	ldi	r27, 0x01	; 1
    6fae:	3e d0       	rcall	.+124    	; 0x702c <__ultoa_invert+0x9c>
    6fb0:	b4 e0       	ldi	r27, 0x04	; 4
    6fb2:	3c d0       	rcall	.+120    	; 0x702c <__ultoa_invert+0x9c>
    6fb4:	67 0f       	add	r22, r23
    6fb6:	78 1f       	adc	r23, r24
    6fb8:	89 1f       	adc	r24, r25
    6fba:	9a 1f       	adc	r25, r26
    6fbc:	a1 1d       	adc	r26, r1
    6fbe:	68 0f       	add	r22, r24
    6fc0:	79 1f       	adc	r23, r25
    6fc2:	8a 1f       	adc	r24, r26
    6fc4:	91 1d       	adc	r25, r1
    6fc6:	a1 1d       	adc	r26, r1
    6fc8:	6a 0f       	add	r22, r26
    6fca:	71 1d       	adc	r23, r1
    6fcc:	81 1d       	adc	r24, r1
    6fce:	91 1d       	adc	r25, r1
    6fd0:	a1 1d       	adc	r26, r1
    6fd2:	20 d0       	rcall	.+64     	; 0x7014 <__ultoa_invert+0x84>
    6fd4:	09 f4       	brne	.+2      	; 0x6fd8 <__ultoa_invert+0x48>
    6fd6:	68 94       	set
    6fd8:	3f 91       	pop	r19
    6fda:	2a e0       	ldi	r18, 0x0A	; 10
    6fdc:	26 9f       	mul	r18, r22
    6fde:	11 24       	eor	r1, r1
    6fe0:	30 19       	sub	r19, r0
    6fe2:	30 5d       	subi	r19, 0xD0	; 208
    6fe4:	31 93       	st	Z+, r19
    6fe6:	de f6       	brtc	.-74     	; 0x6f9e <__ultoa_invert+0xe>
    6fe8:	cf 01       	movw	r24, r30
    6fea:	08 95       	ret
    6fec:	46 2f       	mov	r20, r22
    6fee:	47 70       	andi	r20, 0x07	; 7
    6ff0:	40 5d       	subi	r20, 0xD0	; 208
    6ff2:	41 93       	st	Z+, r20
    6ff4:	b3 e0       	ldi	r27, 0x03	; 3
    6ff6:	0f d0       	rcall	.+30     	; 0x7016 <__ultoa_invert+0x86>
    6ff8:	c9 f7       	brne	.-14     	; 0x6fec <__ultoa_invert+0x5c>
    6ffa:	f6 cf       	rjmp	.-20     	; 0x6fe8 <__ultoa_invert+0x58>
    6ffc:	46 2f       	mov	r20, r22
    6ffe:	4f 70       	andi	r20, 0x0F	; 15
    7000:	40 5d       	subi	r20, 0xD0	; 208
    7002:	4a 33       	cpi	r20, 0x3A	; 58
    7004:	18 f0       	brcs	.+6      	; 0x700c <__ultoa_invert+0x7c>
    7006:	49 5d       	subi	r20, 0xD9	; 217
    7008:	31 fd       	sbrc	r19, 1
    700a:	40 52       	subi	r20, 0x20	; 32
    700c:	41 93       	st	Z+, r20
    700e:	02 d0       	rcall	.+4      	; 0x7014 <__ultoa_invert+0x84>
    7010:	a9 f7       	brne	.-22     	; 0x6ffc <__ultoa_invert+0x6c>
    7012:	ea cf       	rjmp	.-44     	; 0x6fe8 <__ultoa_invert+0x58>
    7014:	b4 e0       	ldi	r27, 0x04	; 4
    7016:	a6 95       	lsr	r26
    7018:	97 95       	ror	r25
    701a:	87 95       	ror	r24
    701c:	77 95       	ror	r23
    701e:	67 95       	ror	r22
    7020:	ba 95       	dec	r27
    7022:	c9 f7       	brne	.-14     	; 0x7016 <__ultoa_invert+0x86>
    7024:	00 97       	sbiw	r24, 0x00	; 0
    7026:	61 05       	cpc	r22, r1
    7028:	71 05       	cpc	r23, r1
    702a:	08 95       	ret
    702c:	9b 01       	movw	r18, r22
    702e:	ac 01       	movw	r20, r24
    7030:	0a 2e       	mov	r0, r26
    7032:	06 94       	lsr	r0
    7034:	57 95       	ror	r21
    7036:	47 95       	ror	r20
    7038:	37 95       	ror	r19
    703a:	27 95       	ror	r18
    703c:	ba 95       	dec	r27
    703e:	c9 f7       	brne	.-14     	; 0x7032 <__ultoa_invert+0xa2>
    7040:	62 0f       	add	r22, r18
    7042:	73 1f       	adc	r23, r19
    7044:	84 1f       	adc	r24, r20
    7046:	95 1f       	adc	r25, r21
    7048:	a0 1d       	adc	r26, r0
    704a:	08 95       	ret

0000704c <__fp_inf>:
__fp_inf():
    704c:	97 f9       	bld	r25, 7
    704e:	9f 67       	ori	r25, 0x7F	; 127
    7050:	80 e8       	ldi	r24, 0x80	; 128
    7052:	70 e0       	ldi	r23, 0x00	; 0
    7054:	60 e0       	ldi	r22, 0x00	; 0
    7056:	08 95       	ret

00007058 <__fp_nan>:
__fp_nan():
    7058:	9f ef       	ldi	r25, 0xFF	; 255
    705a:	80 ec       	ldi	r24, 0xC0	; 192
    705c:	08 95       	ret

0000705e <__fp_pscA>:
__fp_pscA():
    705e:	00 24       	eor	r0, r0
    7060:	0a 94       	dec	r0
    7062:	16 16       	cp	r1, r22
    7064:	17 06       	cpc	r1, r23
    7066:	18 06       	cpc	r1, r24
    7068:	09 06       	cpc	r0, r25
    706a:	08 95       	ret

0000706c <__fp_pscB>:
__fp_pscB():
    706c:	00 24       	eor	r0, r0
    706e:	0a 94       	dec	r0
    7070:	12 16       	cp	r1, r18
    7072:	13 06       	cpc	r1, r19
    7074:	14 06       	cpc	r1, r20
    7076:	05 06       	cpc	r0, r21
    7078:	08 95       	ret

0000707a <__fp_round>:
__fp_round():
    707a:	09 2e       	mov	r0, r25
    707c:	03 94       	inc	r0
    707e:	00 0c       	add	r0, r0
    7080:	11 f4       	brne	.+4      	; 0x7086 <__fp_round+0xc>
    7082:	88 23       	and	r24, r24
    7084:	52 f0       	brmi	.+20     	; 0x709a <__fp_round+0x20>
    7086:	bb 0f       	add	r27, r27
    7088:	40 f4       	brcc	.+16     	; 0x709a <__fp_round+0x20>
    708a:	bf 2b       	or	r27, r31
    708c:	11 f4       	brne	.+4      	; 0x7092 <__fp_round+0x18>
    708e:	60 ff       	sbrs	r22, 0
    7090:	04 c0       	rjmp	.+8      	; 0x709a <__fp_round+0x20>
    7092:	6f 5f       	subi	r22, 0xFF	; 255
    7094:	7f 4f       	sbci	r23, 0xFF	; 255
    7096:	8f 4f       	sbci	r24, 0xFF	; 255
    7098:	9f 4f       	sbci	r25, 0xFF	; 255
    709a:	08 95       	ret

0000709c <__fp_split3>:
__fp_split3():
    709c:	57 fd       	sbrc	r21, 7
    709e:	90 58       	subi	r25, 0x80	; 128
    70a0:	44 0f       	add	r20, r20
    70a2:	55 1f       	adc	r21, r21
    70a4:	59 f0       	breq	.+22     	; 0x70bc <__fp_splitA+0x10>
    70a6:	5f 3f       	cpi	r21, 0xFF	; 255
    70a8:	71 f0       	breq	.+28     	; 0x70c6 <__fp_splitA+0x1a>
    70aa:	47 95       	ror	r20

000070ac <__fp_splitA>:
    70ac:	88 0f       	add	r24, r24
    70ae:	97 fb       	bst	r25, 7
    70b0:	99 1f       	adc	r25, r25
    70b2:	61 f0       	breq	.+24     	; 0x70cc <__fp_splitA+0x20>
    70b4:	9f 3f       	cpi	r25, 0xFF	; 255
    70b6:	79 f0       	breq	.+30     	; 0x70d6 <__fp_splitA+0x2a>
    70b8:	87 95       	ror	r24
    70ba:	08 95       	ret
    70bc:	12 16       	cp	r1, r18
    70be:	13 06       	cpc	r1, r19
    70c0:	14 06       	cpc	r1, r20
    70c2:	55 1f       	adc	r21, r21
    70c4:	f2 cf       	rjmp	.-28     	; 0x70aa <__fp_split3+0xe>
    70c6:	46 95       	lsr	r20
    70c8:	f1 df       	rcall	.-30     	; 0x70ac <__fp_splitA>
    70ca:	08 c0       	rjmp	.+16     	; 0x70dc <__fp_splitA+0x30>
    70cc:	16 16       	cp	r1, r22
    70ce:	17 06       	cpc	r1, r23
    70d0:	18 06       	cpc	r1, r24
    70d2:	99 1f       	adc	r25, r25
    70d4:	f1 cf       	rjmp	.-30     	; 0x70b8 <__fp_splitA+0xc>
    70d6:	86 95       	lsr	r24
    70d8:	71 05       	cpc	r23, r1
    70da:	61 05       	cpc	r22, r1
    70dc:	08 94       	sec
    70de:	08 95       	ret

000070e0 <__fp_zero>:
__fp_zero():
    70e0:	e8 94       	clt

000070e2 <__fp_szero>:
    70e2:	bb 27       	eor	r27, r27
    70e4:	66 27       	eor	r22, r22
    70e6:	77 27       	eor	r23, r23
    70e8:	cb 01       	movw	r24, r22
    70ea:	97 f9       	bld	r25, 7
    70ec:	08 95       	ret

000070ee <__muluhisi3>:
__muluhisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:626
    70ee:	3a d0       	rcall	.+116    	; 0x7164 <__umulhisi3>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:627
    70f0:	a5 9f       	mul	r26, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:628
    70f2:	90 0d       	add	r25, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:629
    70f4:	b4 9f       	mul	r27, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:630
    70f6:	90 0d       	add	r25, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:631
    70f8:	a4 9f       	mul	r26, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:632
    70fa:	80 0d       	add	r24, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:633
    70fc:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:634
    70fe:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:635
    7100:	08 95       	ret

00007102 <__prologue_saves__>:
__prologue_saves__():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2169
    7102:	2f 92       	push	r2
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2170
    7104:	3f 92       	push	r3
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2171
    7106:	4f 92       	push	r4
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2172
    7108:	5f 92       	push	r5
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2173
    710a:	6f 92       	push	r6
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2174
    710c:	7f 92       	push	r7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2175
    710e:	8f 92       	push	r8
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2176
    7110:	9f 92       	push	r9
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2177
    7112:	af 92       	push	r10
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2178
    7114:	bf 92       	push	r11
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2179
    7116:	cf 92       	push	r12
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2180
    7118:	df 92       	push	r13
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2181
    711a:	ef 92       	push	r14
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2182
    711c:	ff 92       	push	r15
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2183
    711e:	0f 93       	push	r16
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2184
    7120:	1f 93       	push	r17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2185
    7122:	cf 93       	push	r28
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2186
    7124:	df 93       	push	r29
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2193
    7126:	cd b7       	in	r28, 0x3d	; 61
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2194
    7128:	de b7       	in	r29, 0x3e	; 62
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2195
    712a:	ca 1b       	sub	r28, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2196
    712c:	db 0b       	sbc	r29, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2197
    712e:	cd bf       	out	0x3d, r28	; 61
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2198
    7130:	de bf       	out	0x3e, r29	; 62
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2211
    7132:	09 94       	ijmp

00007134 <__epilogue_restores__>:
__epilogue_restores__():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2222
    7134:	2a 88       	ldd	r2, Y+18	; 0x12
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2223
    7136:	39 88       	ldd	r3, Y+17	; 0x11
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2224
    7138:	48 88       	ldd	r4, Y+16	; 0x10
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2225
    713a:	5f 84       	ldd	r5, Y+15	; 0x0f
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2226
    713c:	6e 84       	ldd	r6, Y+14	; 0x0e
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2227
    713e:	7d 84       	ldd	r7, Y+13	; 0x0d
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2228
    7140:	8c 84       	ldd	r8, Y+12	; 0x0c
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2229
    7142:	9b 84       	ldd	r9, Y+11	; 0x0b
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2230
    7144:	aa 84       	ldd	r10, Y+10	; 0x0a
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2231
    7146:	b9 84       	ldd	r11, Y+9	; 0x09
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2232
    7148:	c8 84       	ldd	r12, Y+8	; 0x08
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2233
    714a:	df 80       	ldd	r13, Y+7	; 0x07
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2234
    714c:	ee 80       	ldd	r14, Y+6	; 0x06
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2235
    714e:	fd 80       	ldd	r15, Y+5	; 0x05
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2236
    7150:	0c 81       	ldd	r16, Y+4	; 0x04
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2237
    7152:	1b 81       	ldd	r17, Y+3	; 0x03
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2238
    7154:	aa 81       	ldd	r26, Y+2	; 0x02
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2245
    7156:	b9 81       	ldd	r27, Y+1	; 0x01
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2246
    7158:	ce 0f       	add	r28, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2247
    715a:	d1 1d       	adc	r29, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2248
    715c:	cd bf       	out	0x3d, r28	; 61
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2249
    715e:	de bf       	out	0x3e, r29	; 62
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2250
    7160:	ed 01       	movw	r28, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2263
    7162:	08 95       	ret

00007164 <__umulhisi3>:
__umulhisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:564
    7164:	a2 9f       	mul	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:565
    7166:	b0 01       	movw	r22, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:566
    7168:	b3 9f       	mul	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:567
    716a:	c0 01       	movw	r24, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:568
    716c:	a3 9f       	mul	r26, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:573
    716e:	70 0d       	add	r23, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:574
    7170:	81 1d       	adc	r24, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:575
    7172:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:576
    7174:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:580
    7176:	b2 9f       	mul	r27, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:581
    7178:	70 0d       	add	r23, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:582
    717a:	81 1d       	adc	r24, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:583
    717c:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:584
    717e:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:585
    7180:	08 95       	ret

00007182 <__subsf3>:
__subsf3():
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src\utility/twi.c:315
    7182:	50 58       	subi	r21, 0x80	; 128

00007184 <__addsf3>:
    7184:	bb 27       	eor	r27, r27
    7186:	aa 27       	eor	r26, r26
    7188:	0e d0       	rcall	.+28     	; 0x71a6 <__addsf3x>
    718a:	77 cf       	rjmp	.-274    	; 0x707a <__fp_round>
__addsf3():
    718c:	68 df       	rcall	.-304    	; 0x705e <__fp_pscA>
    718e:	30 f0       	brcs	.+12     	; 0x719c <__addsf3+0x18>
    7190:	6d df       	rcall	.-294    	; 0x706c <__fp_pscB>
    7192:	20 f0       	brcs	.+8      	; 0x719c <__addsf3+0x18>
    7194:	31 f4       	brne	.+12     	; 0x71a2 <__addsf3+0x1e>
    7196:	9f 3f       	cpi	r25, 0xFF	; 255
    7198:	11 f4       	brne	.+4      	; 0x719e <__addsf3+0x1a>
    719a:	1e f4       	brtc	.+6      	; 0x71a2 <__addsf3+0x1e>
    719c:	5d cf       	rjmp	.-326    	; 0x7058 <__fp_nan>
    719e:	0e f4       	brtc	.+2      	; 0x71a2 <__addsf3+0x1e>
    71a0:	e0 95       	com	r30
    71a2:	e7 fb       	bst	r30, 7
    71a4:	53 cf       	rjmp	.-346    	; 0x704c <__fp_inf>

000071a6 <__addsf3x>:
__addsf3x():
    71a6:	e9 2f       	mov	r30, r25
    71a8:	79 df       	rcall	.-270    	; 0x709c <__fp_split3>
    71aa:	80 f3       	brcs	.-32     	; 0x718c <__addsf3+0x8>
    71ac:	ba 17       	cp	r27, r26
    71ae:	62 07       	cpc	r22, r18
    71b0:	73 07       	cpc	r23, r19
    71b2:	84 07       	cpc	r24, r20
    71b4:	95 07       	cpc	r25, r21
    71b6:	18 f0       	brcs	.+6      	; 0x71be <__addsf3x+0x18>
    71b8:	71 f4       	brne	.+28     	; 0x71d6 <__addsf3x+0x30>
    71ba:	9e f5       	brtc	.+102    	; 0x7222 <__addsf3x+0x7c>
    71bc:	91 cf       	rjmp	.-222    	; 0x70e0 <__fp_zero>
    71be:	0e f4       	brtc	.+2      	; 0x71c2 <__addsf3x+0x1c>
    71c0:	e0 95       	com	r30
    71c2:	0b 2e       	mov	r0, r27
    71c4:	ba 2f       	mov	r27, r26
    71c6:	a0 2d       	mov	r26, r0
    71c8:	0b 01       	movw	r0, r22
    71ca:	b9 01       	movw	r22, r18
    71cc:	90 01       	movw	r18, r0
    71ce:	0c 01       	movw	r0, r24
    71d0:	ca 01       	movw	r24, r20
    71d2:	a0 01       	movw	r20, r0
    71d4:	11 24       	eor	r1, r1
    71d6:	ff 27       	eor	r31, r31
    71d8:	59 1b       	sub	r21, r25
    71da:	99 f0       	breq	.+38     	; 0x7202 <__addsf3x+0x5c>
    71dc:	59 3f       	cpi	r21, 0xF9	; 249
    71de:	50 f4       	brcc	.+20     	; 0x71f4 <__addsf3x+0x4e>
    71e0:	50 3e       	cpi	r21, 0xE0	; 224
    71e2:	68 f1       	brcs	.+90     	; 0x723e <__addsf3x+0x98>
    71e4:	1a 16       	cp	r1, r26
    71e6:	f0 40       	sbci	r31, 0x00	; 0
    71e8:	a2 2f       	mov	r26, r18
    71ea:	23 2f       	mov	r18, r19
    71ec:	34 2f       	mov	r19, r20
    71ee:	44 27       	eor	r20, r20
    71f0:	58 5f       	subi	r21, 0xF8	; 248
    71f2:	f3 cf       	rjmp	.-26     	; 0x71da <__addsf3x+0x34>
    71f4:	46 95       	lsr	r20
    71f6:	37 95       	ror	r19
    71f8:	27 95       	ror	r18
    71fa:	a7 95       	ror	r26
    71fc:	f0 40       	sbci	r31, 0x00	; 0
    71fe:	53 95       	inc	r21
    7200:	c9 f7       	brne	.-14     	; 0x71f4 <__addsf3x+0x4e>
    7202:	7e f4       	brtc	.+30     	; 0x7222 <__addsf3x+0x7c>
    7204:	1f 16       	cp	r1, r31
    7206:	ba 0b       	sbc	r27, r26
    7208:	62 0b       	sbc	r22, r18
    720a:	73 0b       	sbc	r23, r19
    720c:	84 0b       	sbc	r24, r20
    720e:	ba f0       	brmi	.+46     	; 0x723e <__addsf3x+0x98>
    7210:	91 50       	subi	r25, 0x01	; 1
    7212:	a1 f0       	breq	.+40     	; 0x723c <__addsf3x+0x96>
    7214:	ff 0f       	add	r31, r31
    7216:	bb 1f       	adc	r27, r27
    7218:	66 1f       	adc	r22, r22
    721a:	77 1f       	adc	r23, r23
    721c:	88 1f       	adc	r24, r24
    721e:	c2 f7       	brpl	.-16     	; 0x7210 <__addsf3x+0x6a>
    7220:	0e c0       	rjmp	.+28     	; 0x723e <__addsf3x+0x98>
    7222:	ba 0f       	add	r27, r26
    7224:	62 1f       	adc	r22, r18
    7226:	73 1f       	adc	r23, r19
    7228:	84 1f       	adc	r24, r20
    722a:	48 f4       	brcc	.+18     	; 0x723e <__addsf3x+0x98>
    722c:	87 95       	ror	r24
    722e:	77 95       	ror	r23
    7230:	67 95       	ror	r22
    7232:	b7 95       	ror	r27
    7234:	f7 95       	ror	r31
    7236:	9e 3f       	cpi	r25, 0xFE	; 254
    7238:	08 f0       	brcs	.+2      	; 0x723c <__addsf3x+0x96>
    723a:	b3 cf       	rjmp	.-154    	; 0x71a2 <__addsf3+0x1e>
    723c:	93 95       	inc	r25
    723e:	88 0f       	add	r24, r24
    7240:	08 f0       	brcs	.+2      	; 0x7244 <__addsf3x+0x9e>
    7242:	99 27       	eor	r25, r25
    7244:	ee 0f       	add	r30, r30
    7246:	97 95       	ror	r25
    7248:	87 95       	ror	r24
    724a:	08 95       	ret

0000724c <__fixunssfsi>:
    724c:	2f df       	rcall	.-418    	; 0x70ac <__fp_splitA>
    724e:	88 f0       	brcs	.+34     	; 0x7272 <__fixunssfsi+0x26>
    7250:	9f 57       	subi	r25, 0x7F	; 127
    7252:	90 f0       	brcs	.+36     	; 0x7278 <__fixunssfsi+0x2c>
    7254:	b9 2f       	mov	r27, r25
    7256:	99 27       	eor	r25, r25
    7258:	b7 51       	subi	r27, 0x17	; 23
    725a:	a0 f0       	brcs	.+40     	; 0x7284 <__fixunssfsi+0x38>
    725c:	d1 f0       	breq	.+52     	; 0x7292 <__fixunssfsi+0x46>
    725e:	66 0f       	add	r22, r22
    7260:	77 1f       	adc	r23, r23
    7262:	88 1f       	adc	r24, r24
    7264:	99 1f       	adc	r25, r25
    7266:	1a f0       	brmi	.+6      	; 0x726e <__fixunssfsi+0x22>
    7268:	ba 95       	dec	r27
    726a:	c9 f7       	brne	.-14     	; 0x725e <__fixunssfsi+0x12>
    726c:	12 c0       	rjmp	.+36     	; 0x7292 <__fixunssfsi+0x46>
    726e:	b1 30       	cpi	r27, 0x01	; 1
    7270:	81 f0       	breq	.+32     	; 0x7292 <__fixunssfsi+0x46>
__fixunssfsi():
    7272:	36 df       	rcall	.-404    	; 0x70e0 <__fp_zero>
    7274:	b1 e0       	ldi	r27, 0x01	; 1
    7276:	08 95       	ret
    7278:	33 cf       	rjmp	.-410    	; 0x70e0 <__fp_zero>
    727a:	67 2f       	mov	r22, r23
    727c:	78 2f       	mov	r23, r24
    727e:	88 27       	eor	r24, r24
    7280:	b8 5f       	subi	r27, 0xF8	; 248
    7282:	39 f0       	breq	.+14     	; 0x7292 <__fixunssfsi+0x46>
    7284:	b9 3f       	cpi	r27, 0xF9	; 249
    7286:	cc f3       	brlt	.-14     	; 0x727a <__fixunssfsi+0x2e>
    7288:	86 95       	lsr	r24
    728a:	77 95       	ror	r23
    728c:	67 95       	ror	r22
    728e:	b3 95       	inc	r27
    7290:	d9 f7       	brne	.-10     	; 0x7288 <__fixunssfsi+0x3c>
    7292:	3e f4       	brtc	.+14     	; 0x72a2 <__fixunssfsi+0x56>
    7294:	90 95       	com	r25
    7296:	80 95       	com	r24
    7298:	70 95       	com	r23
    729a:	61 95       	neg	r22
    729c:	7f 4f       	sbci	r23, 0xFF	; 255
    729e:	8f 4f       	sbci	r24, 0xFF	; 255
    72a0:	9f 4f       	sbci	r25, 0xFF	; 255
    72a2:	08 95       	ret

000072a4 <__udivmodhi4>:
__udivmodhi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1408
    72a4:	aa 1b       	sub	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1409
    72a6:	bb 1b       	sub	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1410
    72a8:	51 e1       	ldi	r21, 0x11	; 17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1411
    72aa:	07 c0       	rjmp	.+14     	; 0x72ba <__udivmodhi4_ep>

000072ac <__udivmodhi4_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1413
    72ac:	aa 1f       	adc	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1414
    72ae:	bb 1f       	adc	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1415
    72b0:	a6 17       	cp	r26, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1416
    72b2:	b7 07       	cpc	r27, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1417
    72b4:	10 f0       	brcs	.+4      	; 0x72ba <__udivmodhi4_ep>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1418
    72b6:	a6 1b       	sub	r26, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1419
    72b8:	b7 0b       	sbc	r27, r23

000072ba <__udivmodhi4_ep>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1421
    72ba:	88 1f       	adc	r24, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1422
    72bc:	99 1f       	adc	r25, r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1423
    72be:	5a 95       	dec	r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1424
    72c0:	a9 f7       	brne	.-22     	; 0x72ac <__udivmodhi4_loop>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1425
    72c2:	80 95       	com	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1426
    72c4:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1428
    72c6:	bc 01       	movw	r22, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1430
    72c8:	cd 01       	movw	r24, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1432
    72ca:	08 95       	ret

000072cc <__divmodhi4>:
__divmodhi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1440
    72cc:	97 fb       	bst	r25, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1441
    72ce:	07 2e       	mov	r0, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1442
    72d0:	16 f4       	brtc	.+4      	; 0x72d6 <__divmodhi4+0xa>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1443
    72d2:	00 94       	com	r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1444
    72d4:	06 d0       	rcall	.+12     	; 0x72e2 <__divmodhi4_neg1>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1446
    72d6:	77 fd       	sbrc	r23, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1447
    72d8:	08 d0       	rcall	.+16     	; 0x72ea <__divmodhi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1448
    72da:	e4 df       	rcall	.-56     	; 0x72a4 <__udivmodhi4>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1449
    72dc:	07 fc       	sbrc	r0, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1450
    72de:	05 d0       	rcall	.+10     	; 0x72ea <__divmodhi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1451
    72e0:	3e f4       	brtc	.+14     	; 0x72f0 <__divmodhi4_exit>

000072e2 <__divmodhi4_neg1>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1454
    72e2:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1455
    72e4:	81 95       	neg	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1456
    72e6:	9f 4f       	sbci	r25, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1457
    72e8:	08 95       	ret

000072ea <__divmodhi4_neg2>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1460
    72ea:	70 95       	com	r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1461
    72ec:	61 95       	neg	r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1462
    72ee:	7f 4f       	sbci	r23, 0xFF	; 255

000072f0 <__divmodhi4_exit>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1464
    72f0:	08 95       	ret

000072f2 <__udivmodsi4>:
__udivmodsi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1638
    72f2:	a1 e2       	ldi	r26, 0x21	; 33
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1639
    72f4:	1a 2e       	mov	r1, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1640
    72f6:	aa 1b       	sub	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1641
    72f8:	bb 1b       	sub	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1642
    72fa:	fd 01       	movw	r30, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1644
    72fc:	0d c0       	rjmp	.+26     	; 0x7318 <__udivmodsi4_ep>

000072fe <__udivmodsi4_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1646
    72fe:	aa 1f       	adc	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1647
    7300:	bb 1f       	adc	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1648
    7302:	ee 1f       	adc	r30, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1649
    7304:	ff 1f       	adc	r31, r31
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1650
    7306:	a2 17       	cp	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1651
    7308:	b3 07       	cpc	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1652
    730a:	e4 07       	cpc	r30, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1653
    730c:	f5 07       	cpc	r31, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1654
    730e:	20 f0       	brcs	.+8      	; 0x7318 <__udivmodsi4_ep>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1655
    7310:	a2 1b       	sub	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1656
    7312:	b3 0b       	sbc	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1657
    7314:	e4 0b       	sbc	r30, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1658
    7316:	f5 0b       	sbc	r31, r21

00007318 <__udivmodsi4_ep>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1660
    7318:	66 1f       	adc	r22, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1661
    731a:	77 1f       	adc	r23, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1662
    731c:	88 1f       	adc	r24, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1663
    731e:	99 1f       	adc	r25, r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1664
    7320:	1a 94       	dec	r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1665
    7322:	69 f7       	brne	.-38     	; 0x72fe <__udivmodsi4_loop>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1667
    7324:	60 95       	com	r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1668
    7326:	70 95       	com	r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1669
    7328:	80 95       	com	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1670
    732a:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1672
    732c:	9b 01       	movw	r18, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1674
    732e:	ac 01       	movw	r20, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1676
    7330:	bd 01       	movw	r22, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1678
    7332:	cf 01       	movw	r24, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1680
    7334:	08 95       	ret

00007336 <__divmodsi4>:
__divmodsi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1686
    7336:	05 2e       	mov	r0, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1687
    7338:	97 fb       	bst	r25, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1688
    733a:	16 f4       	brtc	.+4      	; 0x7340 <__divmodsi4+0xa>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1689
    733c:	00 94       	com	r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1690
    733e:	0f d0       	rcall	.+30     	; 0x735e <__negsi2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1692
    7340:	57 fd       	sbrc	r21, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1694
    7342:	05 d0       	rcall	.+10     	; 0x734e <__divmodsi4_neg2>
    7344:	d6 df       	rcall	.-84     	; 0x72f2 <__udivmodsi4>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1695
    7346:	07 fc       	sbrc	r0, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1697
    7348:	02 d0       	rcall	.+4      	; 0x734e <__divmodsi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1698
    734a:	46 f4       	brtc	.+16     	; 0x735c <__divmodsi4_exit>
    734c:	08 c0       	rjmp	.+16     	; 0x735e <__negsi2>

0000734e <__divmodsi4_neg2>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1701
    734e:	50 95       	com	r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1702
    7350:	40 95       	com	r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1703
    7352:	30 95       	com	r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1704
    7354:	21 95       	neg	r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1705
    7356:	3f 4f       	sbci	r19, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1706
    7358:	4f 4f       	sbci	r20, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1707
    735a:	5f 4f       	sbci	r21, 0xFF	; 255

0000735c <__divmodsi4_exit>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1709
    735c:	08 95       	ret

0000735e <__negsi2>:
__negsi2():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1718
    735e:	90 95       	com	r25
    7360:	80 95       	com	r24
    7362:	70 95       	com	r23
    7364:	61 95       	neg	r22
    7366:	7f 4f       	sbci	r23, 0xFF	; 255
    7368:	8f 4f       	sbci	r24, 0xFF	; 255
    736a:	9f 4f       	sbci	r25, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1719
    736c:	08 95       	ret

0000736e <__tablejump2__>:
__tablejump2__():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2296
    736e:	ee 0f       	add	r30, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2297
    7370:	ff 1f       	adc	r31, r31
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2328
    7372:	05 90       	lpm	r0, Z+
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2329
    7374:	f4 91       	lpm	r31, Z
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2330
    7376:	e0 2d       	mov	r30, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2331
    7378:	09 94       	ijmp

0000737a <__mulshisi3>:
__mulshisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:603
    737a:	b7 ff       	sbrs	r27, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:605
    737c:	b8 ce       	rjmp	.-656    	; 0x70ee <__muluhisi3>

0000737e <__mulohisi3>:
__mulohisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:613
    737e:	b7 de       	rcall	.-658    	; 0x70ee <__muluhisi3>
    7380:	82 1b       	sub	r24, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:615
    7382:	93 0b       	sbc	r25, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:616
    7384:	08 95       	ret

00007386 <malloc>:
malloc():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:617
    7386:	0f 93       	push	r16
C:\Users\Manish.Acharya\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.10\libraries\Wire\src\utility/twi.c:315
    7388:	1f 93       	push	r17
    738a:	cf 93       	push	r28
    738c:	df 93       	push	r29
    738e:	82 30       	cpi	r24, 0x02	; 2
    7390:	91 05       	cpc	r25, r1
    7392:	10 f4       	brcc	.+4      	; 0x7398 <malloc+0x12>
    7394:	82 e0       	ldi	r24, 0x02	; 2
    7396:	90 e0       	ldi	r25, 0x00	; 0
    7398:	e0 91 73 30 	lds	r30, 0x3073	; 0x803073 <__flp>
    739c:	f0 91 74 30 	lds	r31, 0x3074	; 0x803074 <__flp+0x1>
    73a0:	30 e0       	ldi	r19, 0x00	; 0
    73a2:	20 e0       	ldi	r18, 0x00	; 0
    73a4:	b0 e0       	ldi	r27, 0x00	; 0
    73a6:	a0 e0       	ldi	r26, 0x00	; 0
    73a8:	30 97       	sbiw	r30, 0x00	; 0
    73aa:	99 f4       	brne	.+38     	; 0x73d2 <malloc+0x4c>
    73ac:	21 15       	cp	r18, r1
    73ae:	31 05       	cpc	r19, r1
    73b0:	09 f4       	brne	.+2      	; 0x73b4 <malloc+0x2e>
    73b2:	4a c0       	rjmp	.+148    	; 0x7448 <malloc+0xc2>
    73b4:	28 1b       	sub	r18, r24
    73b6:	39 0b       	sbc	r19, r25
    73b8:	24 30       	cpi	r18, 0x04	; 4
    73ba:	31 05       	cpc	r19, r1
    73bc:	d8 f5       	brcc	.+118    	; 0x7434 <malloc+0xae>
    73be:	8a 81       	ldd	r24, Y+2	; 0x02
    73c0:	9b 81       	ldd	r25, Y+3	; 0x03
    73c2:	61 15       	cp	r22, r1
    73c4:	71 05       	cpc	r23, r1
    73c6:	89 f1       	breq	.+98     	; 0x742a <malloc+0xa4>
    73c8:	fb 01       	movw	r30, r22
    73ca:	82 83       	std	Z+2, r24	; 0x02
    73cc:	93 83       	std	Z+3, r25	; 0x03
    73ce:	fe 01       	movw	r30, r28
    73d0:	11 c0       	rjmp	.+34     	; 0x73f4 <malloc+0x6e>
    73d2:	40 81       	ld	r20, Z
    73d4:	51 81       	ldd	r21, Z+1	; 0x01
    73d6:	02 81       	ldd	r16, Z+2	; 0x02
    73d8:	13 81       	ldd	r17, Z+3	; 0x03
    73da:	48 17       	cp	r20, r24
    73dc:	59 07       	cpc	r21, r25
    73de:	e0 f0       	brcs	.+56     	; 0x7418 <malloc+0x92>
    73e0:	48 17       	cp	r20, r24
    73e2:	59 07       	cpc	r21, r25
    73e4:	99 f4       	brne	.+38     	; 0x740c <malloc+0x86>
    73e6:	10 97       	sbiw	r26, 0x00	; 0
    73e8:	61 f0       	breq	.+24     	; 0x7402 <malloc+0x7c>
    73ea:	12 96       	adiw	r26, 0x02	; 2
    73ec:	0c 93       	st	X, r16
    73ee:	12 97       	sbiw	r26, 0x02	; 2
    73f0:	13 96       	adiw	r26, 0x03	; 3
    73f2:	1c 93       	st	X, r17
    73f4:	32 96       	adiw	r30, 0x02	; 2
    73f6:	cf 01       	movw	r24, r30
    73f8:	df 91       	pop	r29
    73fa:	cf 91       	pop	r28
    73fc:	1f 91       	pop	r17
    73fe:	0f 91       	pop	r16
    7400:	08 95       	ret
    7402:	00 93 73 30 	sts	0x3073, r16	; 0x803073 <__flp>
    7406:	10 93 74 30 	sts	0x3074, r17	; 0x803074 <__flp+0x1>
    740a:	f4 cf       	rjmp	.-24     	; 0x73f4 <malloc+0x6e>
    740c:	21 15       	cp	r18, r1
    740e:	31 05       	cpc	r19, r1
    7410:	51 f0       	breq	.+20     	; 0x7426 <malloc+0xa0>
    7412:	42 17       	cp	r20, r18
    7414:	53 07       	cpc	r21, r19
    7416:	38 f0       	brcs	.+14     	; 0x7426 <malloc+0xa0>
    7418:	a9 01       	movw	r20, r18
    741a:	db 01       	movw	r26, r22
    741c:	9a 01       	movw	r18, r20
    741e:	bd 01       	movw	r22, r26
    7420:	df 01       	movw	r26, r30
    7422:	f8 01       	movw	r30, r16
    7424:	c1 cf       	rjmp	.-126    	; 0x73a8 <malloc+0x22>
    7426:	ef 01       	movw	r28, r30
    7428:	f9 cf       	rjmp	.-14     	; 0x741c <malloc+0x96>
    742a:	80 93 73 30 	sts	0x3073, r24	; 0x803073 <__flp>
    742e:	90 93 74 30 	sts	0x3074, r25	; 0x803074 <__flp+0x1>
    7432:	cd cf       	rjmp	.-102    	; 0x73ce <malloc+0x48>
    7434:	fe 01       	movw	r30, r28
    7436:	e2 0f       	add	r30, r18
    7438:	f3 1f       	adc	r31, r19
    743a:	81 93       	st	Z+, r24
    743c:	91 93       	st	Z+, r25
    743e:	22 50       	subi	r18, 0x02	; 2
    7440:	31 09       	sbc	r19, r1
    7442:	28 83       	st	Y, r18
    7444:	39 83       	std	Y+1, r19	; 0x01
    7446:	d7 cf       	rjmp	.-82     	; 0x73f6 <malloc+0x70>
    7448:	20 91 71 30 	lds	r18, 0x3071	; 0x803071 <__brkval>
    744c:	30 91 72 30 	lds	r19, 0x3072	; 0x803072 <__brkval+0x1>
    7450:	23 2b       	or	r18, r19
    7452:	41 f4       	brne	.+16     	; 0x7464 <malloc+0xde>
    7454:	20 91 08 28 	lds	r18, 0x2808	; 0x802808 <__malloc_heap_start>
    7458:	30 91 09 28 	lds	r19, 0x2809	; 0x802809 <__malloc_heap_start+0x1>
    745c:	20 93 71 30 	sts	0x3071, r18	; 0x803071 <__brkval>
    7460:	30 93 72 30 	sts	0x3072, r19	; 0x803072 <__brkval+0x1>
    7464:	20 91 06 28 	lds	r18, 0x2806	; 0x802806 <__malloc_heap_end>
    7468:	30 91 07 28 	lds	r19, 0x2807	; 0x802807 <__malloc_heap_end+0x1>
    746c:	21 15       	cp	r18, r1
    746e:	31 05       	cpc	r19, r1
    7470:	41 f4       	brne	.+16     	; 0x7482 <malloc+0xfc>
    7472:	2d b7       	in	r18, 0x3d	; 61
    7474:	3e b7       	in	r19, 0x3e	; 62
    7476:	40 91 0a 28 	lds	r20, 0x280A	; 0x80280a <__malloc_margin>
    747a:	50 91 0b 28 	lds	r21, 0x280B	; 0x80280b <__malloc_margin+0x1>
    747e:	24 1b       	sub	r18, r20
    7480:	35 0b       	sbc	r19, r21
    7482:	e0 91 71 30 	lds	r30, 0x3071	; 0x803071 <__brkval>
    7486:	f0 91 72 30 	lds	r31, 0x3072	; 0x803072 <__brkval+0x1>
    748a:	e2 17       	cp	r30, r18
    748c:	f3 07       	cpc	r31, r19
    748e:	a0 f4       	brcc	.+40     	; 0x74b8 <malloc+0x132>
    7490:	2e 1b       	sub	r18, r30
    7492:	3f 0b       	sbc	r19, r31
    7494:	28 17       	cp	r18, r24
    7496:	39 07       	cpc	r19, r25
    7498:	78 f0       	brcs	.+30     	; 0x74b8 <malloc+0x132>
    749a:	ac 01       	movw	r20, r24
    749c:	4e 5f       	subi	r20, 0xFE	; 254
    749e:	5f 4f       	sbci	r21, 0xFF	; 255
    74a0:	24 17       	cp	r18, r20
    74a2:	35 07       	cpc	r19, r21
    74a4:	48 f0       	brcs	.+18     	; 0x74b8 <malloc+0x132>
    74a6:	4e 0f       	add	r20, r30
    74a8:	5f 1f       	adc	r21, r31
    74aa:	40 93 71 30 	sts	0x3071, r20	; 0x803071 <__brkval>
    74ae:	50 93 72 30 	sts	0x3072, r21	; 0x803072 <__brkval+0x1>
    74b2:	81 93       	st	Z+, r24
    74b4:	91 93       	st	Z+, r25
    74b6:	9f cf       	rjmp	.-194    	; 0x73f6 <malloc+0x70>
    74b8:	f0 e0       	ldi	r31, 0x00	; 0
    74ba:	e0 e0       	ldi	r30, 0x00	; 0
    74bc:	9c cf       	rjmp	.-200    	; 0x73f6 <malloc+0x70>

000074be <free>:
free():
    74be:	cf 93       	push	r28
    74c0:	df 93       	push	r29
    74c2:	00 97       	sbiw	r24, 0x00	; 0
    74c4:	e9 f0       	breq	.+58     	; 0x7500 <free+0x42>
    74c6:	fc 01       	movw	r30, r24
    74c8:	32 97       	sbiw	r30, 0x02	; 2
    74ca:	12 82       	std	Z+2, r1	; 0x02
    74cc:	13 82       	std	Z+3, r1	; 0x03
    74ce:	a0 91 73 30 	lds	r26, 0x3073	; 0x803073 <__flp>
    74d2:	b0 91 74 30 	lds	r27, 0x3074	; 0x803074 <__flp+0x1>
    74d6:	ed 01       	movw	r28, r26
    74d8:	30 e0       	ldi	r19, 0x00	; 0
    74da:	20 e0       	ldi	r18, 0x00	; 0
    74dc:	10 97       	sbiw	r26, 0x00	; 0
    74de:	a1 f4       	brne	.+40     	; 0x7508 <free+0x4a>
    74e0:	20 81       	ld	r18, Z
    74e2:	31 81       	ldd	r19, Z+1	; 0x01
    74e4:	82 0f       	add	r24, r18
    74e6:	93 1f       	adc	r25, r19
    74e8:	20 91 71 30 	lds	r18, 0x3071	; 0x803071 <__brkval>
    74ec:	30 91 72 30 	lds	r19, 0x3072	; 0x803072 <__brkval+0x1>
    74f0:	28 17       	cp	r18, r24
    74f2:	39 07       	cpc	r19, r25
    74f4:	09 f0       	breq	.+2      	; 0x74f8 <free+0x3a>
    74f6:	61 c0       	rjmp	.+194    	; 0x75ba <free+0xfc>
    74f8:	e0 93 71 30 	sts	0x3071, r30	; 0x803071 <__brkval>
    74fc:	f0 93 72 30 	sts	0x3072, r31	; 0x803072 <__brkval+0x1>
    7500:	df 91       	pop	r29
    7502:	cf 91       	pop	r28
    7504:	08 95       	ret
    7506:	ea 01       	movw	r28, r20
    7508:	ce 17       	cp	r28, r30
    750a:	df 07       	cpc	r29, r31
    750c:	e8 f5       	brcc	.+122    	; 0x7588 <free+0xca>
    750e:	4a 81       	ldd	r20, Y+2	; 0x02
    7510:	5b 81       	ldd	r21, Y+3	; 0x03
    7512:	9e 01       	movw	r18, r28
    7514:	41 15       	cp	r20, r1
    7516:	51 05       	cpc	r21, r1
    7518:	b1 f7       	brne	.-20     	; 0x7506 <free+0x48>
    751a:	e9 01       	movw	r28, r18
    751c:	ea 83       	std	Y+2, r30	; 0x02
    751e:	fb 83       	std	Y+3, r31	; 0x03
    7520:	49 91       	ld	r20, Y+
    7522:	59 91       	ld	r21, Y+
    7524:	c4 0f       	add	r28, r20
    7526:	d5 1f       	adc	r29, r21
    7528:	ec 17       	cp	r30, r28
    752a:	fd 07       	cpc	r31, r29
    752c:	61 f4       	brne	.+24     	; 0x7546 <free+0x88>
    752e:	80 81       	ld	r24, Z
    7530:	91 81       	ldd	r25, Z+1	; 0x01
    7532:	02 96       	adiw	r24, 0x02	; 2
    7534:	84 0f       	add	r24, r20
    7536:	95 1f       	adc	r25, r21
    7538:	e9 01       	movw	r28, r18
    753a:	88 83       	st	Y, r24
    753c:	99 83       	std	Y+1, r25	; 0x01
    753e:	82 81       	ldd	r24, Z+2	; 0x02
    7540:	93 81       	ldd	r25, Z+3	; 0x03
    7542:	8a 83       	std	Y+2, r24	; 0x02
    7544:	9b 83       	std	Y+3, r25	; 0x03
    7546:	f0 e0       	ldi	r31, 0x00	; 0
    7548:	e0 e0       	ldi	r30, 0x00	; 0
    754a:	12 96       	adiw	r26, 0x02	; 2
    754c:	8d 91       	ld	r24, X+
    754e:	9c 91       	ld	r25, X
    7550:	13 97       	sbiw	r26, 0x03	; 3
    7552:	00 97       	sbiw	r24, 0x00	; 0
    7554:	b9 f5       	brne	.+110    	; 0x75c4 <free+0x106>
    7556:	2d 91       	ld	r18, X+
    7558:	3c 91       	ld	r19, X
    755a:	11 97       	sbiw	r26, 0x01	; 1
    755c:	cd 01       	movw	r24, r26
    755e:	02 96       	adiw	r24, 0x02	; 2
    7560:	82 0f       	add	r24, r18
    7562:	93 1f       	adc	r25, r19
    7564:	20 91 71 30 	lds	r18, 0x3071	; 0x803071 <__brkval>
    7568:	30 91 72 30 	lds	r19, 0x3072	; 0x803072 <__brkval+0x1>
    756c:	28 17       	cp	r18, r24
    756e:	39 07       	cpc	r19, r25
    7570:	39 f6       	brne	.-114    	; 0x7500 <free+0x42>
    7572:	30 97       	sbiw	r30, 0x00	; 0
    7574:	51 f5       	brne	.+84     	; 0x75ca <free+0x10c>
    7576:	10 92 73 30 	sts	0x3073, r1	; 0x803073 <__flp>
    757a:	10 92 74 30 	sts	0x3074, r1	; 0x803074 <__flp+0x1>
    757e:	a0 93 71 30 	sts	0x3071, r26	; 0x803071 <__brkval>
    7582:	b0 93 72 30 	sts	0x3072, r27	; 0x803072 <__brkval+0x1>
    7586:	bc cf       	rjmp	.-136    	; 0x7500 <free+0x42>
    7588:	c2 83       	std	Z+2, r28	; 0x02
    758a:	d3 83       	std	Z+3, r29	; 0x03
    758c:	40 81       	ld	r20, Z
    758e:	51 81       	ldd	r21, Z+1	; 0x01
    7590:	84 0f       	add	r24, r20
    7592:	95 1f       	adc	r25, r21
    7594:	c8 17       	cp	r28, r24
    7596:	d9 07       	cpc	r29, r25
    7598:	61 f4       	brne	.+24     	; 0x75b2 <free+0xf4>
    759a:	4e 5f       	subi	r20, 0xFE	; 254
    759c:	5f 4f       	sbci	r21, 0xFF	; 255
    759e:	88 81       	ld	r24, Y
    75a0:	99 81       	ldd	r25, Y+1	; 0x01
    75a2:	48 0f       	add	r20, r24
    75a4:	59 1f       	adc	r21, r25
    75a6:	40 83       	st	Z, r20
    75a8:	51 83       	std	Z+1, r21	; 0x01
    75aa:	8a 81       	ldd	r24, Y+2	; 0x02
    75ac:	9b 81       	ldd	r25, Y+3	; 0x03
    75ae:	82 83       	std	Z+2, r24	; 0x02
    75b0:	93 83       	std	Z+3, r25	; 0x03
    75b2:	21 15       	cp	r18, r1
    75b4:	31 05       	cpc	r19, r1
    75b6:	09 f0       	breq	.+2      	; 0x75ba <free+0xfc>
    75b8:	b0 cf       	rjmp	.-160    	; 0x751a <free+0x5c>
    75ba:	e0 93 73 30 	sts	0x3073, r30	; 0x803073 <__flp>
    75be:	f0 93 74 30 	sts	0x3074, r31	; 0x803074 <__flp+0x1>
    75c2:	9e cf       	rjmp	.-196    	; 0x7500 <free+0x42>
    75c4:	fd 01       	movw	r30, r26
    75c6:	dc 01       	movw	r26, r24
    75c8:	c0 cf       	rjmp	.-128    	; 0x754a <free+0x8c>
    75ca:	12 82       	std	Z+2, r1	; 0x02
    75cc:	13 82       	std	Z+3, r1	; 0x03
    75ce:	d7 cf       	rjmp	.-82     	; 0x757e <free+0xc0>

000075d0 <realloc>:
realloc():
    75d0:	b0 e0       	ldi	r27, 0x00	; 0
    75d2:	a0 e0       	ldi	r26, 0x00	; 0
    75d4:	ed ee       	ldi	r30, 0xED	; 237
    75d6:	fa e3       	ldi	r31, 0x3A	; 58
    75d8:	96 cd       	rjmp	.-1236   	; 0x7106 <__prologue_saves__+0x4>
    75da:	8c 01       	movw	r16, r24
    75dc:	00 97       	sbiw	r24, 0x00	; 0
    75de:	41 f4       	brne	.+16     	; 0x75f0 <realloc+0x20>
    75e0:	cb 01       	movw	r24, r22
    75e2:	d1 de       	rcall	.-606    	; 0x7386 <malloc>
    75e4:	8c 01       	movw	r16, r24
    75e6:	c8 01       	movw	r24, r16
    75e8:	cd b7       	in	r28, 0x3d	; 61
    75ea:	de b7       	in	r29, 0x3e	; 62
    75ec:	e0 e1       	ldi	r30, 0x10	; 16
    75ee:	a4 cd       	rjmp	.-1208   	; 0x7138 <__epilogue_restores__+0x4>
    75f0:	fc 01       	movw	r30, r24
    75f2:	e6 0f       	add	r30, r22
    75f4:	f7 1f       	adc	r31, r23
    75f6:	9c 01       	movw	r18, r24
    75f8:	22 50       	subi	r18, 0x02	; 2
    75fa:	31 09       	sbc	r19, r1
    75fc:	e2 17       	cp	r30, r18
    75fe:	f3 07       	cpc	r31, r19
    7600:	08 f4       	brcc	.+2      	; 0x7604 <realloc+0x34>
    7602:	99 c0       	rjmp	.+306    	; 0x7736 <realloc+0x166>
    7604:	d9 01       	movw	r26, r18
    7606:	cd 91       	ld	r28, X+
    7608:	dc 91       	ld	r29, X
    760a:	11 97       	sbiw	r26, 0x01	; 1
    760c:	c6 17       	cp	r28, r22
    760e:	d7 07       	cpc	r29, r23
    7610:	90 f0       	brcs	.+36     	; 0x7636 <realloc+0x66>
    7612:	c5 30       	cpi	r28, 0x05	; 5
    7614:	d1 05       	cpc	r29, r1
    7616:	38 f3       	brcs	.-50     	; 0x75e6 <realloc+0x16>
    7618:	ce 01       	movw	r24, r28
    761a:	04 97       	sbiw	r24, 0x04	; 4
    761c:	86 17       	cp	r24, r22
    761e:	97 07       	cpc	r25, r23
    7620:	10 f3       	brcs	.-60     	; 0x75e6 <realloc+0x16>
    7622:	c6 1b       	sub	r28, r22
    7624:	d7 0b       	sbc	r29, r23
    7626:	22 97       	sbiw	r28, 0x02	; 2
    7628:	c1 93       	st	Z+, r28
    762a:	d1 93       	st	Z+, r29
    762c:	6d 93       	st	X+, r22
    762e:	7c 93       	st	X, r23
    7630:	cf 01       	movw	r24, r30
    7632:	45 df       	rcall	.-374    	; 0x74be <free>
    7634:	d8 cf       	rjmp	.-80     	; 0x75e6 <realloc+0x16>
    7636:	5b 01       	movw	r10, r22
    7638:	ac 1a       	sub	r10, r28
    763a:	bd 0a       	sbc	r11, r29
    763c:	4c 01       	movw	r8, r24
    763e:	8c 0e       	add	r8, r28
    7640:	9d 1e       	adc	r9, r29
    7642:	a0 91 73 30 	lds	r26, 0x3073	; 0x803073 <__flp>
    7646:	b0 91 74 30 	lds	r27, 0x3074	; 0x803074 <__flp+0x1>
    764a:	51 2c       	mov	r5, r1
    764c:	41 2c       	mov	r4, r1
    764e:	f1 2c       	mov	r15, r1
    7650:	e1 2c       	mov	r14, r1
    7652:	10 97       	sbiw	r26, 0x00	; 0
    7654:	31 f5       	brne	.+76     	; 0x76a2 <realloc+0xd2>
    7656:	80 91 71 30 	lds	r24, 0x3071	; 0x803071 <__brkval>
    765a:	90 91 72 30 	lds	r25, 0x3072	; 0x803072 <__brkval+0x1>
    765e:	88 15       	cp	r24, r8
    7660:	99 05       	cpc	r25, r9
    7662:	09 f0       	breq	.+2      	; 0x7666 <realloc+0x96>
    7664:	5c c0       	rjmp	.+184    	; 0x771e <realloc+0x14e>
    7666:	46 16       	cp	r4, r22
    7668:	57 06       	cpc	r5, r23
    766a:	08 f0       	brcs	.+2      	; 0x766e <realloc+0x9e>
    766c:	58 c0       	rjmp	.+176    	; 0x771e <realloc+0x14e>
    766e:	80 91 06 28 	lds	r24, 0x2806	; 0x802806 <__malloc_heap_end>
    7672:	90 91 07 28 	lds	r25, 0x2807	; 0x802807 <__malloc_heap_end+0x1>
    7676:	00 97       	sbiw	r24, 0x00	; 0
    7678:	41 f4       	brne	.+16     	; 0x768a <realloc+0xba>
    767a:	8d b7       	in	r24, 0x3d	; 61
    767c:	9e b7       	in	r25, 0x3e	; 62
    767e:	40 91 0a 28 	lds	r20, 0x280A	; 0x80280a <__malloc_margin>
    7682:	50 91 0b 28 	lds	r21, 0x280B	; 0x80280b <__malloc_margin+0x1>
    7686:	84 1b       	sub	r24, r20
    7688:	95 0b       	sbc	r25, r21
    768a:	e8 17       	cp	r30, r24
    768c:	f9 07       	cpc	r31, r25
    768e:	08 f0       	brcs	.+2      	; 0x7692 <realloc+0xc2>
    7690:	52 c0       	rjmp	.+164    	; 0x7736 <realloc+0x166>
    7692:	e0 93 71 30 	sts	0x3071, r30	; 0x803071 <__brkval>
    7696:	f0 93 72 30 	sts	0x3072, r31	; 0x803072 <__brkval+0x1>
    769a:	f9 01       	movw	r30, r18
    769c:	60 83       	st	Z, r22
    769e:	71 83       	std	Z+1, r23	; 0x01
    76a0:	a2 cf       	rjmp	.-188    	; 0x75e6 <realloc+0x16>
    76a2:	8d 91       	ld	r24, X+
    76a4:	9c 91       	ld	r25, X
    76a6:	11 97       	sbiw	r26, 0x01	; 1
    76a8:	12 96       	adiw	r26, 0x02	; 2
    76aa:	6c 90       	ld	r6, X
    76ac:	12 97       	sbiw	r26, 0x02	; 2
    76ae:	13 96       	adiw	r26, 0x03	; 3
    76b0:	7c 90       	ld	r7, X
    76b2:	13 97       	sbiw	r26, 0x03	; 3
    76b4:	a8 15       	cp	r26, r8
    76b6:	b9 05       	cpc	r27, r9
    76b8:	59 f5       	brne	.+86     	; 0x7710 <realloc+0x140>
    76ba:	6c 01       	movw	r12, r24
    76bc:	42 e0       	ldi	r20, 0x02	; 2
    76be:	c4 0e       	add	r12, r20
    76c0:	d1 1c       	adc	r13, r1
    76c2:	ca 14       	cp	r12, r10
    76c4:	db 04       	cpc	r13, r11
    76c6:	20 f1       	brcs	.+72     	; 0x7710 <realloc+0x140>
    76c8:	ac 01       	movw	r20, r24
    76ca:	4a 19       	sub	r20, r10
    76cc:	5b 09       	sbc	r21, r11
    76ce:	da 01       	movw	r26, r20
    76d0:	12 96       	adiw	r26, 0x02	; 2
    76d2:	15 97       	sbiw	r26, 0x05	; 5
    76d4:	80 f0       	brcs	.+32     	; 0x76f6 <realloc+0x126>
    76d6:	62 82       	std	Z+2, r6	; 0x02
    76d8:	73 82       	std	Z+3, r7	; 0x03
    76da:	40 83       	st	Z, r20
    76dc:	51 83       	std	Z+1, r21	; 0x01
    76de:	d9 01       	movw	r26, r18
    76e0:	6d 93       	st	X+, r22
    76e2:	7c 93       	st	X, r23
    76e4:	e1 14       	cp	r14, r1
    76e6:	f1 04       	cpc	r15, r1
    76e8:	71 f0       	breq	.+28     	; 0x7706 <realloc+0x136>
    76ea:	d7 01       	movw	r26, r14
    76ec:	12 96       	adiw	r26, 0x02	; 2
    76ee:	ed 93       	st	X+, r30
    76f0:	fc 93       	st	X, r31
    76f2:	13 97       	sbiw	r26, 0x03	; 3
    76f4:	78 cf       	rjmp	.-272    	; 0x75e6 <realloc+0x16>
    76f6:	22 96       	adiw	r28, 0x02	; 2
    76f8:	8c 0f       	add	r24, r28
    76fa:	9d 1f       	adc	r25, r29
    76fc:	f9 01       	movw	r30, r18
    76fe:	80 83       	st	Z, r24
    7700:	91 83       	std	Z+1, r25	; 0x01
    7702:	f3 01       	movw	r30, r6
    7704:	ef cf       	rjmp	.-34     	; 0x76e4 <realloc+0x114>
    7706:	e0 93 73 30 	sts	0x3073, r30	; 0x803073 <__flp>
    770a:	f0 93 74 30 	sts	0x3074, r31	; 0x803074 <__flp+0x1>
    770e:	6b cf       	rjmp	.-298    	; 0x75e6 <realloc+0x16>
    7710:	48 16       	cp	r4, r24
    7712:	59 06       	cpc	r5, r25
    7714:	08 f4       	brcc	.+2      	; 0x7718 <realloc+0x148>
    7716:	2c 01       	movw	r4, r24
    7718:	7d 01       	movw	r14, r26
    771a:	d3 01       	movw	r26, r6
    771c:	9a cf       	rjmp	.-204    	; 0x7652 <realloc+0x82>
    771e:	cb 01       	movw	r24, r22
    7720:	32 de       	rcall	.-924    	; 0x7386 <malloc>
    7722:	7c 01       	movw	r14, r24
    7724:	00 97       	sbiw	r24, 0x00	; 0
    7726:	39 f0       	breq	.+14     	; 0x7736 <realloc+0x166>
    7728:	ae 01       	movw	r20, r28
    772a:	b8 01       	movw	r22, r16
    772c:	0f d0       	rcall	.+30     	; 0x774c <memcpy>
    772e:	c8 01       	movw	r24, r16
    7730:	c6 de       	rcall	.-628    	; 0x74be <free>
    7732:	87 01       	movw	r16, r14
    7734:	58 cf       	rjmp	.-336    	; 0x75e6 <realloc+0x16>
    7736:	10 e0       	ldi	r17, 0x00	; 0
    7738:	00 e0       	ldi	r16, 0x00	; 0
    773a:	55 cf       	rjmp	.-342    	; 0x75e6 <realloc+0x16>

0000773c <toupper>:
toupper():
    773c:	91 11       	cpse	r25, r1
    773e:	08 95       	ret
    7740:	81 56       	subi	r24, 0x61	; 97
    7742:	8a 51       	subi	r24, 0x1A	; 26
    7744:	08 f4       	brcc	.+2      	; 0x7748 <toupper+0xc>
    7746:	80 52       	subi	r24, 0x20	; 32
    7748:	85 58       	subi	r24, 0x85	; 133
    774a:	08 95       	ret

0000774c <memcpy>:
memcpy():
    774c:	fb 01       	movw	r30, r22
    774e:	dc 01       	movw	r26, r24
    7750:	02 c0       	rjmp	.+4      	; 0x7756 <memcpy+0xa>
    7752:	01 90       	ld	r0, Z+
    7754:	0d 92       	st	X+, r0
    7756:	41 50       	subi	r20, 0x01	; 1
    7758:	50 40       	sbci	r21, 0x00	; 0
    775a:	d8 f7       	brcc	.-10     	; 0x7752 <memcpy+0x6>
    775c:	08 95       	ret

0000775e <memset>:
memset():
    775e:	dc 01       	movw	r26, r24
    7760:	01 c0       	rjmp	.+2      	; 0x7764 <memset+0x6>
    7762:	6d 93       	st	X+, r22
    7764:	41 50       	subi	r20, 0x01	; 1
    7766:	50 40       	sbci	r21, 0x00	; 0
    7768:	e0 f7       	brcc	.-8      	; 0x7762 <memset+0x4>
    776a:	08 95       	ret

0000776c <strcpy>:
strcpy():
    776c:	fb 01       	movw	r30, r22
    776e:	dc 01       	movw	r26, r24
    7770:	01 90       	ld	r0, Z+
    7772:	0d 92       	st	X+, r0
    7774:	00 20       	and	r0, r0
    7776:	e1 f7       	brne	.-8      	; 0x7770 <strcpy+0x4>
    7778:	08 95       	ret

0000777a <sprintf>:
sprintf():
    777a:	ae e0       	ldi	r26, 0x0E	; 14
    777c:	b0 e0       	ldi	r27, 0x00	; 0
    777e:	e2 ec       	ldi	r30, 0xC2	; 194
    7780:	fb e3       	ldi	r31, 0x3B	; 59
    7782:	cd cc       	rjmp	.-1638   	; 0x711e <__prologue_saves__+0x1c>
    7784:	0d 89       	ldd	r16, Y+21	; 0x15
    7786:	1e 89       	ldd	r17, Y+22	; 0x16
    7788:	86 e0       	ldi	r24, 0x06	; 6
    778a:	8c 83       	std	Y+4, r24	; 0x04
    778c:	09 83       	std	Y+1, r16	; 0x01
    778e:	1a 83       	std	Y+2, r17	; 0x02
    7790:	8f ef       	ldi	r24, 0xFF	; 255
    7792:	9f e7       	ldi	r25, 0x7F	; 127
    7794:	8d 83       	std	Y+5, r24	; 0x05
    7796:	9e 83       	std	Y+6, r25	; 0x06
    7798:	ae 01       	movw	r20, r28
    779a:	47 5e       	subi	r20, 0xE7	; 231
    779c:	5f 4f       	sbci	r21, 0xFF	; 255
    779e:	6f 89       	ldd	r22, Y+23	; 0x17
    77a0:	78 8d       	ldd	r23, Y+24	; 0x18
    77a2:	ce 01       	movw	r24, r28
    77a4:	01 96       	adiw	r24, 0x01	; 1
    77a6:	e3 d9       	rcall	.-3130   	; 0x6b6e <vfprintf>
    77a8:	2f 81       	ldd	r18, Y+7	; 0x07
    77aa:	38 85       	ldd	r19, Y+8	; 0x08
    77ac:	02 0f       	add	r16, r18
    77ae:	13 1f       	adc	r17, r19
    77b0:	f8 01       	movw	r30, r16
    77b2:	10 82       	st	Z, r1
    77b4:	2e 96       	adiw	r28, 0x0e	; 14
    77b6:	e4 e0       	ldi	r30, 0x04	; 4
    77b8:	cb cc       	rjmp	.-1642   	; 0x7150 <__epilogue_restores__+0x1c>

000077ba <__do_global_dtors>:
__do_global_dtors():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2496
    77ba:	1d e0       	ldi	r17, 0x0D	; 13
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2497
    77bc:	c8 ea       	ldi	r28, 0xA8	; 168
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2498
    77be:	dd e0       	ldi	r29, 0x0D	; 13
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2502
    77c0:	03 c0       	rjmp	.+6      	; 0x77c8 <__do_global_dtors+0xe>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2508
    77c2:	fe 01       	movw	r30, r28
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2509
    77c4:	d4 dd       	rcall	.-1112   	; 0x736e <__tablejump2__>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2510
    77c6:	21 96       	adiw	r28, 0x01	; 1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2515
    77c8:	c9 3a       	cpi	r28, 0xA9	; 169
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2516
    77ca:	d1 07       	cpc	r29, r17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2521
    77cc:	d1 f7       	brne	.-12     	; 0x77c2 <__do_global_dtors+0x8>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2278
    77ce:	f8 94       	cli

000077d0 <__stop_program>:
__stop_program():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2280
    77d0:	ff cf       	rjmp	.-2      	; 0x77d0 <__stop_program>
